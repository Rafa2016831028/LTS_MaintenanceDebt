https://api.github.com/repos/python/cpython,111171,backport-6c23635-3.12::3.12,0,merged,,"asyncio.TaskGroup and asyncio.Timeout classes now raise proper RuntimeError if they are improperly used. * When they are used without entering the context manager. * When they are used after finishing. * When the context manager is entered more than once (simultaneously or sequentially). * If there is no current task when entering the context manager. They now remain in a consistent state after an exception is thrown, so subsequent operations can be performed correctly (if they are allowed). (cherry picked from commit 6c23635f2b7067ef091a550954e09f8b7c329e3f) Co-authored-by: Serhiy Storchaka <storchaka@gmail.com> Co-authored-by: James Hilton-Balfe <gobot1234yt@gmail.com> <!-- gh-issue-number: gh-111085 --> * Issue: gh-111085 <!-- /gh-issue-number --> ::",Miss Islington (bot),31488909,73,1,120,9,6,0,b1524c52e9f97b0aaa000e609aac29deefcb86b9::
https://api.github.com/repos/python/cpython,111170,backport-fd60549-3.11::3.11,0,merged,type-bug::,(cherry picked from commit fd60549c0ac6c81f05594a5141d24b4433ae39be) Co-authored-by: Nikita Sobolev <mail@sobolevn.me> <!-- gh-issue-number: gh-111159 --> * Issue: gh-111159 <!-- /gh-issue-number --> ::,Miss Islington (bot),31488909,73,1,159,1,3,0,ee6345c70e03f3b9943484dfc1ba67e30e18088e::
https://api.github.com/repos/python/cpython,111169,backport-fd60549-3.12::3.12,0,merged,type-bug::,(cherry picked from commit fd60549c0ac6c81f05594a5141d24b4433ae39be) Co-authored-by: Nikita Sobolev <mail@sobolevn.me> <!-- gh-issue-number: gh-111159 --> * Issue: gh-111159 <!-- /gh-issue-number --> ::,Miss Islington (bot),31488909,73,1,159,1,3,0,47994b0210dbd4f77673565f39c8c2d1d40a7de1::
https://api.github.com/repos/python/cpython,111168,backport-9a1fe09-3.11::3.11,0,merged,,"Test case matching patterns specified by options --match, --ignore, --matchfile and --ignorefile are now tested in the order of specification, and the last match determines whether the test case be run or ignored. (cherry picked from commit 9a1fe09622cd0f1e24c2ba5335c94c5d70306fd0) <!-- gh-issue-number: gh-110918 --> * Issue: gh-110918 <!-- /gh-issue-number --> ::",Serhiy Storchaka,3659035,401,1,126,141,12,0,b7cf01e85a757548b8453318c594cb2ffeebca7d::
https://api.github.com/repos/python/cpython,111167,backport-9a1fe09-3.12::3.12,0,merged,,"Test case matching patterns specified by options --match, --ignore, --matchfile and --ignorefile are now tested in the order of specification, and the last match determines whether the test case be run or ignored. (cherry picked from commit 9a1fe09622cd0f1e24c2ba5335c94c5d70306fd0) <!-- gh-issue-number: gh-110918 --> * Issue: gh-110918 <!-- /gh-issue-number --> ::",Serhiy Storchaka,3659035,401,1,126,141,12,0,72c8c61905fa524272a9d19c174fc1c3cf57896b::
https://api.github.com/repos/python/cpython,111164,backport-5e7727b-3.11::3.11,0,merged,skip news::,(cherry picked from commit 5e7727b05232b43589d177c15263d7f4f8c584a0) Co-authored-by: Nikita Sobolev <mail@sobolevn.me> <!-- gh-issue-number: gh-111157 --> * Issue: gh-111157 <!-- /gh-issue-number --> ::,Miss Islington (bot),31488909,73,1,12,15,1,0,2b40ab386fd292c271cf6d14a81d760af4ee2d9e::
https://api.github.com/repos/python/cpython,111163,backport-5e7727b-3.12::3.12,0,merged,skip news::,(cherry picked from commit 5e7727b05232b43589d177c15263d7f4f8c584a0) Co-authored-by: Nikita Sobolev <mail@sobolevn.me> <!-- gh-issue-number: gh-111157 --> * Issue: gh-111157 <!-- /gh-issue-number --> ::,Miss Islington (bot),31488909,73,1,12,15,1,0,8036c93ad3289dac119e2c118a4c4569e45f5821::
https://api.github.com/repos/python/cpython,111161,backport-f71cd53-3.12::3.12,0,merged,skip news::,(cherry picked from commit f71cd5394efe154ba92228b2b67be910cc1ede95) Co-authored-by: Nikita Sobolev <mail@sobolevn.me> <!-- gh-issue-number: gh-110572 --> * Issue: gh-110572 <!-- /gh-issue-number --> ::,Miss Islington (bot),31488909,73,1,57,33,1,0,2413dbda747ee7c17e48d730df30be1b631ab0ab::
https://api.github.com/repos/python/cpython,111160,issue-111159::main,0,merged,type-bug::,"Do we need more tests for this? What else can be added? <!-- gh-issue-number: gh-111159 --> * Issue: gh-111159 <!-- /gh-issue-number --> ::Not sure this comment is necessary.::Is this correct? What about the notes? I think we need a test for SyntaxError because it's different.::Indeed, it is not. SyntaxError with notes does not pass. Fixing!::```suggestion def test_syntax_error_with_incorrect_expected_note(): ``` (because this is how the test is written).::",Nikita Sobolev,4660275,4663,5,159,1,3,0,30669a89386f45256c37da5c6a134e6223c816a7::d9f14fa6df93e6739550c2c143df4644d3d3acc6::a7daef0797dc6dcc05144475f308d65391065114::a5f73568ae04747e6251f0ed05ecb5f5048771e6::3666503db7b6a6fd586b49b77e85ce2f0f97a550::
https://api.github.com/repos/python/cpython,111158,issue-111157::main,0,merged,docs::skip news::,<!-- gh-issue-number: gh-111157 --> * Issue: gh-111157 <!-- /gh-issue-number --> ::This still says that the generator normally emits one string.::```suggestion all the exception's ``__notes__``. ```::,Nikita Sobolev,4660275,4663,4,12,15,1,0,82f353825350007dc08898471e6bc28f33a4ef13::919d35ed50d715225a197c7314a692c52ff3bb91::9531e49fdac4d575d26493b2eb6eab55c2ce5a5a::cecf02b9d716962d06ae6fdd115d8b3578761f21::
https://api.github.com/repos/python/cpython,111156,issue-111155::main,0,merged,tests::skip news::,"<!-- gh-issue-number: gh-111155 --> * Issue: gh-111155 <!-- /gh-issue-number --> ::Use re.escape().::No need to import it locally instead of at the top of the module.::I think it would look clearer if only escape `__name__`. ```suggestion self.assertRegex(formatted, fr""<{re.escape(__name__)}.dataclass3 object at \w+>"") ``` But it is only a nitpick.::",Nikita Sobolev,4660275,4663,4,5,1,1,0,2d029a5c5381b240acd59a7aa137e008aab6ed9a::6d22cb3a4e8c53382cecbb83ee552f72622aa631::03854e619523178c4cb433aba06d5ab04190b944::47c99daf22bfbbf9f75bc0d036445419881ab6af::
https://api.github.com/repos/python/cpython,111154,backport-7237fb5-3.12::3.12,0,merged,,"If the SOURCE_DATE_EPOCH environment variable is defined, use its value as the random seed. (cherry picked from commit 7237fb578dc9db9dc557759a24d8083425107b91) Co-authored-by: Victor Stinner <vstinner@python.org> <!-- gh-issue-number: gh-110932 --> * Issue: gh-110932 <!-- /gh-issue-number --> ::",Miss Islington (bot),31488909,73,1,75,22,4,0,91ad185c008fde56620eb7f463afca4f3f94aa86::
https://api.github.com/repos/python/cpython,111153,backport-7237fb5-3.11::3.11,0,merged,,"If the SOURCE_DATE_EPOCH environment variable is defined, use its value as the random seed. (cherry picked from commit 7237fb578dc9db9dc557759a24d8083425107b91) Co-authored-by: Victor Stinner <vstinner@python.org> <!-- gh-issue-number: gh-110932 --> * Issue: gh-110932 <!-- /gh-issue-number --> ::",Miss Islington (bot),31488909,73,1,75,22,4,0,76f4d891419cc150d99329ce8df7476c78879d6b::
https://api.github.com/repos/python/cpython,111149,main::main,0,closed,docs::skip news::,"`:class:`, `:func:` directives auto-apply a monospaced font to the displayed text, which doesn't look very nice semantically. `:ref:` directives are the way to go when it comes to internal linking. <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--111149.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::",InSync,122007197,0,1,8,4,1,0,2c47b8bf102b86941c14bbbae486811c10db472c::
https://api.github.com/repos/python/cpython,111144,instr_ptr::main,0,closed,,"Once ready this should be merged into gh-109095. I'm unhappy with how this turned out; it's too complicated and unprincipled. I feel I don't know which invariants apply when to frame->instr_ptr and frame->next_instr_offset, and the clever exceptions in the code generator and the Tier 1-2 translator. It feels too much like programming by random modifications. If this passes all tests it should probably be merged into Irit's instr_ptr branch.::",Guido van Rossum,2894642,21056,80,250,157,21,0,637b5da32aef41fb09894b70071326e814121e7d::ffb980cd469d424a8e9bf732c1f9919b9fbe8800::82a5b920228f4abe41dd2421df60de12e86cb833::1fc0df17399189d867b01692c47ec0d3dd98cc8d::6bbb1c269becbb67e5839304482674dc840bbe15::be6d4280d6b6e1d6b880180e536c80d0c23bb551::bbe8e2cc41ff07331ff9b17ead648dcf2a9f646a::50a1f3ab8d956c813b07c2062a7f37b38880f783::4beb50ba192de33c1f5f499e106ed21f078184c8::8e4a310be3145950fefd9c04c441770509a262b6::58d3bc53128aff00eda933921ddf139674026bdd::909de93d3159ac9a9f594cef469da7257b4b14ea::0a06b752d63499508d5baaa1d63bbafcf2f37d82::da6c97b4e0a765930f1bf89d7dda1c11497f76c8::6488d69caf41f2d3d46d0988ab0e41eeb5d2c6ed::6c684b046f70ba45e6fd8ae9b42bde447a013575::b6a8b0c9fab82355e67ccc86fc21e014fe0dd429::1ceeba1dc47c9948ef0062812eed62aa1d6d442d::371fa66a501f04d7528bae07faed814130ffb662::557f36fcff7efe6c4470d5ce25afc2b762b72336::cb22365be78438c6e58a5354a36aeb9d44168a75::987570473a38017b7c31261b7a6c196a6263c325::aea21a60cb57c0e8b0e7e97cd26f9eccfcbef509::b2221d1b9a10df2e3a8f718033c068e52a137457::7078fe5fd1ba1ed5162fd19d7d62797228d6891b::3ac7cc6b5c1461bdf1ca539c21da75a91699dc30::5a672a49917923aeceac8de2ec1c67dafe5ec730::4fd470e23f266e90235f31dd74940965fd54c168::d676f9ca742d5037dfda9bdc1970a61745049506::1afba52d02026d2e42f14b1700530f91d30bd66d::8b1643ad0851913b2f5fd8f0e3c1ae759c4a9772::a386deefa16a440fd7068d3bde02648f89305496::32b2cfde8c10c5e4bf225db237562120da72cd42::add2321eb3bd58eccf4069bfc1deed9d5cfb08f4::218228bb6d3b3ecb203319329f533c642f65a600::0d0c25d93ea4afa15b2957486c33e490f511a393::4418fc4fa8da61a6cf457fd515399754128fa4bb::e07b415e7ba0fe38580e756d2099c4ae28ec29cc::cb96aa0437eb152380f57b31762f62489f7c9122::729944fd61bb030a612844395db52c17bb7b8aa4::44e37eeac86e1ca34c95b6a8d15cc892b5e947c3::b3b55ee28e9981f4cb6233e8754f7318512d6be8::6f0fe7b29d306db957cde76b6da4cd1d3644354b::2cf7e9496cfbfe8f551e37a6e05bc3bc13a1d2cd::66005ce6d151ce8e1925893004278efed2d14b89::c9a9601ec026b048749598afd75f96934463a591::764bd37636bb11222120bf70fe5a91acc9fff3a5::30e74de5427c0e91b952429da2be401a29a8c54f::b63c8dace658d91844998ccb448a8abc172c993a::8bade18ff71f522887a3559be63e81d7db723a3e::8b14bdeb59b9294ee38535775b26d5c8b530ab98::d1387eddc5542b7c876af2533125a007a5383e89::9c10b8df05ad6626d1c472cfd9abcbd792d1982d::287c1a5504e286c229611db90eb12c887a410e78::36397964d9da6f84221ec2930166348e3ad2f3e8::41bba621bae282cbf7966d21f56062845f1ba1f3::d363fc386eff2c3e9eb726156907406721b36d61::efa8eab8947a2d772fbf1c9274beb2034b4e3941::86cf45f5f7c83accca8e05bcc369ffee2e0bf2ce::19da0c0a260ac1d66744579c9cf3ea951855f9e3::cbee4f8a5357ece28acbb2f15629a10cda978af5::3a9a029d3abb8455c14acfca65d22a311bbac7ba::a44f4dbefee94ece9364f01097bb95dcfabc1444::62ca8ce8ebdc9e516c9596d5b885bb16e6722b2d::3fa0423f9d86b2e4d69254778a1911b09bbf8ed4::488e5e7278896337992001c40fd06b6793710193::85f08bc94a807118d1f1ae9a78b5401ebde14486::012f911da815e3149718546f7da8356572b12a1f::3fcfc479b66a61e34c1f174721d2f2b305628d69::d796107892d94198ba157416d699fabcc7fe0e98::76474e3019479966b9a0c5e82a2ac11a1e47de04::3fcbc3aba3959bd0aab947f9363bc483b4f8c657::2043c83bb45956afced5fea0ceb450dc978a1cf0::3511bef3bfafbacdaa576820cb23ce52497722bd::6a8558882c12fa2ccf534d825101e321f9cf1cad::8ccbe6e598444fb637e3696683dfbaf7103d37dd::a8b0155253e02b42aec96a7041cc3dbe55b996cf::06a470d85007410156609b27ecbc9b3300173505::868e73b7d6c75a96e0e5657b902bdf78fce4e188::d3db1e0814fa1d770b8b33852a8998a620243828::
https://api.github.com/repos/python/cpython,111143,regrtest_epoch::main,0,merged,,"If the SOURCE_DATE_EPOCH environment variable is defined, use its value as the random seed. <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-110932 --> * Issue: gh-110932 <!-- /gh-issue-number --> ::nit ```suggestion if ( 'SOURCE_DATE_EPOCH' in os.environ ```::Myabe we should always use `str`? There's no real reason to use `int` here.::If so, it would become: ```suggestion self.random_seed = str(random.getrandbits(32)) ```::The reason is subtle. It avoids to import hashlib to convert a string to an integer in Random.seed(). Right now, hashlib is always imported, but I have a local branch to reduce the number of imports at Python startup.::I'm talking about the second code path, where we create a random seed as an integer.::",Victor Stinner,194129,1148,1,75,22,4,0,55bf9f796c9c360989ca86a7a91891f35dab5ee4::
https://api.github.com/repos/python/cpython,111142,gh-111123::main,0,merged,type-bug::interpreter-core::,"Fixes #111123 . <!-- gh-issue-number: gh-111123 --> * Issue: gh-111123 <!-- /gh-issue-number --> ::```suggestion Fix bug where a :keyword:`global` declaration in an :keyword:`except` block ```::```suggestion Fix a bug where a :keyword:`global` declaration in an :keyword:`except` block ``` ::Typo: should be ""declaration""::",Irit Katriel,1055913,162,6,25,2,4,0,b76251b041f91bbfada6b462771f1ed5ed3fb11b::1db8a700a52ce009c53685f76e377d6bff687362::1e121f83b13b7ad19f01142a42dec2581b00bcdd::72fd4d1ce08e888a06ff56720c95e1cd7ee5ac9a::2216553c2e170d241b3f7589902462c119e328d1::eafa6d1fb19db4c8994b9a41cbb878b54ce33cbc::
https://api.github.com/repos/python/cpython,111141,backport-5dfa717-3.12::3.12,0,merged,,(cherry picked from commit 5dfa71769f547fffa893a89b0b04d963a41b2441) Co-authored-by: YAMAMOTO Takashi <yamamoto@midokura.com> <!-- gh-issue-number: gh-111046 --> * Issue: gh-111046 <!-- /gh-issue-number --> ::,Miss Islington (bot),31488909,73,1,11,0,3,1,aafa2ecf5f396208993df3c93b0bfab23df638fb::
https://api.github.com/repos/python/cpython,111137,issue-111133::main,0,merged,skip news::,"<!-- gh-issue-number: gh-111133 --> * Issue: gh-111133 <!-- /gh-issue-number --> ::`check_complexity` is only used in `safe_multiply` so, I deleted code which related to sets.::",Kirill Podoprigora,80244920,38,1,3,14,1,0,96c3f2e7946712c2bfb17ae1ccb5bf854dd83526::
https://api.github.com/repos/python/cpython,111136,issue-111132::main,0,merged,skip news::,"Here's what happens (at least in my understanding): we only change `interactive_filename` to a new object if `interactive_src` is set. https://github.com/python/cpython/commit/e1d8c65e1df990ef8d61b8912742e1a021395e78 But, otherwise, it still remains an old https://github.com/python/cpython/commit/e1d8c65e1df990ef8d61b8912742e1a021395e78#diff-2ecd9b536bc387479d824dc4b53f89679d6978d25c6b8a28ab21ed03e745e46eR1270 `filename` object. So, I guess that we only need to decref this object when `interactive_src` is set. <!-- gh-issue-number: gh-111132 --> * Issue: gh-111132 <!-- /gh-issue-number --> ::",Nikita Sobolev,4660275,4663,2,14,1,2,0,36f210f12d345e5f9e25a7609a1c66f7538a66a0::05c5b075997fa57f1b0ac11b871e4aff774b5f66::
https://api.github.com/repos/python/cpython,111131,backport-ea7c26e-3.11::3.11,0,merged,tests::skip news::,(cherry picked from commit ea7c26e4b89c71234c4a603567a93f0a44c9cc97) Co-authored-by: Nikita Sobolev <mail@sobolevn.me> <!-- gh-issue-number: gh-111126 --> * Issue: gh-111126 <!-- /gh-issue-number --> ::,Miss Islington (bot),31488909,73,1,4,4,1,0,222989c7e1404e477f598e7a59c6a6312a443d22::
https://api.github.com/repos/python/cpython,111130,backport-ea7c26e-3.12::3.12,0,merged,tests::skip news::,(cherry picked from commit ea7c26e4b89c71234c4a603567a93f0a44c9cc97) Co-authored-by: Nikita Sobolev <mail@sobolevn.me> <!-- gh-issue-number: gh-111126 --> * Issue: gh-111126 <!-- /gh-issue-number --> ::,Miss Islington (bot),31488909,73,1,4,4,1,0,e9ebe4c96bbbefd814849315bba6e5f59798558d::
https://api.github.com/repos/python/cpython,111129,issue-111128::main,0,closed,tests::awaiting review::,<!-- gh-issue-number: gh-111128 --> * Issue: gh-111128 <!-- /gh-issue-number --> ::,Nikita Sobolev,4660275,4663,1,7,5,1,0,536efd7b8af9c62202b3d912424c11b596fb2e85::
https://api.github.com/repos/python/cpython,111127,issue-111126::main,0,merged,tests::skip news::,<!-- gh-issue-number: gh-111126 --> * Issue: gh-111126 <!-- /gh-issue-number --> ::,Nikita Sobolev,4660275,4663,1,4,4,1,0,bc12dc56a29eea187c9e025b47f8e68a0df1d9f2::
https://api.github.com/repos/python/cpython,111124,test_lock::main,0,merged,tests::skip news::3.13::,"This allows for more time for the ""lock thread"" to attempt to lock the mutex (up to two seconds before timing out). <!-- gh-issue-number: gh-111119 --> * Issue: gh-111119 <!-- /gh-issue-number --> ::",Sam Gross,655866,1625,1,12,4,1,0,eeaa70b6ad143d7cfeac87306acf17095b3c23b0::
https://api.github.com/repos/python/cpython,111122,sqlite_asutf8::main,0,merged,skip news::,"PyUnicode_AsUTF8() now raises an exception if the string contains embedded null characters. <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-111089 --> * Issue: gh-111089 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,1,1,6,1,0,714c652082ab8bb81e248e0945e76039c9b349a9::
https://api.github.com/repos/python/cpython,111121,limited_asutf8::main,0,merged,,"Add PyUnicode_AsUTF8() function to the limited C API. multiprocessing posixshmem now uses PyUnicode_AsUTF8() instead of PyUnicode_AsUTF8AndSize(): the extension is built with the limited C API. The function now raises an exception if the filename contains an embedded null character instead of truncating silently the filename. <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-111089 --> * Issue: gh-111089 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--111121.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::Why not simply use the `str` converter?::Ah, I see why. `path` is passed to `PyErr_SetFromErrnoWithFilenameObject()`.::",Victor Stinner,194129,1148,1,23,16,9,0,e20557c711f27ff026a3b42fe57b2d3ae0ba14bc::
https://api.github.com/repos/python/cpython,111120,revert-gh-110093-socketmodule::main,0,merged,skip news::,<!-- gh-issue-number: gh-110093 --> * Issue: gh-110093 <!-- /gh-issue-number --> ::,Serhiy Storchaka,3659035,401,1,3,1,1,0,4b878773d5fb15fc43aeafd196cc8b34e55fabe9::
https://api.github.com/repos/python/cpython,111115,backport-ff4e53c-3.11::3.11,0,merged,tests::skip issue::skip news::,(cherry picked from commit ff4e53cb747063e95eaec181fd396f062f885ac2) Co-authored-by: Serhiy Storchaka <storchaka@gmail.com>::,Miss Islington (bot),31488909,73,1,46,0,1,0,07d39db0162992f95eccc2adff8d3127cdd862d0::
https://api.github.com/repos/python/cpython,111114,backport-ff4e53c-3.12::3.12,0,merged,tests::skip issue::skip news::,(cherry picked from commit ff4e53cb747063e95eaec181fd396f062f885ac2) Co-authored-by: Serhiy Storchaka <storchaka@gmail.com>::,Miss Islington (bot),31488909,73,1,46,0,1,0,505068430e069c93d7fafa61a672eb8e2739442a::
https://api.github.com/repos/python/cpython,111111,asyncio-taskgroups-timeouts-states::main,0,merged,topic-asyncio::,"asyncio.TaskGroup and asyncio.Timeout classes now raise proper RuntimeError if they are improperly used. * When they are used without entering the context manager. * When they are used after finishing. * When the context manager is entered more than once (simultaneously or sequentially). * If there is no current task when entering the context manager. They are now left in consistent state after raising an exception, so following operations can be correctly performed (if they are allowed). <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-111085 --> * Issue: gh-111085 <!-- /gh-issue-number --> ::```suggestion improperly used and are left in consistent state after this. ```::Looking at the list of states, this produces crooked grammar in several cases (active, expiring). Maybe ""Timeout cannot be entered in state X""? Or look at the error in reschedule() for inspiration.::A perfect staircase! :-)::Maybe `except BaseException as err: nonlocal exc; exc = err` ?::Thank you, I did not know that ""already active"" and ""already expiring"" are not valid. In TaskGroup it is simply ""has been already entered"" but I decided to enhance it. Technically, ""already entered"" should be enough. `reschedule()` also produces weird message (""Cannot change state of created Timeout""). How can you change state of not created Timeout?::Sorry, English grammar is hard. It should be ""has already been entered"".::",Serhiy Storchaka,3659035,401,7,120,9,6,0,a9c546fcb6ee284a1355ff17c9434a5c4a9ca792::3127e26470b8e62408bdbcddc3af4285cd54fdcd::5dfbb3d4b51335e2178988b064f49d483a945af0::ce732fba204c2a3934ff44b028bda2079a03706c::0b0bdb0108151097e595d891805d13b1105e8d8d::0285c70b76438374ee626d4142cdc6341a94d496::95673e63080fd995656175a8054d6994ccc29948::
https://api.github.com/repos/python/cpython,111109,backport-11312ea-3.11::3.11,0,merged,,(cherry picked from commit 11312eae6ec3acf51aacafce4cb6d1a5edfd5f2e) Co-authored-by: Tamás Hegedűs <sorgloomer@users.noreply.github.com> <!-- gh-issue-number: gh-110913 --> * Issue: gh-110913 <!-- /gh-issue-number --> ::,Miss Islington (bot),31488909,73,1,21,16,2,0,14c3a17d02c3c4b2f14da6a1560a17d3bb43e1b4::
https://api.github.com/repos/python/cpython,111108,backport-11312ea-3.12::3.12,0,merged,,(cherry picked from commit 11312eae6ec3acf51aacafce4cb6d1a5edfd5f2e) Co-authored-by: Tamás Hegedűs <sorgloomer@users.noreply.github.com> <!-- gh-issue-number: gh-110913 --> * Issue: gh-110913 <!-- /gh-issue-number --> ::,Miss Islington (bot),31488909,73,1,21,16,2,0,24508ef172ef22e216ea7159dab05eead100d333::
https://api.github.com/repos/python/cpython,111106,asutf8andsize::main,0,merged,skip news::,"On error, PyUnicode_AsUTF8AndSize() now sets the size argument to 0, to avoid undefined value. <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-111089 --> * Issue: gh-111089 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--111106.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::```suggestion On error, set an exception, set *size* to ``0`` (if it's not ``NULL``) and return ```::",Victor Stinner,194129,1148,1,11,4,3,0,ae7734d64c266183e492c28a1c9b474f29f67daf::
https://api.github.com/repos/python/cpython,111105,backport-b60f058-3.12::3.12,0,merged,tests::skip issue::skip news::,(cherry picked from commit b60f05870816019cfd9b2f7d104364613e66fc78) Co-authored-by: Serhiy Storchaka <storchaka@gmail.com>::,Miss Islington (bot),31488909,73,1,4,0,1,0,d2b43e323b0439ea95a26325c0d05d4148b1d31a::
https://api.github.com/repos/python/cpython,111100,test_capi-unicode_asutf8andsize_null-errors::main,0,merged,tests::skip issue::skip news::topic-C-API::,::,Serhiy Storchaka,3659035,401,1,4,0,1,0,f10b65e7dfa0cc80a25e6cc64c416887ea826f25::
https://api.github.com/repos/python/cpython,111099,wasi-threads2::main,0,merged,,"with the latest spec, we should import and export memory for wasi-threads. some runtimes (eg. wasmtime) actually rely on it. issue: https://github.com/python/cpython/issues/111046 tested with: toywasm, wasmtime <!-- gh-issue-number: gh-111046 --> * Issue: gh-111046 <!-- /gh-issue-number --> ::",YAMAMOTO Takashi,1845377,67,3,11,0,3,1,0281300fef325bb0803e65c43f1cbb44ae99099f::3b7bd72016641b369a3859fbd135ce7c1d5599b8::10370e6e5d0fe526ff8b22fdf0bf6d1f1febff9b::
https://api.github.com/repos/python/cpython,111098,backport-c42c68a-3.11::3.11,0,merged,skip news::,Fix Sphinx warnings in library/tty.rst (cherry picked from commit c42c68aa7bd19b0de7f2132ed468bc4ce83d8aa9) Co-authored-by: Hugo van Kemenade <hugovk@users.noreply.github.com> <!-- gh-issue-number: gh-101100 --> * Issue: gh-101100 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--111098.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::,Miss Islington (bot),31488909,73,1,14,5,2,0,b8846e6722f0ba0d74a61d070627b2f4852770ca::
https://api.github.com/repos/python/cpython,111097,backport-c42c68a-3.12::3.12,0,merged,skip news::,Fix Sphinx warnings in library/tty.rst (cherry picked from commit c42c68aa7bd19b0de7f2132ed468bc4ce83d8aa9) Co-authored-by: Hugo van Kemenade <hugovk@users.noreply.github.com> <!-- gh-issue-number: gh-101100 --> * Issue: gh-101100 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--111097.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::,Miss Islington (bot),31488909,73,1,14,5,2,0,e7d2c9308293c517c1fb2de7ed3bdabfb3a62945::
https://api.github.com/repos/python/cpython,111096,backport-b802882-3.11::3.11,0,merged,,Add missing 'root' argument to PanedWindow call. Other root children already have it. (cherry picked from commit b802882fb2bff8b431df661322908c07491f3ce7) Co-authored-by: Terry Jan Reedy <tjreedy@udel.edu> <!-- gh-issue-number: gh-111092 --> * Issue: gh-111092 <!-- /gh-issue-number --> ::,Miss Islington (bot),31488909,73,1,2,1,2,0,fcf1f0c51b24ba9f9858e0fa53bb24c0051c1c29::
https://api.github.com/repos/python/cpython,111095,backport-b802882-3.12::3.12,0,merged,,Add missing 'root' argument to PanedWindow call. Other root children already have it. (cherry picked from commit b802882fb2bff8b431df661322908c07491f3ce7) Co-authored-by: Terry Jan Reedy <tjreedy@udel.edu> <!-- gh-issue-number: gh-111092 --> * Issue: gh-111092 <!-- /gh-issue-number --> ::,Miss Islington (bot),31488909,73,1,2,1,2,0,43b935dc5463a29e617a5392b6dd89155355e14c::
https://api.github.com/repos/python/cpython,111093,tdemoroot::main,0,merged,,"Add missing 'root' argument to PanedWindow call.  Other root children already have it. <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-111092 --> * Issue: gh-111092 <!-- /gh-issue-number --> ::",Terry Jan Reedy,19036496,98,1,2,1,2,1,7ea0d4859078e535ce01f898483c12e14ea7b8e0::
https://api.github.com/repos/python/cpython,111091,asutf8::main,0,merged,,"* PyUnicode_AsUTF8() now raises an exception if the string contains embedded null characters. * PyUnicode_AsUTF8AndSize() now sets `*size` to 0 on error to avoid undefined variable value. * Update related C API tests (test_capi.test_unicode). * type_new_set_doc() uses PyUnicode_AsUTF8AndSize() to silently truncate doc containing null bytes. <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-111089 --> * Issue: gh-111089 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--111091.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::```suggestion if (utf8 != NULL && strlen(utf8) != (size_t)size) { ```::Was it necessary to change the type of the comment? Most comments here are `/* */`. It makes reviewing the changes more difficult.::`psize` can be NULL. I have added tests for this: #111100.::Oh I see. Thanks for additional tests. I moved this unrelated change to its own PR: PR #111106.::It's not necessary, but I take this PR as an opportunity to change the comment style. IMO multi-line comments written with ``// comment`` syntax are way easier to read.::```suggestion if (utf8 != NULL && strlen(utf8) != (size_t)size) { ```::",Victor Stinner,194129,1148,2,49,25,8,0,4e0b3d378ca0c82f5439fe960063cdf4dbdc3c7f::957c433446c9ad3f50495e4ded95cf70d2b7ca92::
https://api.github.com/repos/python/cpython,111087,posixshmem::main,0,merged,,"Build the _multiprocessing.posixshmem extension with the Limited C API. * Add <errno.h> include. * Replace PyUnicode_AsUTF8() with PyUnicode_AsUTF8AndSize(). <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-85283 --> * Issue: gh-85283 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--111087.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::",Victor Stinner,194129,1148,1,24,104,4,0,45ecc0c6f44f5cd33405e2f3178b9666b30ae54f::
https://api.github.com/repos/python/cpython,111083,main::main,0,merged,skip issue::skip news::,"<!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> ::",Ned Batchelder,23789,2120,1,1,0,1,0,3781c5b075a265e0604dca7323d7948476aed367::
https://api.github.com/repos/python/cpython,111080,backport-d144749-3.12::3.12,0,merged,skip news::,"(cherry picked from commit d144749914dbe295d71d037e8ca695783511123f) <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-101100 --> * Issue: gh-101100 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--111080.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::",Hugo van Kemenade,1324225,628,1,1,2,2,0,f842c3bff4eaef4413f614461516f8ed8ea440ca::
https://api.github.com/repos/python/cpython,111079,docs-fix-sphinx-tty::main,0,merged,skip news::,"<!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> Fixes these warnings: ``` Doc/library/termios.rst:44: WARNING: py:const reference target not found: TCSANOW Doc/library/termios.rst:44: WARNING: py:const reference target not found: TCSADRAIN Doc/library/termios.rst:44: WARNING: py:const reference target not found: TCSAFLUSH Doc/library/tty.rst:41: WARNING: py:const reference target not found: termios.TCSAFLUSH Doc/library/tty.rst:52: WARNING: py:const reference target not found: termios.TCSAFLUSH ``` (Some remain in `termios.rst` that can be handled later.) `termios.rst` renders like this: ![image](https://github.com/python/cpython/assets/1324225/8b39313b-5cf1-4bec-91e1-9b58cbeed390) <!-- gh-issue-number: gh-101100 --> * Issue: gh-101100 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews.readthedocs.io/en/latest/library/termios.html <!-- readthedocs-preview cpython-previews end -->::",Hugo van Kemenade,1324225,628,1,14,5,2,0,c34162b6d2ffa28ca44c7d3474d881c22f04eaa6::
https://api.github.com/repos/python/cpython,111078,backport-bcc941b-3.11::3.11,0,merged,docs::skip news::,(cherry picked from commit bcc941bd4a7fbed3b20f5a5fc68b183fda1506a5) Co-authored-by: Unique-Usman <86585626+Unique-Usman@users.noreply.github.com> Co-authored-by: Mariatta <Mariatta@users.noreply.github.com> Co-authored-by: Jacob Coffee <jacob@z7x.org> Co-authored-by: Hugo van Kemenade <hugovk@users.noreply.github.com> Co-authored-by: C.A.M. Gerlach <CAM.Gerlach@Gerlach.CAM> <!-- gh-issue-number: gh-109510 --> * Issue: gh-109510 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--111078.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::,Miss Islington (bot),31488909,73,1,24,3,1,0,edfb8d6806d6e2c47e8c062e6442f5e8f504eb21::
https://api.github.com/repos/python/cpython,111077,backport-bcc941b-3.12::3.12,0,merged,docs::skip news::,(cherry picked from commit bcc941bd4a7fbed3b20f5a5fc68b183fda1506a5) Co-authored-by: Unique-Usman <86585626+Unique-Usman@users.noreply.github.com> Co-authored-by: Mariatta <Mariatta@users.noreply.github.com> Co-authored-by: Jacob Coffee <jacob@z7x.org> Co-authored-by: Hugo van Kemenade <hugovk@users.noreply.github.com> Co-authored-by: C.A.M. Gerlach <CAM.Gerlach@Gerlach.CAM> <!-- gh-issue-number: gh-109510 --> * Issue: gh-109510 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--111077.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::,Miss Islington (bot),31488909,73,1,24,3,1,0,0abd7ef2efad164d362eb4cc27d5b3fc86ad6abf::
https://api.github.com/repos/python/cpython,111076,backport-63acf78-3.11::3.11,0,merged,docs::skip news::,(cherry picked from commit 63acf78d710461919b285213fadc817108fb754e) Co-authored-by: Adam Turner <9087854+AA-Turner@users.noreply.github.com> <!-- gh-issue-number: gh-101100 --> * Issue: gh-101100 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--111076.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::,Miss Islington (bot),31488909,73,1,58,58,11,0,d59f11ce80ddd04fce02f824cc7dc409f40235d8::
https://api.github.com/repos/python/cpython,111075,backport-63acf78-3.12::3.12,0,merged,docs::skip news::,(cherry picked from commit 63acf78d710461919b285213fadc817108fb754e) Co-authored-by: Adam Turner <9087854+AA-Turner@users.noreply.github.com> <!-- gh-issue-number: gh-101100 --> * Issue: gh-101100 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--111075.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::,Miss Islington (bot),31488909,73,1,58,58,11,0,120f41103909cc9fbbe4a939adb409fb66178a91::
https://api.github.com/repos/python/cpython,111074,backport-da99133-3.11::3.11,0,merged,docs::skip news::,(cherry picked from commit da991337105e6d87b85a20fdcb386aa140f94d23) Co-authored-by: Adam Turner <9087854+AA-Turner@users.noreply.github.com> <!-- gh-issue-number: gh-101100 --> * Issue: gh-101100 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--111074.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::,Miss Islington (bot),31488909,73,1,38,38,20,0,c0aa39d18d5a49d66bee1ee3cf88c9a2da43268a::
https://api.github.com/repos/python/cpython,111073,backport-da99133-3.12::3.12,0,merged,docs::skip news::,(cherry picked from commit da991337105e6d87b85a20fdcb386aa140f94d23) Co-authored-by: Adam Turner <9087854+AA-Turner@users.noreply.github.com> <!-- gh-issue-number: gh-101100 --> * Issue: gh-101100 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--111073.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::,Miss Islington (bot),31488909,73,1,38,38,20,0,fe33b2e0acc7fc75f0b5a6a0239d8a9acda14437::
https://api.github.com/repos/python/cpython,111072,backport-d144749-3.11::3.11,0,merged,skip news::,(cherry picked from commit d144749914dbe295d71d037e8ca695783511123f) Co-authored-by: Nikita Sobolev <mail@sobolevn.me> <!-- gh-issue-number: gh-101100 --> * Issue: gh-101100 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--111072.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::,Miss Islington (bot),31488909,73,1,1,2,2,0,915edb811ef156e82cae12d3b3e9f9419395faad::
https://api.github.com/repos/python/cpython,111071,backport-a89708a-3.11::3.11,0,merged,skip news::,(cherry picked from commit a89708aeeaa32135dcde5b728800b9bc7801c80c) Co-authored-by: Nikita Sobolev <mail@sobolevn.me> <!-- gh-issue-number: gh-101100 --> * Issue: gh-101100 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--111071.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::```suggestion | uu_codec             | uu               | Convert the operand using    | :meth:`!uu.encode` /         | |                      |                  | uuencode.                    | :meth:`!uu.decode`           | ```::,Miss Islington (bot),31488909,73,3,38,34,2,0,624c53dc5ca5662faac93eebf6bab7900aad9992::5e9a8495cde2a1867b341af479f786fb1692ceb1::e5df9ecbfec9de4bab9a207f96a140f38df7876f::
https://api.github.com/repos/python/cpython,111070,backport-a89708a-3.12::3.12,0,merged,skip news::,"(cherry picked from commit a89708aeeaa32135dcde5b728800b9bc7801c80c) Co-authored-by: Nikita Sobolev <mail@sobolevn.me> <!-- gh-issue-number: gh-101100 --> * Issue: gh-101100 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--111070.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::```suggestion | uu_codec             | uu               | Convert the operand using    | :meth:`!uu.encode` /         | |                      |                  | uuencode.                    | :meth:`!uu.decode`           | ```::We can mention that they are deprecated (if there's enough space in the table)::Something like https://github.com/python/cpython/pull/111070/commits/828687752c8953727e0c9e5995a80a97b25d85c8? ![image](https://github.com/python/cpython/assets/1324225/93d9eff7-02cc-4665-bccc-69cf786ecfe1) Or as a `[2]` footnote?::1. seems better, if the whole table won't need a refactoring 2. is also fine 👍 ::I'll update the 3.11 backport to match this one.::",Miss Islington (bot),31488909,73,3,38,34,2,0,07a8d00c97ea9ee69da0f22379bf025adad15c2e::849bdc79940f1ccfbdf95180ade6da16d11c25de::828687752c8953727e0c9e5995a80a97b25d85c8::
https://api.github.com/repos/python/cpython,111064,backport-162213f-3.12::3.12,0,merged,,(cherry picked from commit https://github.com/python/cpython/commit/162213f2db3835e1115178d38741544f4b4db416) Co-authored-by: Radislav Chugunov <52372310+chgnrdv@users.noreply.github.com> <!-- gh-issue-number: gh-108791 --> * Issue: gh-108791 <!-- /gh-issue-number --> ::,Radislav Chugunov,52372310,4,2,24,2,3,0,a1eac28dc373e432642a529413a3176b73014c6f::0204cd6c10fd48779d5c41be1b0999863139fb29::
https://api.github.com/repos/python/cpython,111063,backport-162213f-3.11::3.11,0,merged,,(cherry picked from commit https://github.com/python/cpython/commit/162213f2db3835e1115178d38741544f4b4db416) Co-authored-by: Radislav Chugunov <52372310+chgnrdv@users.noreply.github.com> <!-- gh-issue-number: gh-108791 --> * Issue: gh-108791 <!-- /gh-issue-number --> ::,Radislav Chugunov,52372310,4,2,24,2,3,0,9cce79fe509cc3a06747915ab5414d696692a1a4::3527d433e05e37c27ac767ffc54adf1f2b29f2f2::
https://api.github.com/repos/python/cpython,111061,backport-e9b5399-3.12::3.12,0,merged,tests::skip news::,(cherry picked from commit e9b5399bee7106beeeb38a45cfef3f0ed3fdd703) Co-authored-by: Nikita Sobolev <mail@sobolevn.me> <!-- gh-issue-number: gh-111031 --> * Issue: gh-111031 <!-- /gh-issue-number --> ::,Miss Islington (bot),31488909,73,1,0,10,1,0,0e04facc88e0c3cd3dd95238ad3a968c83550c20::
https://api.github.com/repos/python/cpython,111057,remove_unnecessary_while::main,0,merged,skip issue::skip news::,These changes remove unnecessary while left over from the commit 6e6c59b5085668f6047eb91bd671747b13fa36d1: ```python while True: try: return self._sock.recv_into(b) except timeout: self._timeout_occurred = True raise except InterruptedError:  // <---------- removed continue              // <---------- removed except error as e: if e.args[0] in _blocking_errnos: return None raise ``` --> ```python while True: try: return self._sock.recv_into(b) except timeout: self._timeout_occurred = True raise except error as e: if e.args[0] in _blocking_errnos: return None raise ```::,,1986234,4,1,9,10,1,0,bc7c348f1b8b409dfcf4887cacfa8e8f008908d8::
https://api.github.com/repos/python/cpython,111056,backport-642eb8d-3.11::3.11,0,merged,skip news::,"Replace tuple value with internal name, removing numbers. Remove sorting of already ordered dislay names. Remove '[0]' indexing into now-gone tuple. (cherry picked from commit 642eb8df951f2f1d4bf4d93ee568707c5bf40a96) Co-authored-by: Terry Jan Reedy <tjreedy@udel.edu> <!-- gh-issue-number: gh-111050 --> * Issue: gh-111050 <!-- /gh-issue-number --> ::",Miss Islington (bot),31488909,73,1,22,24,2,0,2961a2628ccce609e64c169f8414914baa5d3145::
https://api.github.com/repos/python/cpython,111055,backport-642eb8d-3.12::3.12,0,merged,skip news::,"Replace tuple value with internal name, removing numbers. Remove sorting of already ordered dislay names. Remove '[0]' indexing into now-gone tuple. (cherry picked from commit 642eb8df951f2f1d4bf4d93ee568707c5bf40a96) Co-authored-by: Terry Jan Reedy <tjreedy@udel.edu> <!-- gh-issue-number: gh-111050 --> * Issue: gh-111050 <!-- /gh-issue-number --> ::",Miss Islington (bot),31488909,73,1,22,24,2,0,027567e69489c1fd89c8bf5353921419f30b0f8e::
https://api.github.com/repos/python/cpython,111053,theme_dict::main,0,merged,skip news::,"Replace tuple value with internal name, removing numbers. Remove sorting of already ordered dislay names. Remove '[0]' indexing into now-gone tuple. <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-111050 --> * Issue: gh-111050 <!-- /gh-issue-number --> ::",Terry Jan Reedy,19036496,98,2,22,24,2,0,870da37dbfefb6ce5177d44aad6a3b0100ae970d::7f048c5756ab3a78682d59be2f48a90927dd5611::
https://api.github.com/repos/python/cpython,111048,backport-1991694-3.12::3.12,0,merged,docs::skip news::,(cherry picked from commit 19916941172844f9c52d7a6dce95efaa23035772) <!-- gh-issue-number: gh-103082 --> * Issue: gh-103082 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--111048.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::,Brandt Bucher,40968415,377,1,165,101,2,1,2cc97708ca9b1f48de5cbffff45ec41694fdad17::
https://api.github.com/repos/python/cpython,111047,backport-d9246c7-3.12::3.12,0,merged,docs::skip news::,(cherry picked from commit d9246c7b734b8958da03494045208681d95f5b74) Co-authored-by: Tian Gao <gaogaotiantian@hotmail.com> <!-- gh-issue-number: gh-104232 --> * Issue: gh-104232 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--111047.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::,Miss Islington (bot),31488909,73,1,2,3,1,0,aa6adc3f182da68286b0c5cbf44755e08fc3c631::
https://api.github.com/repos/python/cpython,111045,backport-d9246c7-3.11::3.11,0,merged,docs::skip news::,(cherry picked from commit d9246c7b734b8958da03494045208681d95f5b74) Co-authored-by: Tian Gao <gaogaotiantian@hotmail.com> <!-- gh-issue-number: gh-104232 --> * Issue: gh-104232 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--111045.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::,Miss Islington (bot),31488909,73,1,2,3,1,0,5620fff23e4a8c9fd5e34671a4e52faf3246edc8::
https://api.github.com/repos/python/cpython,111040,typo-fix::main,0,merged,skip issue::skip news::,All credit for finding this goes to @PallHaraldsson This is the re-creation of https://github.com/python/cpython/pull/108625::,Nikita Sobolev,4660275,4663,1,2,2,2,0,02106aab16f56010b822c83f0a0927ab2700673b::
https://api.github.com/repos/python/cpython,111038,backport-cb1bf89-3.11::3.11,0,merged,,(cherry picked from commit cb1bf89c4066f30c80f7d1193b586a2ff8c40579) Co-authored-by: Joshua Root <jmr@macports.org> Co-authored-by: Ned Deily <nad@python.org> <!-- gh-issue-number: gh-111015 --> * Issue: gh-111015 <!-- /gh-issue-number --> ::,Miss Islington (bot),31488909,73,1,5,0,3,0,7d3a186872b565068c992389a4f9c64224928aee::
https://api.github.com/repos/python/cpython,111037,backport-cb1bf89-3.12::3.12,0,merged,,(cherry picked from commit cb1bf89c4066f30c80f7d1193b586a2ff8c40579) Co-authored-by: Joshua Root <jmr@macports.org> Co-authored-by: Ned Deily <nad@python.org> <!-- gh-issue-number: gh-111015 --> * Issue: gh-111015 <!-- /gh-issue-number --> ::,Miss Islington (bot),31488909,73,1,5,0,3,0,61c45706755e0e4d3f30f775d97edc1ee07510fd::
https://api.github.com/repos/python/cpython,111032,issue-111031::main,0,merged,tests::skip news::,"<!-- gh-issue-number: gh-111031 --> * Issue: gh-111031 <!-- /gh-issue-number --> ::On the other hand, it looks like we _can_ remove this line (and the five lines immediately above it). Now that the tokenizer no longer uses regular expressions, it seems it's able to tokenize this file fine::These also all seem to pass, though I'm not sure why they're currently removed (there's no comment indicating why)::Let's remove this as well::Maybe it was due to time concerns, but I don't think these files are particularly bad. If it passes now, let's remove the line and let's run the buildbots just to be sure::",Nikita Sobolev,4660275,4663,2,0,10,1,0,a82df84ea9aed56ebccf40096bed233587d3db4e::45944b93d0be5ed005ffd889c5a09bc5dc32de77::
https://api.github.com/repos/python/cpython,111027,backport-baefbb2-3.11::3.11,0,merged,skip news::,Add comments where .keys() is needed. Leave debugger usages along because situation is unclear as indicated in expanded comment. Most testing is manual. (cherry picked from commit baefbb21d91db2d950706737a6ebee9b2eff5c2d) Co-authored-by: Terry Jan Reedy <tjreedy@udel.edu> <!-- gh-issue-number: gh-103737 --> * Issue: gh-103737 <!-- /gh-issue-number --> ::,Miss Islington (bot),31488909,73,1,28,26,8,0,53e46fdf2d44c5e016516f096f9b813db3ef0ef2::
https://api.github.com/repos/python/cpython,111026,backport-baefbb2-3.12::3.12,0,merged,skip news::,Add comments where .keys() is needed. Leave debugger usages along because situation is unclear as indicated in expanded comment. Most testing is manual. (cherry picked from commit baefbb21d91db2d950706737a6ebee9b2eff5c2d) Co-authored-by: Terry Jan Reedy <tjreedy@udel.edu> <!-- gh-issue-number: gh-103737 --> * Issue: gh-103737 <!-- /gh-issue-number --> ::,Miss Islington (bot),31488909,73,1,28,26,8,0,3b041d709775a948ed478326be2c66056b41bf07::
https://api.github.com/repos/python/cpython,111025,backport-77dbd95-3.11::3.11,0,merged,skip issue::skip news::,Align expected and actual titles in output from assert_has_calls/assert_called_with for greater readability (cherry picked from commit 77dbd956090aac66e264d9d640f6adb6b0930b87) Co-authored-by: James <morisja@gmail.com> <!-- gh-issue-number: gh-111019 --> * Issue: gh-111019 <!-- /gh-issue-number --> ::,Miss Islington (bot),31488909,73,1,10,10,2,0,d67980809c0c3ae46ebbd0591f0d6dec1c9cb053::
https://api.github.com/repos/python/cpython,111024,backport-77dbd95-3.12::3.12,0,merged,skip issue::skip news::,Align expected and actual titles in output from assert_has_calls/assert_called_with for greater readability (cherry picked from commit 77dbd956090aac66e264d9d640f6adb6b0930b87) Co-authored-by: James <morisja@gmail.com> <!-- gh-issue-number: gh-111019 --> * Issue: gh-111019 <!-- /gh-issue-number --> ::,Miss Islington (bot),31488909,73,1,10,10,2,0,15b9718e2eae0016068be479d8bd9de763c61789::
https://api.github.com/repos/python/cpython,111023,backport-220bcc9-3.12::3.12,0,merged,tests::skip news::,(cherry picked from commit 220bcc9e27c89bf3b3609b80a31b1398840f195e) Co-authored-by: Nikita Sobolev <mail@sobolevn.me> <!-- gh-issue-number: gh-110938 --> * Issue: gh-110938 <!-- /gh-issue-number --> ::,Miss Islington (bot),31488909,73,2,15,0,1,0,896a88d46ac51a074b440afdbdfba86c7e087a72::9ccb237f94b07bfb8db3f0d52d0a2136f46df145::
https://api.github.com/repos/python/cpython,111022,backport-e7ae43a-3.12::3.12,0,merged,skip issue::skip news::,Fix https://github.com/python/cpython/security/dependabot/4: use urllib3 version 2.0.7. (cherry picked from commit e7ae43ad7dde74e731a9d258e372d17f3b2eb893) Co-authored-by: Victor Stinner <vstinner@python.org> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--111022.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::,Miss Islington (bot),31488909,73,1,1,2,1,0,3019270f4e4b4619f8cc892d8e4fed00116a66c7::
https://api.github.com/repos/python/cpython,111021,backport-e7ae43a-3.11::3.11,0,merged,skip issue::skip news::,Fix https://github.com/python/cpython/security/dependabot/4: use urllib3 version 2.0.7. (cherry picked from commit e7ae43ad7dde74e731a9d258e372d17f3b2eb893) Co-authored-by: Victor Stinner <vstinner@python.org> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--111021.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::,Miss Islington (bot),31488909,73,1,1,2,1,0,4647a7e4644334f82b5be80272c7e484c87c7c33::
https://api.github.com/repos/python/cpython,111020,gh-111019::main,0,merged,skip issue::skip news::,"Updates to output of assert_called_with/assert_has_calls ```pytb # before in assert_called_with raise AssertionError(_error_message()) from cause AssertionError: expected call not found. Expected: mock('foo', 'bar') Actual: mock('foo', 'foo') # after in assert_called_with raise AssertionError(_error_message()) from cause AssertionError: expected call not found. Expected: mock('foo', 'bar') Actual: mock('foo', 'foo') ---------------------------------------------------------------------- # before in assert_has_calls raise AssertionError( AssertionError: Calls not found. Expected: [call('foo', 'bar')] Actual: [call('foo', 'foo')] # after in assert_has_calls raise AssertionError( AssertionError: Calls not found. Expected: [call('foo', 'bar')] Actual: [call('foo', 'foo')] ---------------------------------------------------------------------- ``` <!-- gh-issue-number: gh-111019 --> * Issue: gh-111019 <!-- /gh-issue-number --> ::",James,10255832,0,1,10,10,2,0,0f8e8e45f2f50db8974e339745b547f2ac89ac87::
https://api.github.com/repos/python/cpython,111018,fix-issue-110383::main,0,closed,docs::awaiting review::skip news::,"<!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-110383 --> * Issue: gh-110383 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--111018.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::",James Garay,48111471,2,1,2,2,1,0,9dfea56fe533a00ddd379adf51329d80c3bfe75d::
https://api.github.com/repos/python/cpython,111017,gh-110961::main,0,merged,topic-asyncio::skip news::,"<!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> Simply removed that line. No need to add deprecation or other heavy information that already exist in the docs. <!-- gh-issue-number: gh-110961 --> * Issue: gh-110961 <!-- /gh-issue-number --> ::",Bar Harel,742359,13,3,0,2,1,0,7436618d0f1c16718f4214d1e804f5d79e30569c::8b9340c3d9413bb52066874df17306418ee1dda7::5d7a0d86300336031833f13cd7339dd65069fcef::
https://api.github.com/repos/python/cpython,111016,idle-perms::main,0,merged,,Closes: #111015 <!-- gh-issue-number: gh-111015 --> * Issue: gh-111015 <!-- /gh-issue-number --> ::,Joshua Root,1075699,35,3,5,0,3,0,19658a33d0cb4c93859e09e37958d6ff9b9a8c7f::c5fd73051fd467ca66b316837e2a6bb42aceb839::b9c36b01f9e57399a6127c2143a052134c9b362c::
https://api.github.com/repos/python/cpython,111012,sphinx_oldest::main,0,merged,skip issue::skip news::,"Fix https://github.com/python/cpython/security/dependabot/4: use urllib3 version 2.0.7. <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--111012.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::",Victor Stinner,194129,1148,1,1,2,1,0,0192a949ec8368e7e2868f17214261fd2a306869::
https://api.github.com/repos/python/cpython,111011,regrtest11_distutils::3.11,0,merged,skip news::,"Restore code removed by recent sync with the main branch which no longer has distutils: commit 26748ed4f61520c59af15547792d1e73144a4314. <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-110756 --> * Issue: gh-110756 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,1,9,0,1,0,7d7dc7ae05a281eb0c67a2b68d789174ced024fd::
https://api.github.com/repos/python/cpython,111010,limited_uuid::main,0,merged,,"<!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-85283 --> * Issue: gh-85283 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--111010.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::",Victor Stinner,194129,1148,1,7,4,3,0,df0b87c6d0a9bda28df7c5b00199b886727421c6::
https://api.github.com/repos/python/cpython,111008,limited_scproxy::main,0,merged,,"* Replace Py_SETREF(v, NULL) with Py_CLEAR(v). * Reformat the code. <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-85283 --> * Issue: gh-85283 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--111008.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::",Victor Stinner,194129,1148,1,16,18,3,0,f3815b1c61fd60b95fe2be9024fb65d811103ef5::
https://api.github.com/repos/python/cpython,111007,issue-110913-windows-console-utf8-boundary::main,0,merged,,"Fix the loop that searches for an UTF-8 sequence boundary * Issue: https://github.com/python/cpython/issues/110913 <!-- gh-issue-number: gh-110913 --> * Issue: gh-110913 <!-- /gh-issue-number --> ::```suggestion static DWORD _find_last_utf8_boundary(const char *buf, DWORD len) { /* This function never returns 0, returns the original len instead */ DWORD count = 1; if (len == 0 || (buf[len - 1] & 0x80) == 0) { return len; } for (;; count++) { if (count > 3 || count >= len) { return len; } if ((buf[len - count] & 0xc0) != 0x80) { return len - count; } } } ```::```suggestion WindowsConsoleIO now correctly chunks large buffers without splitting up UTF-8 sequences. ```::",Tamás Hegedűs,5985835,23,4,21,16,2,0,2b0bf5bd7b93d480a1c2634059101a6265913f81::fae514784f2b25991ba8b6a0136d0c12906f8012::cd641bfa999f6061b4159daaee1d96f5f66b05ed::0c8ca337033770baa6f40b656d21fc89ff65bdcf::
https://api.github.com/repos/python/cpython,111006,remove-sent-if-failed::main,0,merged,skip news::,There were a few things I did in gh-110565 that need to be fixed.  I also forgot to add tests in that PR. (Note that this PR exposes a refleak introduced by gh-110246.  I'll take care of that separately.) <!-- gh-issue-number: gh-84570 --> * Issue: gh-84570 <!-- /gh-issue-number --> ::,Eric Snow,1152074,290,10,571,148,5,0,1d417f74100a9c6ac14900e3d71345c09313b184::0d2769a5f330d5442de7737a3e38b59b6d7685ea::202f700401485c378ee2b02a187536640c1bffac::38bf6a153e5ce89030eb9fcee20c9a0ed3a5ef39::fff67087d4b15fdc881f6c8b4224255b0a71b9f6::f904a52a1a60f3c1f41fb1fa64cd3819d3b357c0::419ed339e58b4e1fe3a0bb3f780d1e4f0f06c252::09fccc6c8e275c5897fec829848d650383ee1c64::7fcf8fe9a1ac6c8f90e44f9b993a4d0aefcfe6cc::ab148fae9e3a21b6aec00a2823d3464796bbaff9::
https://api.github.com/repos/python/cpython,111005,ctypes_test_core::main,0,merged,skip news::,"Define Py_BUILD_CORE to not attempt to link the extension to python3.lib (which fails). <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-85283 --> * Issue: gh-85283 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,1,7,0,1,0,09c9071445adacb529550ec6d3ef5dd29e0404b3::
https://api.github.com/repos/python/cpython,111004,backport-920b3df-3.11::3.11,0,merged,,Fix detection of gdb built without Python scripting support. * check_usable_gdb() doesn't check gdb exit code when calling run_gdb(). * Use shutil.which() to get the path to the gdb program. (cherry picked from commit 920b3dfacad615c7bb9bd9a35774469f8809b453) Co-authored-by: Victor Stinner <vstinner@python.org> <!-- gh-issue-number: gh-110995 --> * Issue: gh-110995 <!-- /gh-issue-number --> ::,Miss Islington (bot),31488909,73,1,13,6,2,0,d8f86b336c58856d2a9608de0e2b95d5e1593251::
https://api.github.com/repos/python/cpython,111003,backport-920b3df-3.12::3.12,0,merged,,Fix detection of gdb built without Python scripting support. * check_usable_gdb() doesn't check gdb exit code when calling run_gdb(). * Use shutil.which() to get the path to the gdb program. (cherry picked from commit 920b3dfacad615c7bb9bd9a35774469f8809b453) Co-authored-by: Victor Stinner <vstinner@python.org> <!-- gh-issue-number: gh-110995 --> * Issue: gh-110995 <!-- /gh-issue-number --> ::,Miss Islington (bot),31488909,73,1,13,6,2,0,6727aa0bc234240bf28ec1500136942f6d8afbee::
https://api.github.com/repos/python/cpython,111002,backport-c523ce0-3.11::3.11,0,merged,type-bug::,"(cherry picked from commit c523ce0f434582580a3721e15cb7dd6b56ad0236) <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-65052 --> * Issue: gh-65052 <!-- /gh-issue-number --> ::",Tian Gao,13121107,1366,2,64,7,3,0,a62005869e510cca6ab4a9a1a4bea2f7b369436c::f180b43402ca966bbf16f8242077c18c680c9dfa::
https://api.github.com/repos/python/cpython,111000,test_contextlib::main,0,merged,tests::skip issue::skip news::,"When working on #110378, I noticed some differences between `test_contextlib` and `test_contextlib_async`. Copy some tests from `test_contextlib_async` to `test_contextlib`.::",Serhiy Storchaka,3659035,401,1,46,0,1,0,2340e69f32666b8de2da11aa99b6dffc61a8d0ee::
https://api.github.com/repos/python/cpython,110998,test_gdb::main,0,merged,tests::,"Fix detection of gdb built without Python scripting support. * check_usable_gdb() doesn't check gdb exit code when calling run_gdb(). * Use shutil.which() to get the path to the gdb program. <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-110995 --> * Issue: gh-110995 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,1,13,6,2,0,4c3e535e4304887d989078adad1d0740f5dbec5f::
https://api.github.com/repos/python/cpython,110997,whatsnew-3.13-pep602-more-support::main,0,merged,docs::skip news::,"<!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> [PEP 602](https://peps.python.org/pep-0602/) has been updated to give 3.13+ two years of full support (up from 1½) and three years of security fixes (down from 3½): * https://github.com/python/peps/commit/619e4e239383b5f59e34ebebc36278aebf599a5b * https://discuss.python.org/t/accepted-pep-602-annual-release-cycle-for-python/2296 <!-- gh-issue-number: gh-109975 --> * Issue: gh-109975 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--110997.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::I would prefer text in English text rather than Unicode characters (½). I'm not sure that it's easy to read for everybody.::Updated.::",Hugo van Kemenade,1324225,628,2,5,0,1,0,9c6adbedde24014e2bb4b3adcc7d78e0cf4c645a::e18d088b0b5c285f7bffbab114bc0f89c64d908e::
https://api.github.com/repos/python/cpython,110992,gh-109693-remove-header::main,0,merged,skip news::,"<!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-109693 --> * Issue: gh-109693 <!-- /gh-issue-number --> ::",Donghee Na,5110323,401,1,4,564,8,0,5e91b265b9c799b404fba8170fe5f9e058b165c9::
https://api.github.com/repos/python/cpython,110990,backport-24e4ec7-3.12::3.12,0,merged,,…ns and classes with generic type parameters (GH-110973) (cherry picked from commit 24e4ec7766fd471deb5b7e5087f0e7dba8576cfb) <!-- gh-issue-number: gh-110938 --> * Issue: gh-110938 <!-- /gh-issue-number --> ::,Jelle Zijlstra,906600,635,1,46,22,4,0,5e570c213726c8e1507c90273c26a2db60ce0274::
https://api.github.com/repos/python/cpython,110989,limited_resource::main,0,merged,,"* Replace PyStructSequence_SET_ITEM() with PyStructSequence_SetItem(). * Replace PyTuple_GET_SIZE() with PyTuple_Size(). * Replace PyTuple_GET_ITEM() with PyTuple_GetItem(). <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-85283 --> * Issue: gh-85283 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--110989.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::",Victor Stinner,194129,1148,1,38,36,4,0,35b1f2b986c594087b9ad58f2befc9af56659aa8::
https://api.github.com/repos/python/cpython,110986,issue-110938::main,0,merged,tests::skip news::,This PR tests: - Line: https://github.com/python/cpython/pull/110973/files#diff-2973ca53337859793077e9bdc1a1623063379f0fdfcb788836fd82ebb66b763bR1375 - And `def` for the same thing (this test was missing as well) <!-- gh-issue-number: gh-110938 --> * Issue: gh-110938 <!-- /gh-issue-number --> ::,Nikita Sobolev,4660275,4663,1,15,0,1,0,1205b59916317846d9aa16dde7ee81f370a44fa0::
https://api.github.com/repos/python/cpython,110985,backport-198aa67-3.12::3.12,0,merged,docs::skip news::,(cherry picked from commit 198aa67d4ceb5298c3c60f7a77524f5ba084c121) Co-authored-by: Matthieu Dartiailh <m.dartiailh@gmail.com> <!-- gh-issue-number: gh-107457 --> * Issue: gh-107457 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--110985.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::,Miss Islington (bot),31488909,73,1,43,16,1,0,02c489d6225b79a09fff687b6ee7f222f39f1b99::
https://api.github.com/repos/python/cpython,110983,ruff-cache-ignore::main,0,merged,skip issue::skip news::,"`ruff` uses this folder for some cache-related stuff, we ignore similar folders in this project. See https://docs.astral.sh/ruff/settings/#cache-dir::",Nikita Sobolev,4660275,4663,1,1,0,1,0,71e530f78582a124ef400154578b591623394b36::
https://api.github.com/repos/python/cpython,110982,clinic_output_templates::main,0,merged,skip news::,"<!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-110964 --> * Issue: gh-110964 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,1,53,56,1,0,e6cebdbb8be7a44ecfbcef06ffaa52beb4f53b86::
https://api.github.com/repos/python/cpython,110981,backport-b75b1f3-3.11::3.11,0,merged,skip issue::skip news::,(cherry picked from commit b75b1f389f083db8568bff573c33ab4ecf29655a) 3.11 does not have mypy at all.::,Nikita Sobolev,4660275,4663,1,2,2,1,0,61c953b20df79302235f2913bc85477e5c9591dd::
https://api.github.com/repos/python/cpython,110980,backport-b75b1f3-3.12::3.12,0,merged,skip issue::skip news::,(cherry picked from commit b75b1f389f083db8568bff573c33ab4ecf29655a) ::,Nikita Sobolev,4660275,4663,1,3,3,2,0,b80b09fff9da02f2452dcca03f976c14bfa172cf::
https://api.github.com/repos/python/cpython,110979,issue-101100-codecs::main,0,merged,skip news::,"Notes: - `uu` module was removed in 3.13, so I dropped `uu.encode` and `uu.decode` parts, since they no longer exist - There's a PR by @CAM-Gerlach with the deprecation notices to `codecs.uu_codec` https://github.com/python/cpython/pull/92758/ - I am not sure that `uu.encode` and `uu.decode` part should be backported. In the backport we can use `!` instead <!-- gh-issue-number: gh-101100 --> * Issue: gh-101100 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--110979.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::",Nikita Sobolev,4660275,4663,1,36,34,2,0,756a3b00776f50a0cdeb05772af7f1c58d956d3b::
https://api.github.com/repos/python/cpython,110978,limited_winsound::main,0,merged,,"Replace type->tp_name with PyType_GetQualName(). <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-85283 --> * Issue: gh-85283 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--110978.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::",Victor Stinner,194129,1148,1,30,151,8,0,41cf1a20a0013d6c4b02653697671287489f7f09::
https://api.github.com/repos/python/cpython,110976,fix_md5_clinic::main,0,merged,skip news::,"Limited C API supports the defining class under some conditions. <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-85283 --> * Issue: gh-85283 <!-- /gh-issue-number --> ::I know this formatting style predates your PR, but I find this quite hard to read, and I think the readability issue is probably at least in part why a bug crept in here. I'd find it easier to parse if we used a formatting style a little closer to what black might do: ```suggestion if limited_capi and ( pseudo_args or (any(p.is_optional() for p in parameters) and any(p.is_keyword_only() and not p.is_optional() for p in parameters)) or any(c.broken_limited_capi for c in converters) ): ```::This is just a refactor, right? I weakly prefer the existing code. Even though it's more verbose, it has a nice symmetry between the branches: `methoddef_cast_end` is set on each branch::I would prefer to have a kind of consistency in terms of coding style. If this block is changed, many other lines should be changed. For example, the style in this file is to put the operator at the end of a line, not at the beginning. I need this fix to unblock a large following change: PR #110966. Once I landed these changes, feel free to run Black, or change the coding style manually :-)::Well, I added methoddef_cast_end and I regret that I added it to all branches, since it's only needed in one branch. Yes, it's a minor coding style change. It doesn't change the code.::I only comment about formatting here because I think the poor readability was a contributing factor to why a bug crept in to these lines. But, sure, we can leave this for now :-)::I don't think that it was a bug. IMO my change is wrong :-) But I am not sure... AC is complicated and has a small test suite. Maybe recent changes for limited C API already cover all cases. Maybe not. I made the change because it prevented me to merge PR #110966: with this PR, md5 clinic code started again to use the internal C API which was wrong. I mean, it injected a `pycore_modsupport.h` which is incompatible with the limited C API, even if the include was not used.::> But, sure, we can leave this for now :-) I would suggest to run Black on the whole file, not just one a few lines.::",Victor Stinner,194129,1148,1,4,5,2,0,e50946f8441648f2de9fa92329f72da61e076743::
https://api.github.com/repos/python/cpython,110975,issue-110974::main,0,merged,skip news::,<!-- gh-issue-number: gh-110974 --> * Issue: gh-110974 <!-- /gh-issue-number --> ::,Nikita Sobolev,4660275,4663,1,5,2,1,0,ea157ac548974700c6e4b01ade4bc54ac812497c::
https://api.github.com/repos/python/cpython,110973,gh-110938::main,0,merged,,Signed-off-by: Pablo Galindo <pablogsal@gmail.com> Closes: #110938 <!-- gh-issue-number: gh-110938 --> * Issue: gh-110938 <!-- /gh-issue-number --> ::,Pablo Galindo Salgado,11718525,847,1,46,22,4,1,3925cd2b912989db4d8df9718c2a0b3e57501610::
https://api.github.com/repos/python/cpython,110972,bump-test-deps::main,0,merged,skip issue::skip news::,Release post: https://astral.sh/blog/ruff-v0.1.0::,Nikita Sobolev,4660275,4663,2,4,4,2,1,9e9470a5aef3326f5eb365b4ca8d5e9c5dab0c06::b3baf88a61842dc4dd8cefd952e64f26767fd614::
https://api.github.com/repos/python/cpython,110971,backport-9a9fba8-3.11::3.11,0,merged,skip news::,"Before utils.CLOCK_RES constant was added (20 ms), test_asyncio already used 50 ms. (cherry picked from commit 9a9fba825f8aaee4ea9b3429875c6c6324d0dee0) Co-authored-by: Victor Stinner <vstinner@python.org> <!-- gh-issue-number: gh-110695 --> * Issue: gh-110695 <!-- /gh-issue-number --> ::",Miss Islington (bot),31488909,73,1,2,2,1,0,e6b2b5edc33b31e5877fd3498f5f81bee1f6c543::
https://api.github.com/repos/python/cpython,110970,backport-9a9fba8-3.12::3.12,0,merged,skip news::,"Before utils.CLOCK_RES constant was added (20 ms), test_asyncio already used 50 ms. (cherry picked from commit 9a9fba825f8aaee4ea9b3429875c6c6324d0dee0) Co-authored-by: Victor Stinner <vstinner@python.org> <!-- gh-issue-number: gh-110695 --> * Issue: gh-110695 <!-- /gh-issue-number --> ::",Miss Islington (bot),31488909,73,1,2,2,1,0,89cc6a8017eca0033a1b92257ef421150ef757e0::
https://api.github.com/repos/python/cpython,110969,limited_gil::main,0,merged,skip news::topic-C-API::,"* Only add Py_MOD_PER_INTERPRETER_GIL_SUPPORTED to limited C API version 3.13. * errno, xxlimited and _ctypes_test extensions now need the limited C API version 3.13 to get Py_MOD_PER_INTERPRETER_GIL_SUPPORTED.  They now include standard header files explicitly: <errno.h>, <string.h> and <stdio.h>. * xxlimited_35: Remove Py_mod_multiple_interpreters slot, incompatible with limited C API version 3.5. <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-110968 --> * Issue: gh-110968 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,2,13,7,5,0,8a29b982f0f2de02a37f0d7bdb4a46f009995bd1::89b61592d7700f0eb7adc451739d79fc78296c15::
https://api.github.com/repos/python/cpython,110967,limited_md5::main,0,merged,,"* Replace _Py_strhex() with few lines of code. * Replace _PyType_GetModuleState() with PyType_GetModuleState(). <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-85283 --> * Issue: gh-85283 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--110967.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::",Victor Stinner,194129,1148,1,28,69,5,0,fcad07bb540e7ce14eb020fd302448f1b03c47a5::
https://api.github.com/repos/python/cpython,110966,pycore_modsupport::main,0,merged,skip news::,"Move the following private functions and structures to pycore_modsupport.h internal C API: * _PyArg_BadArgument() * _PyArg_CheckPositional() * _PyArg_NoKeywords() * _PyArg_NoPositional() * _PyArg_ParseStack() * _PyArg_ParseStackAndKeywords() * _PyArg_Parser structure * _PyArg_UnpackKeywords() * _PyArg_UnpackKeywordsWithVararg() * _PyArg_UnpackStack() * _Py_ANY_VARARGS() Changes: * Python/getargs.h now includes pycore_modsupport.h to export functions. * clinic.py now adds pycore_modsupport.h when one of these functions is used. * Add pycore_modsupport.h includes when a C extension uses one of these functions. * Define Py_BUILD_CORE_MODULE in C extensions which now include directly or indirectly (via code generated by Argument Clinic) pycore_modsupport.h: * _csv * _curses_panel * _dbm * _gdbm * _multiprocessing.posixshmem * _sqlite.row * _statistics * grp * resource * syslog * _testcapi: bad_get() no longer uses METH_FASTCALL calling convention but METH_VARARGS. Replace _PyArg_UnpackStack() with PyArg_ParseTuple(). * _testcapi: add PYTESTCAPI_NEED_INTERNAL_API macro which is defined by _testcapi sub-modules which need the internal C API (pycore_modsupport.h): exceptions.c, float.c, vectorcall.c, watchers.c. * Remove Include/cpython/modsupport.h header file. Include/modsupport.h no longer includes the removed header file. <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-110964 --> * Issue: gh-110964 <!-- /gh-issue-number --> ::or perhaps this? ```suggestion assert clinic is not None clinic.add_include('pycore_modsupport.h', '_PyArg_BadArgument()') ```::As explained in my previous comment, I plan to write a follow-up for this code. We should not use the global variable, but pass an argument which *cannot* be None.::Yes, I agree that's the more principled action in the longer term, and I'm fine with using the easier solution for now. But this is the same number of lines, and I think makes it clearer that we never expect `clinic` to be `None` here (if it is `None`, something has gone horribly wrong :-)::PR to refactor this code, to avoid `if clinic is not None`: PR #110982.::",Victor Stinner,194129,1148,2,510,228,166,0,46a846d0b9ce81b3c3bdac8c6b8a9d7b30211b75::8a4f9af1905fc43527017808fcbbd7fb28c23086::
https://api.github.com/repos/python/cpython,110960,dkeys::main,0,merged,skip news::,"Add comments where .keys() is needed. Leave debugger usages along because situation is unclear as indicated in expanded comment. Most testing is manual. <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-103737 --> * Issue: gh-103737 <!-- /gh-issue-number --> ::",Terry Jan Reedy,19036496,98,10,28,26,8,0,7bb15ecbba8d99928466f0fdf9016cdf6fcbcc0a::d5ffa71b57ee684e4d85c3b651d28745dadb411b::b1ba3d4deb204f4fcd3ff76885dbc2639510955a::f2afbe9bbf8b67b130daf53bbafa9237ed339ed1::b81b49054df8d423a33435d872e9f6bd3df3134c::43cc81a1f83d7524cfef4399bfcd2d7f59356454::bbca9a158f362cee59fc1efa94dcedfc1b75c111::8bae238e7f6945377cdfc435f6975cba8b570e1d::510f89963a07c5b7efb7b463e8be63026d5fb436::f620c86a7d72191d2f10a406cd76b97ed3167539::
https://api.github.com/repos/python/cpython,110958,backport-78e4a6d-3.11::3.11,0,merged,skip issue::skip news::,(cherry picked from commit 78e4a6de48749f4f76987ca85abb0e18f586f9c4) Co-authored-by: Alex Waygood <Alex.Waygood@Gmail.com>::,Miss Islington (bot),31488909,73,1,2,3,1,0,b1293d67f199bcf0326ac334c01eefcc5a5dafe9::
https://api.github.com/repos/python/cpython,110957,backport-78e4a6d-3.12::3.12,0,merged,skip issue::skip news::,(cherry picked from commit 78e4a6de48749f4f76987ca85abb0e18f586f9c4) Co-authored-by: Alex Waygood <Alex.Waygood@Gmail.com>::,Miss Islington (bot),31488909,73,1,2,3,1,0,b49779b62e56af37e8f627245771ba4bf1affbbc::
https://api.github.com/repos/python/cpython,110955,errno_limited::main,0,merged,,"_testimportmultiple is now built with limited C API version 3.2. <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-85283 --> * Issue: gh-85283 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--110955.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::",Victor Stinner,194129,1148,1,45,40,5,0,7426fc659d4960a26b9662b7debe2df3051f05b9::
https://api.github.com/repos/python/cpython,110954,testimportmultiple::main,0,merged,,"<!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-85283 --> * Issue: gh-85283 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--110954.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::",Victor Stinner,194129,1148,1,8,4,3,0,da8afd490ca122d4b9c629bf830491939e3789d1::
https://api.github.com/repos/python/cpython,110952,test_asyncio_clock_res::main,0,merged,tests::topic-asyncio::skip news::,"Before utils.CLOCK_RES constant was added (20 ms), test_asyncio already used 50 ms. <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-110695 --> * Issue: gh-110695 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,1,2,2,1,0,1fbd24a6a94b2e73cca053052011a4fdedeea3ba::
https://api.github.com/repos/python/cpython,110951,issue-67565-2::main,0,merged,tests::skip news::needs backport to 3.11::needs backport to 3.12::,"<!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-67565 --> * Issue: gh-67565 <!-- /gh-issue-number --> ::",Furkan Onder,24194934,264,2,29,0,3,1,61d38946fd4bf23d7c53a8c1ecd0fb9d93eea9c5::b07cd39185b5029b9d82b5526a9d65e2552ce024::
https://api.github.com/repos/python/cpython,110949,channel-send-wait-helper::main,0,merged,skip news::,This makes several subsequent changes cleaner. <!-- gh-issue-number: gh-84570 --> * Issue: gh-84570 <!-- /gh-issue-number --> ::,Eric Snow,1152074,290,1,43,45,1,0,03443b59925c111ac811e8acc63669bf00d9f695::
https://api.github.com/repos/python/cpython,110948,threading-timeout-helpers::main,0,closed,awaiting core review::skip news::,These two helpers are useful for producing a consistent behavior in handling threading timeouts.  We extract them from the _thread module code. (I will be using them for some changes in the _xxinterpchannels module.) <!-- gh-issue-number: gh-84570 --> * Issue: gh-84570 <!-- /gh-issue-number --> ::,Eric Snow,1152074,290,2,115,55,4,0,188d175d6467d50a82c72bbaa2696d17bc5e439e::46c422f9948427b636735dd4a192858a52ac17bd::
https://api.github.com/repos/python/cpython,110947,backport-f07ca27-3.11::3.11,0,merged,docs::skip issue::skip news::,"Clarify the size of arenas From 3.10.0 alpha 7, the pymalloc allocator uses arenas with a fixed size of 1 MiB on 64-bit platforms instead of 256 KiB on 32-bit platforms. (cherry picked from commit f07ca27709855d4637b43bba23384cc795143ee3) Co-authored-by: Mienxiu <82512658+mienxiu@users.noreply.github.com> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--110947.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::",Miss Islington (bot),31488909,73,1,2,1,1,1,edbc2235fc055c2726037a2c4b098152fb3f3e95::
https://api.github.com/repos/python/cpython,110946,backport-f07ca27-3.12::3.12,0,merged,docs::skip issue::skip news::,"Clarify the size of arenas From 3.10.0 alpha 7, the pymalloc allocator uses arenas with a fixed size of 1 MiB on 64-bit platforms instead of 256 KiB on 32-bit platforms. (cherry picked from commit f07ca27709855d4637b43bba23384cc795143ee3) Co-authored-by: Mienxiu <82512658+mienxiu@users.noreply.github.com> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--110946.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::",Miss Islington (bot),31488909,73,1,2,1,1,1,fbc6ca3cf00b3cc2aa5c1c6b902000227edfdc92::
https://api.github.com/repos/python/cpython,110940,unnecessary-overflow-check::main,0,merged,skip news::,"<!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-107450 --> * Issue: gh-107450 <!-- /gh-issue-number --> ::",Lysandros Nikolaou,20306270,38,1,0,6,1,0,769a4bddf5a4264e87e52cf4330271d2dfd03673::
https://api.github.com/repos/python/cpython,110939,backport-a1ac559-3.11::3.11,0,merged,skip news::,"(cherry picked from commit a1ac5590e0f8fe008e5562d22edab65d0c1c5507) <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-107450 --> * Issue: gh-107450 <!-- /gh-issue-number --> ::",Lysandros Nikolaou,20306270,38,1,40,29,4,0,01760a7ec7d5b902eda2ffa8f661618eda6c0774::
https://api.github.com/repos/python/cpython,110935,backport-110929-311::3.11,0,merged,skip issue::skip news::,"(cherry-picked from commit 02d26c4bef3ad0f9c97e47993a7fa67898842e5c) <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> ::",Alex Waygood,66076021,141,1,16,19,6,0,a1bbd1fc3af0ee345c6cfe794fda1dd4f3f8001e::
https://api.github.com/repos/python/cpython,110934,backport-110929-312::3.12,0,merged,skip issue::skip news::,"(cherry-picked from commit 02d26c4bef3ad0f9c97e47993a7fa67898842e5c) <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> ::",Alex Waygood,66076021,141,1,16,21,6,0,b94d9c89f8af9df6e735b72e3a91e6f08dfc098f::
https://api.github.com/repos/python/cpython,110933,bump-sphinx-lint::main,0,merged,skip issue::skip news::,Remove `-j1` from `args` (sphinx-lint now specifies `require_serial: true` in its default config). Remove `types: [rst]` (it's also now the default for sphinx-lint).::,Alex Waygood,66076021,141,1,2,3,1,0,20133de7cbd7eed5f6b8f7c8d5a5d7b5f343316d::
https://api.github.com/repos/python/cpython,110931,backport-a1ac559-3.12::3.12,0,merged,skip news::,"(cherry picked from commit a1ac5590e0f8fe008e5562d22edab65d0c1c5507) <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-107450 --> * Issue: gh-107450 <!-- /gh-issue-number --> ::",Lysandros Nikolaou,20306270,38,2,40,29,4,0,99047c07dbe8f7c970070df59cf6d46df3b7729b::18e4807f0024238dac384d84ea198eae5efb479c::
https://api.github.com/repos/python/cpython,110929,ruff-easy-hits::main,0,merged,skip issue::skip news::,There's nothing too complex going on with any of these; this PR just picks some low-hanging fruit::,Alex Waygood,66076021,141,1,16,21,6,1,47f5c6490c7c468baed3eb9a0e8a3fd2382ceebf::
https://api.github.com/repos/python/cpython,110928,backport-bfc1cd8-3.12::3.12,0,merged,docs::skip news::,(cherry picked from commit bfc1cd8145db00df23fbbd2ed95324bb96c0b25b) Co-authored-by: Nikita Sobolev <mail@sobolevn.me> <!-- gh-issue-number: gh-110527 --> * Issue: gh-110527 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--110928.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::,Miss Islington (bot),31488909,73,1,3,1,1,0,04635d7f96a311a50682c5dc76c87b09233e09df::
https://api.github.com/repos/python/cpython,110927,backport-bfc1cd8-3.11::3.11,0,merged,docs::skip news::,(cherry picked from commit bfc1cd8145db00df23fbbd2ed95324bb96c0b25b) Co-authored-by: Nikita Sobolev <mail@sobolevn.me> <!-- gh-issue-number: gh-110527 --> * Issue: gh-110527 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--110927.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::,Miss Islington (bot),31488909,73,1,3,1,1,0,a68bce3be6a442ccf1eb7b4c7834166a402685d0::
https://api.github.com/repos/python/cpython,110926,opcode-tests::main,0,merged,skip news::,"- Rename the second `unittest.TestCase` subclass so that it doesn't silently override the tests in the first test class - Add back a helper method deleted in https://github.com/python/cpython/commit/40f3f11a773b854c6d94746aa3b1881c8ac71b0f so that the tests in the `OpListTests` class pass - Enable ruff on `Lib/test/test__opcode.py`, to prevent this regressing again in the future. Fixes #110923 <!-- gh-issue-number: gh-110923 --> * Issue: gh-110923 <!-- /gh-issue-number --> ::",Alex Waygood,66076021,141,1,9,2,2,0,6951f13c0991bd89a2988d13f9329e7612523762::
https://api.github.com/repos/python/cpython,110925,backport-b75186f-3.12::3.12,0,merged,skip issue::skip news::,This allows individual resources to be disabled without having to explicitly re-enable all others. (cherry picked from commit b75186f69edcf54615910a5cd707996144163ef7) Co-authored-by: Zachary Ware <zach@python.org>::,Miss Islington (bot),31488909,73,1,11,7,2,0,ce380b74c2ac7d7ff8cd40465c24a8b09507ac5a::
https://api.github.com/repos/python/cpython,110924,backport-b75186f-3.11::3.11,0,merged,skip issue::skip news::,This allows individual resources to be disabled without having to explicitly re-enable all others. (cherry picked from commit b75186f69edcf54615910a5cd707996144163ef7) Co-authored-by: Zachary Ware <zach@python.org>::,Miss Islington (bot),31488909,73,1,11,7,2,0,1bbc441c16fce1b3ea48a319b4c426388e16faf9::
https://api.github.com/repos/python/cpython,110922,issue-110864-2::main,0,merged,skip news::,"I've also changed the exception message to be uppercase, like all others are. Refs https://github.com/python/cpython/pull/110784 Refs https://github.com/python/cpython/pull/110868 <!-- gh-issue-number: gh-110864 --> * Issue: gh-110864 <!-- /gh-issue-number --> ::Maybe we can actually turn this into an assert? If I understand correctly, AC should guarantee it's always a tuple.::",Nikita Sobolev,4660275,4663,2,14,20,1,0,b5f4f5c4aacafb3e392335b5d3670e7c7e0bcc36::d070c0cf1c6e58d0b4294be914bbec7654b27d90::
https://api.github.com/repos/python/cpython,110921,gh-110912::main,0,merged,,"Closes: #110912 <!-- gh-issue-number: gh-110912 --> * Issue: gh-110912 <!-- /gh-issue-number --> ::```suggestion ```::typo `traceeback`::This was probably pushed by accident?::```suggestion :mod:`traceback` module. Patch by Pablo Galindo ``` ::Should not it be tested before `PyExceptionInstance_Check(value)`?::Why are double quotes escaped?::Oh that's because I started with double quotes for these strings and changed it later to single quotes but didn't remove the scapes ::Actually, reviewing the old code and callees, this is an error condition, so I am adding an assert here at the top::",Pablo Galindo Salgado,11718525,847,6,14,4,3,0,42796e64728ce3ef0f9b0a68d0948269a127d732::9dc30dfe4a10324ded198d14bf4bbd7912c35d49::f16ce2959bced3a892bb6e4ca73684515552323f::ad992316d2f1348ea550bc453b10faed3f80d333::fe9f9ee59979eb5f46f688c9c7ac4aeaf99377ce::38ea7f6337528f4a38dd12246d50f8c590a6a672::
https://api.github.com/repos/python/cpython,110920,patch-1::main,0,merged,docs::skip issue::skip news::,It's now a package. See: https://github.com/python/cpython/commit/4a53a397c311567f05553bc25a28aebaba4f6f65 Clicking on the current reference leads to the error 404: https://docs.python.org/dev/library/sysconfig.html#module-sysconfig <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--110920.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::,Karolina Surma,33810531,14,1,1,1,1,0,2c894d28ec598df51c1f9fa745d119f9d1817abb::
https://api.github.com/repos/python/cpython,110919,regrtest-match-tests::main,0,merged,,"Test case matching patterns specified by options --match, --ignore, --matchfile and --ignorefile are now tested in the order of specification, and the last match determines whether the test case be run or ignored. <!-- gh-issue-number: gh-110918 --> * Issue: gh-110918 <!-- /gh-issue-number --> ::Please specify the encoding. UTF-8 should be good for ASCII test names, no?::",Serhiy Storchaka,3659035,401,3,126,141,12,1,40e37f1c8243eadf510489f6101d98bcc51e63af::38de92f9e3216dd11b0aaf2026abdff5ee24006a::783049e8d64c24a92aeb96b00d15e51f0de38f66::
https://api.github.com/repos/python/cpython,110916,backport-162213f-3.11::3.11,0,closed,awaiting merge::,(cherry picked from commit 162213f2db3835e1115178d38741544f4b4db416) Co-authored-by: Radislav Chugunov <52372310+chgnrdv@users.noreply.github.com> <!-- gh-issue-number: gh-108791 --> * Issue: gh-108791 <!-- /gh-issue-number --> ::,Miss Islington (bot),31488909,73,1,24,2,3,0,4ac4b072a3f827033bed10e5b0b78af698ec0c38::
https://api.github.com/repos/python/cpython,110915,backport-162213f-3.12::3.12,0,closed,awaiting merge::,(cherry picked from commit 162213f2db3835e1115178d38741544f4b4db416) Co-authored-by: Radislav Chugunov <52372310+chgnrdv@users.noreply.github.com> <!-- gh-issue-number: gh-108791 --> * Issue: gh-108791 <!-- /gh-issue-number --> ::,Miss Islington (bot),31488909,73,1,24,2,3,0,7e69c9889a9aa21b168ff1914f84f07e98d5b13d::
https://api.github.com/repos/python/cpython,110910,patch-3::main,0,closed,topic-asyncio::awaiting merge::,"~~I don't think this needs a news entry or an issue~~ <!-- gh-issue-number: gh-111085 --> * Issue: gh-111085 <!-- /gh-issue-number --> ::Just FYI: you can also add yourself to `Misc/ACKS` (please, follow the alphabetical order). I couldn't find you there ;)::",James Hilton-Balfe,50501825,41,4,3,1,3,0,4071cd639e83c6fbfb53b8b57a5a14cba496d9cb::10317eae370a6727469b5b1d000c78d661a10b3c::35453e2a7141bf6df61dc9bfae5d3f0dffd0e74f::a2608eb0e36e874ea4bccb7c4c50b3f2acca52de::
https://api.github.com/repos/python/cpython,110908,issue-110907::main,0,merged,skip news::,"<!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-110907 --> * Issue: gh-110907 <!-- /gh-issue-number --> ::",Nikita Sobolev,4660275,4663,1,26,4,4,0,a009d38689c476c5b584436ccf31ed48745f16cc::
https://api.github.com/repos/python/cpython,110906,enum_private_check::main,0,merged,skip news::,"* Fix `enum._is_private` (bug + anti-bug) for triple underscore names * Rewrite `_is_sunder` check in the same style as `_is_private` * Remove unused variable `blanks` * Update docstring <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-110905 --> * Issue: gh-110905 <!-- /gh-issue-number --> ::Just remove this line. ```suggestion ```::```suggestion private_names = '_MyEnum__private', '_MyEnum__still_private', '_MyEnum___triple_private' ```::Move this up to the `private_names` line. ```suggestion random_names = 'okay', '_semi_private', '_weird__', '_MyEnum__', ```::```suggestion random_names = 'okay', '_semi_private', '_weird__', '_MyEnum__' ```::",Pieter Eendebak,883786,14,4,4,6,2,1,d1499e149943cdcba9e1bb83aafb808ae2963ab5::40327949e3c8289fd61cd765097058607b25fc9f::fc15c24b6b9261828164048a54d417843c8f13f4::8db1f861f18cc8801d438dbcb79971d07710fff4::
https://api.github.com/repos/python/cpython,110901,backport-42a5d21-3.11::3.11,0,merged,docs::skip news::,(cherry picked from commit 42a5d21d465ffcac792685b6127a6e8e39dd6897) Co-authored-by: partev <petrosyan@gmail.com> Co-authored-by: Hugo van Kemenade <hugovk@users.noreply.github.com> <!-- gh-issue-number: gh-110886 --> * Issue: gh-110886 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--110901.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::,Miss Islington (bot),31488909,73,1,2,1,1,0,733b3dd2f6bc8bf5cbf83387a2d68c0b5388b184::
https://api.github.com/repos/python/cpython,110900,backport-42a5d21-3.12::3.12,0,merged,docs::skip news::,(cherry picked from commit 42a5d21d465ffcac792685b6127a6e8e39dd6897) Co-authored-by: partev <petrosyan@gmail.com> Co-authored-by: Hugo van Kemenade <hugovk@users.noreply.github.com> <!-- gh-issue-number: gh-110886 --> * Issue: gh-110886 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--110900.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::,Miss Islington (bot),31488909,73,1,2,1,1,0,4b40360114ad268a4ecc2edbf18f598c6aade18d::
https://api.github.com/repos/python/cpython,110899,backport-9608704-3.12::3.12,0,merged,skip issue::skip news::,(cherry picked from commit 9608704cde4441c76c1b8b765e3aea072bca3b0d) Co-authored-by: Hugo van Kemenade <hugovk@users.noreply.github.com>::,Miss Islington (bot),31488909,73,2,0,2,1,0,f26d9e6d240ba1ca66c11195bd2202ad4527af4f::6b9ca770984f31785bfaf6996cddee1f653f893a::
https://api.github.com/repos/python/cpython,110898,ruff-test_monitoring.py::main,0,merged,skip issue::skip news::,"<!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> The duplicated tests were fixed in https://github.com/python/cpython/pull/109139 for `main` and will be in https://github.com/python/cpython/pull/110897 for `3.12`.::",Hugo van Kemenade,1324225,628,1,0,2,1,0,5da866579404b577384db7d1c52497be732aa915::
https://api.github.com/repos/python/cpython,110897,backport-ea530f2-3.12::3.12,0,merged,tests::skip news::,"(cherry picked from commit ea530f2f9ae63e81c22a1818bec0a650ccf758d2) <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-106193 --> * Issue: gh-106193 <!-- /gh-issue-number --> ::",Hugo van Kemenade,1324225,628,1,7,7,1,0,15ea3d50e5e579342dac15dcecc0d9d206ccdec4::
https://api.github.com/repos/python/cpython,110895,clarify-arenas-size::main,0,merged,docs::skip issue::skip news::topic-C-API::,"From 3.10.0 alpha 7, the pymalloc allocator uses arenas with a fixed size of 1 MiB on 64-bit platforms instead of 256 KiB on 32-bit platforms. This is changed in https://github.com/python/cpython/pull/14474 (bpo-37448). The following links are the relevant lines in the C code for your reference. - https://github.com/python/cpython/pull/14474/files#diff-399a22135f328b4e42b0722ef216587945eedf2d8c103a584a3dca5b30650329R904-R906 - https://github.com/python/cpython/pull/14474/files#diff-399a22135f328b4e42b0722ef216587945eedf2d8c103a584a3dca5b30650329R927 <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--110895.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::",Mienxiu,82512658,21,1,2,1,1,0,05fb7e681186e4fdc093900f8fe6018f8abf5444::
https://api.github.com/repos/python/cpython,110889,backport-72b0f0e-3.11::3.11,0,merged,type-bug::type-feature::,zipinfo now supports the full range of values in the TZ string determined by RFC 8536 and detects all invalid formats. Both Python and C implementations now raise exceptions of the same type on invalid data. (cherry picked from commit ab08ff7882b6181fb785eed7410dbf8030aded70) (cherry picked from commit 72b0f0eaf52ac46d5f6e165f737d6f891cf8d172) ::,Serhiy Storchaka,3659035,401,1,327,259,4,0,1c71bf53c54d9e5d2303f7c9dfee9dcb4b7ec5cb::
https://api.github.com/repos/python/cpython,110887,patch-2::main,0,merged,docs::skip news::,"<!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-110886 --> * Issue: gh-110886 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--110887.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::Spell out on first use? ```suggestion `Backus–Naur form (BNF) <https://en.wikipedia.org/wiki/Backus%E2%80%93Naur_form>`_ grammar ```::",,23830955,4,2,2,1,1,0,c5cee5812f94fafd780e6e057332f31cb18d253e::7415e01942f3bb451a576b7f55fcc944fa162068::
https://api.github.com/repos/python/cpython,110883,pdb-syntax-error::main,0,merged,type-feature::,"In #60384, a special check for `SyntaxError` is introduced in `pdb`'s `main()` function to avoid infinite loop in `pdb` if the source file has a `SyntaxError`. The solution is not elegant enough as we could have a real `SyntaxError` which we want to debug at run-time. #84583 gave an example with `ast.literal_eval('')`. This could happen in other scenarios as well, when we compile dynamically generated code. The original check for `SyntaxError` was just to prevent `pdb` from stuck, we can easily do that by moving the `pdb._user_requested_quit` outside of the try statement, so the `quit` request from post-mortem mode can be respected too. This has one minor behavior change - when the user tries to ""exit"" from the post mortem debugging, for example, using Ctrl+D or `quit` command, `pdb` used to restart the program, now it will exit. I think this is a more reasonable behavior - we told the users explicitly to use `cont` and `step` to restart the program, and `exit` should just mean ""exit"". <!-- gh-issue-number: gh-84583 --> * Issue: gh-84583 <!-- /gh-issue-number --> ::",Tian Gao,13121107,1366,2,20,7,3,0,110e6d1d28b7bb552108aa103d8a3e3472c142ec::3b13780aa82062a656733696c9e6338afbaf5222::
https://api.github.com/repos/python/cpython,110882,backport-ab08ff7-3.12::3.12,0,merged,type-bug::type-feature::,zipinfo now supports the full range of values in the TZ string determined by RFC 8536 and detects all invalid formats. Both Python and C implementations now raise exceptions of the same type on invalid data. (cherry picked from commit ab08ff7882b6181fb785eed7410dbf8030aded70) ::,Serhiy Storchaka,3659035,401,1,326,258,4,0,97f39757efe02b25c13d68b06d4b99dbbc3a6892::
https://api.github.com/repos/python/cpython,110878,backport-12deda7-3.11::3.11,0,merged,skip news::,(cherry picked from commit 12deda763359d46d4eccbb8991afed71fa31a68b) Co-authored-by: Nikita Sobolev <mail@sobolevn.me> <!-- gh-issue-number: gh-101100 --> * Issue: gh-101100 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--110878.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::,Miss Islington (bot),31488909,73,1,60,34,2,0,e4fab070f0c5497f171708cbd3a1dd95d0fdd1bc::
https://api.github.com/repos/python/cpython,110877,backport-12deda7-3.12::3.12,0,merged,skip news::,(cherry picked from commit 12deda763359d46d4eccbb8991afed71fa31a68b) Co-authored-by: Nikita Sobolev <mail@sobolevn.me> <!-- gh-issue-number: gh-101100 --> * Issue: gh-101100 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--110877.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::,Miss Islington (bot),31488909,73,1,60,34,2,0,2befca0fbc544d5ea9c9366580215ef3a394c799::
https://api.github.com/repos/python/cpython,110873,http-lib-perf::main,0,closed,awaiting review::,"<!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> [main] perf: Lib.http.cookiejar performance improve Rewrite some list generate method. Rewrite function deepvalues.::",Tunglies,77394545,3,2,12,12,2,0,4829e2c86e86ea3e2db5ceb7baa7e3e1689a0e9b::e0af156fc8c93e96cd47757cc287bbea90c52577::
https://api.github.com/repos/python/cpython,110871,test_exceptions-testMemoryErrorBigSource::main,0,closed,tests::awaiting core review::skip news::,"1. It uses 4GB of memory, not 3GB. 2. It should be skipped if not enough memory 3. Scope is too wide: the error may occur not only at compile time, but may also occur when the source line is generated or when the compiled code is executed. <!-- gh-issue-number: gh-107450 --> * Issue: gh-107450 <!-- /gh-issue-number --> ::",Serhiy Storchaka,3659035,401,1,5,3,1,0,b790655be7fca07a6affb755aef2473a323f83c7::
https://api.github.com/repos/python/cpython,110870,backport-5965891-3.11::3.11,0,merged,skip issue::skip news::,"Backport 5965891 3.11 <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--110870.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::",Thomas Grainger,413772,307,2,0,2,1,0,6efb9f2e9fcb9485571e9e332b8000331d0f3c01::3be5a44b1bdfebfbeafc0c181524f46a0974dd3b::
https://api.github.com/repos/python/cpython,110868,issue-110864::main,0,merged,needs backport to 3.12::,"This fix feels like a hack (basically as any other argument parsing fix) :) But, it seems to be semantically correct, do its job, pass tests. <!-- gh-issue-number: gh-110864 --> * Issue: gh-110864 <!-- /gh-issue-number --> ::",Nikita Sobolev,4660275,4663,1,130,2,5,1,c4ca210f12a18edbe30b91aeb6e1915d74936caf::
https://api.github.com/repos/python/cpython,110867,backport-5965891-3.12::3.12,0,merged,skip issue::skip news::,(cherry picked from commit 596589104fe5a4d90cb145b2cc69b71cc9aa9f07) Co-authored-by: Thomas Grainger <tagrain@gmail.com>::,Miss Islington (bot),31488909,73,1,0,2,1,0,81a88fcbada838bf1295f413a91e2a2e3c598c60::
https://api.github.com/repos/python/cpython,110862,issue-101100-time::main,0,merged,skip news::,Before: ``` /Users/sobolev/Desktop/cpython/Doc/library/time.rst:71: WARNING: c:func reference target not found: gettimeofday /Users/sobolev/Desktop/cpython/Doc/library/time.rst:71: WARNING: c:func reference target not found: select /Users/sobolev/Desktop/cpython/Doc/library/time.rst:87: WARNING: py:attr reference target not found: tm_gmtoff /Users/sobolev/Desktop/cpython/Doc/library/time.rst:87: WARNING: py:attr reference target not found: tm_zone /Users/sobolev/Desktop/cpython/Doc/library/time.rst:92: WARNING: py:attr reference target not found: tm_gmtoff /Users/sobolev/Desktop/cpython/Doc/library/time.rst:92: WARNING: py:attr reference target not found: tm_zone /Users/sobolev/Desktop/cpython/Doc/library/time.rst:578: WARNING: py:attr reference target not found: tm_year /Users/sobolev/Desktop/cpython/Doc/library/time.rst:580: WARNING: py:attr reference target not found: tm_mon /Users/sobolev/Desktop/cpython/Doc/library/time.rst:582: WARNING: py:attr reference target not found: tm_mday /Users/sobolev/Desktop/cpython/Doc/library/time.rst:584: WARNING: py:attr reference target not found: tm_hour /Users/sobolev/Desktop/cpython/Doc/library/time.rst:586: WARNING: py:attr reference target not found: tm_min /Users/sobolev/Desktop/cpython/Doc/library/time.rst:588: WARNING: py:attr reference target not found: tm_sec /Users/sobolev/Desktop/cpython/Doc/library/time.rst:591: WARNING: py:attr reference target not found: tm_wday /Users/sobolev/Desktop/cpython/Doc/library/time.rst:593: WARNING: py:attr reference target not found: tm_yday /Users/sobolev/Desktop/cpython/Doc/library/time.rst:595: WARNING: py:attr reference target not found: tm_isdst /Users/sobolev/Desktop/cpython/Doc/library/time.rst:597: WARNING: py:attr reference target not found: tm_zone /Users/sobolev/Desktop/cpython/Doc/library/time.rst:599: WARNING: py:attr reference target not found: tm_gmtoff /Users/sobolev/Desktop/cpython/Doc/library/time.rst:604: WARNING: py:attr reference target not found: tm_isdst /Users/sobolev/Desktop/cpython/Doc/library/time.rst:917: WARNING: py:attr reference target not found: tm_gmtoff /Users/sobolev/Desktop/cpython/Doc/library/time.rst:917: WARNING: py:attr reference target not found: tm_zone ``` <!-- gh-issue-number: gh-101100 --> * Issue: gh-101100 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--110862.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::,Nikita Sobolev,4660275,4663,1,60,34,2,0,37a076990e930431567fa13a395cc0b44b3fc513::
https://api.github.com/repos/python/cpython,110861,backport-4110cfe-3.12::3.12,0,merged,skip news::,(cherry picked from commit 4110cfec1233139b4e7c63459ba465ab80554e3e) Co-authored-by: Kirill Podoprigora <kirill.bast9@mail.ru> <!-- gh-issue-number: gh-110715 --> * Issue: gh-110715 <!-- /gh-issue-number --> ::,Miss Islington (bot),31488909,73,1,19,7,2,0,01a5813cc20c4cca9b64c4f63bf1ce741eed9a72::
https://api.github.com/repos/python/cpython,110860,backport-e2b3d83-3.11::3.11,0,merged,,Now re.error is raised instead of OverflowError or RuntimeError for too large width of look-behind pattern. The limit is increased to 2**32-1 (was 2**31-1). (cherry picked from commit e2b3d831fd2824d8a5713e3ed2a64aad0fb6b62d) Co-authored-by: Serhiy Storchaka <storchaka@gmail.com> <!-- gh-issue-number: gh-109747 --> * Issue: gh-109747 <!-- /gh-issue-number --> ::,Miss Islington (bot),31488909,73,1,46,13,6,0,8f6358142fbb22e27daf5ae3c5b5d763e84e2463::
https://api.github.com/repos/python/cpython,110859,backport-e2b3d83-3.12::3.12,0,merged,,Now re.error is raised instead of OverflowError or RuntimeError for too large width of look-behind pattern. The limit is increased to 2**32-1 (was 2**31-1). (cherry picked from commit e2b3d831fd2824d8a5713e3ed2a64aad0fb6b62d) Co-authored-by: Serhiy Storchaka <storchaka@gmail.com> <!-- gh-issue-number: gh-109747 --> * Issue: gh-109747 <!-- /gh-issue-number --> ::,Miss Islington (bot),31488909,73,1,46,13,6,0,deb42aa968e039ecb5b51c7fc17b7d0dcb951be3::
https://api.github.com/repos/python/cpython,110858,backport-ca0f3d8-3.11::3.11,0,merged,tests::skip news::,(cherry picked from commit ca0f3d858d069231ce7c5b382790a774f385b467) Co-authored-by: Serhiy Storchaka <storchaka@gmail.com> <!-- gh-issue-number: gh-107705 --> * Issue: gh-107705 <!-- /gh-issue-number --> ::,Miss Islington (bot),31488909,73,1,10,5,1,0,ce5808b38f4cd4107595dbcdfb3dcec99a2298ce::
https://api.github.com/repos/python/cpython,110857,backport-ca0f3d8-3.12::3.12,0,merged,tests::skip news::,(cherry picked from commit ca0f3d858d069231ce7c5b382790a774f385b467) Co-authored-by: Serhiy Storchaka <storchaka@gmail.com> <!-- gh-issue-number: gh-107705 --> * Issue: gh-107705 <!-- /gh-issue-number --> ::,Miss Islington (bot),31488909,73,1,10,5,1,0,77c81031c46dbca2ef7d5368cc095e27aa0602af::
https://api.github.com/repos/python/cpython,110856,backport-45cfabb-3.11::3.11,0,merged,skip news::,(cherry picked from commit 45cfabb8429b5ecee78ca60c1ca8f7f5820afc5c) Co-authored-by: Nikita Sobolev <mail@sobolevn.me> <!-- gh-issue-number: gh-101100 --> * Issue: gh-101100 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--110856.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::,Miss Islington (bot),31488909,73,1,9,9,2,0,2ebd204e6ad95ebf486281ccc4522f7f2e6d332e::
https://api.github.com/repos/python/cpython,110855,backport-45cfabb-3.12::3.12,0,merged,skip news::,(cherry picked from commit 45cfabb8429b5ecee78ca60c1ca8f7f5820afc5c) Co-authored-by: Nikita Sobolev <mail@sobolevn.me> <!-- gh-issue-number: gh-101100 --> * Issue: gh-101100 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--110855.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::,Miss Islington (bot),31488909,73,1,9,9,2,0,d4b896265f3d281af71f418e9f9c2950f1dee101::
https://api.github.com/repos/python/cpython,110854,backport-9d40ebf-3.12::3.12,0,merged,skip news::,(cherry picked from commit 9d40ebf1902812fad6aa85ede7b6f1fdff3c1291) <!-- gh-issue-number: gh-110628 --> * Issue: gh-110628 <!-- /gh-issue-number --> ::,Serhiy Storchaka,3659035,401,1,590,0,3,0,c2c9596df285edf66407fa263a7b8ff634d72e01::
https://api.github.com/repos/python/cpython,110853,backport-84e2096-3.12::3.12,0,merged,,* tty.setraw() and tty.setcbreak() previously returned partially modified list of the original tty attributes. Now they return the correct list of the original tty attributes * tty.cfmakeraw() and tty.cfmakecbreak() now make a copy of the list of special characters before modifying it. (cherry picked from commit 84e2096fbdea880799f2fdb3f0992a8961106bed) Co-authored-by: Serhiy Storchaka <storchaka@gmail.com> <!-- gh-issue-number: gh-110392 --> * Issue: gh-110392 <!-- /gh-issue-number --> ::,Miss Islington (bot),31488909,73,1,12,2,3,0,f1c59330ac727b13bafe732a6e77ba180229c070::
https://api.github.com/repos/python/cpython,110849,ci_no_rerun_fail::main,0,merged,skip issue::skip news::,"<!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> ::",Victor Stinner,194129,1148,1,0,2,2,0,7f08f8830ffdda98574c3c6d564106230d5dcf75::
https://api.github.com/repos/python/cpython,110847,redundant-attach-loop::main,0,merged,skip issue::skip news::,"PidfdChildWatcher and ThreadedChildWatcher both define a noop attach_loop method so the call is redundant I didn't think this PR requires an issue <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> ::",Thomas Grainger,413772,307,1,0,2,1,1,d266e0ace7aef0d84c961ed8df96cfeb5ab677f0::
https://api.github.com/repos/python/cpython,110841,issue-101100-cmdline::main,0,merged,skip news::,Warnings before: ``` /Users/sobolev/Desktop/cpython/Doc/using/cmdline.rst:104: WARNING: 'envvar' reference target not found: PYTHON* /Users/sobolev/Desktop/cpython/Doc/using/cmdline.rst:162: WARNING: 'envvar' reference target not found: PYTHON* /Users/sobolev/Desktop/cpython/Doc/using/cmdline.rst:283: WARNING: 'envvar' reference target not found: PYTHON* /Users/sobolev/Desktop/cpython/Doc/using/cmdline.rst:305: WARNING: 'envvar' reference target not found: PYTHON* /Users/sobolev/Desktop/cpython/Doc/using/cmdline.rst:364: WARNING: py:meth reference target not found: __hash__ /Users/sobolev/Desktop/cpython/Doc/using/cmdline.rst:861: WARNING: py:const reference target not found: SIGSEGV /Users/sobolev/Desktop/cpython/Doc/using/cmdline.rst:861: WARNING: py:const reference target not found: SIGFPE /Users/sobolev/Desktop/cpython/Doc/using/cmdline.rst:861: WARNING: py:const reference target not found: SIGABRT /Users/sobolev/Desktop/cpython/Doc/using/cmdline.rst:861: WARNING: py:const reference target not found: SIGBUS /Users/sobolev/Desktop/cpython/Doc/using/cmdline.rst:861: WARNING: py:const reference target not found: SIGILL ``` <!-- gh-issue-number: gh-101100 --> * Issue: gh-101100 <!-- /gh-issue-number --> ::,Nikita Sobolev,4660275,4663,1,9,9,2,0,42bf1297592ca4f3192b5f7b0fe780f124cc6c2b::
https://api.github.com/repos/python/cpython,110840,quay.io::main,0,closed,skip issue::skip news::,"<!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> ::",Donghee Na,5110323,401,1,1,1,1,0,255e80f4fb3c9db94aead1c8d238a9affb4feeaf::
https://api.github.com/repos/python/cpython,110839,quay.io::main,0,closed,skip issue::skip news::,"<!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> ::",Donghee Na,5110323,401,1,1,1,1,0,df5d4c1d53436e18742f4c45dade95a0a09b913e::
https://api.github.com/repos/python/cpython,110837,gh-109693-finalizing::main,0,merged,skip news::,"<!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-109693 --> * Issue: gh-109693 <!-- /gh-issue-number --> ::Most code seems to write pointers as `PyThreadState *_finalizing`::",Donghee Na,5110323,401,2,3,4,1,0,22712eddcff5c7e2f49658e70b9eeeb30704bb71::5143b5a1f4ed8580c4e22bcf80f86ee5bd1b3892::
https://api.github.com/repos/python/cpython,110836,gh-109693-gil-api::main,0,merged,skip news::,"<!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-109693 --> * Issue: gh-109693 <!-- /gh-issue-number --> ::Hum, __int64 is larger than int, no?::> Hum, __int64 is larger than int, no? Hmm I am checking this: https://learn.microsoft.com/en-us/cpp/build/arm64-windows-abi-conventions?view=msvc-170::Yeah you are right, it should be 32bit.::``` *(volatile int *)obj = value; ```::``` __stlr32((unsigned __int32 volatile *)obj, (unsigned __int32)value); ```::``` return (int)__ldar32((unsigned __int32 volatile *)obj); ```::I think this should be: `const _Atomic(int)*`::Should only have the `_Py_atomic_store_int_release` call::Error message should say ""_Py_atomic_store_int_release""::Error message should say ""_Py_atomic_load_int_acquire""::Thanks, this is my mistake.::@colesbury Basically, int volatile * and volatile int* have the same meaning. So I just follow the convention from `_Py_atomic_load_ptr_acquire`::This test is strange. You should test the load() result, no?::I would prefer to mention a real symbol: ```suggestion #include ""pycore_atomic.h""        // _Py_ANNOTATE_RWLOCK_CREATE ``` Same remark in Python/thread_pthread.h.::It terms of memory alignment, is it safe to cast `int*` to `int32*`? Is it the same size? Please add: ``` _Py_atomic_ASSERT_ARG_TYPE(unsigned __int32); ```::",Donghee Na,5110323,401,19,86,18,8,0,1eb79142b9d975c1582173ebeef4c84a1bd2f5e9::6ad8d1b1fc2bf8d46e0a47521fcdffb1632b3515::7624da864a5ab7db61716d0ce680084032fb528a::efe778d33ff83042dc7384f19f07fd5a1fa26519::869a350442fc25d7eb7b1ad775dfbeeb2a0837fe::64196a852b53b0158e138aec66c4ec8f104f5435::bd7d3b1fe088c3fafc5dc9c3360c6c57c4c690c5::06847b62de0c00c90f028e25d1f614de6eca1f04::39989fc7dd377e1217e1ff6f85b507a1e11d3fe2::48cb6639c4b8267573cdcd197fd733dfcb23384c::89aa5b7c93d657f59cdb577bf43480354265288d::c0bdbc63d93f74bd2077a0170a9c82df7f621d15::fffdcff88ea5e78287aabea3170eb4ab897d9b04::061265e51b54ed1e7c26caf6423e4511e7eb66aa::b5d053950958624f9910435e05ae1984fc72dd88::e37e80da38c544dceb3e0752310f26bcca6b87f2::044570ebed4dcae4a4d087c4589585bf1192b73c::b067e13b6586b1903dc21a871f1e26854fbc4051::c58dfc80ab34933793a2d6c7d27a7af71234c1f1::
https://api.github.com/repos/python/cpython,110834,backport-0ed2329-3.11::3.11,0,merged,skip issue::skip news::,(cherry picked from commit 0ed2329a1627fc8ae97b009114cd960c25567f75) Co-authored-by: Alex Waygood <Alex.Waygood@Gmail.com>::,Miss Islington (bot),31488909,73,1,2,3,1,0,9e8b0f70403465b675a523873f579b2bfbe9696f::
https://api.github.com/repos/python/cpython,110833,backport-0ed2329-3.12::3.12,0,merged,skip issue::skip news::,(cherry picked from commit 0ed2329a1627fc8ae97b009114cd960c25567f75) Co-authored-by: Alex Waygood <Alex.Waygood@Gmail.com>::,Miss Islington (bot),31488909,73,1,2,3,1,0,2ce405d14807231d0650a0bd820e134c78bebd89::
https://api.github.com/repos/python/cpython,110832,overflow-error-col-offset::main,0,merged,skip news::,"<!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-107450 --> * Issue: gh-107450 <!-- /gh-issue-number --> ::I think i need some context on why we need a new error code for this. Couldn't we just raise an exception and let it propagate?::I thought of doing it this way mainly because of consistency. The tokenizer does not raise any errors other than syntax or indent errors, instead it sets the error code when encountering decode errors, memory errors or other overflow errors. Do you think we should just raise directly? ::Hummm, I think it makes sense to not raise for consistency but I feel that this case may be too particular. In general I am afraid that we will eventually end with tons of error codes but that may be premature to consider. I trust your judgement here so let's go with this if you think this is the way to go 🙂::`ctypes` is optional.::See also #110871 that fixes other issues in this test.::Why not simply `tok->col_offset >= INT_MAX`?::Simply `_testcapi.INT_MAX`. It is better to substract `len(""pass"")` in the test code.::```suggestion @support.bigmemtest(INT_MAX, memuse=2, dry_run=False) def testMemoryErrorBigSource(self, size): src = b""if True:\n%*s"" % (size, b""pass"")  # bytes formatting is faster with self.assertRaises(OverflowError): compile(src, '<fragment>', 'exec') ```::Just to be sure that if someone else increases the col_offset, we will catch this as well. Otherwise, `tok->col_offset` would already have overflowed and it'd be `tok->col_offset < INT_MAX`.::If `tok->col_offset` is non-negative, `INT_MAX - tok->col_offset - 1 < 0` is the same as `tok->col_offset >= INT_MAX`. If `tok->col_offset` is negative, `INT_MAX - tok->col_offset` is an undefined behavior. Maybe write it as `(unsigned int)tok->col_offset >= (unsigned int)INT_MAX`?::I've pushed some changes. I don't know how to do bytes formatting and `b""%*s"" % (size, b""pass"")` does not work, I think.::`size` is always INT_MAX, so this condition is always false.::`_testcapi` is also optional. It can be missed in other Python implementations, while most of these tests are implementation agnostic. You need to provide a fallback. Or simply define `INT_MAX = 2**31-1`. sys.maxsize can be used instead of PY_SSIZE_T_MAX. ::``` >>> b""%*s"" % (10, b""pass"") b'      pass' ``` Did you miss some of `b`s?::Oh, that's what `dry_run=False` does? ::@serhiy-storchaka Any advice on this?::```suggestion src = b""if True:\n%*s"" % (size, b""pass"")  # bytes formatting is faster ```::Yup, I might have missed something. Sorry for the noise.::",Lysandros Nikolaou,20306270,38,6,40,22,4,1,16d508d3af886777f76d76ecf6d6fb9d9ac28cbb::c8433ca03c5065711c7b431dbdc196d567080543::e4a059e1db318425c24748afa4618f80bec89217::5d7c5a665f63e8c9e1bc1f6847f5a167e1087ed7::66d94be0d3ae4df5f35369fd31f47ab91e2f6550::f20b95f679d215d6e5b99929b721f6ef50d407b8::
https://api.github.com/repos/python/cpython,110830,bump-sphinx-lint::main,0,merged,skip issue::skip news::,"And use the new `-j1` flag for sphinx-lint, rather than the `require_serial` setting. This seems to be _marginally_ faster on my machine (~4s rather than ~5s).::",Alex Waygood,66076021,141,1,2,3,1,0,d3eb10d3f8fccf0f9d08be6d23acbc242f887c11::
https://api.github.com/repos/python/cpython,110827,backport-f81e36f-3.11::3.11,0,merged,docs::skip news::,* Remove redundant versionchanged * Add missing versionchanged * Update Doc/library/asyncio-task.rst Co-authored-by: Kumar Aditya <kumaraditya@python.org> --------- (cherry picked from commit f81e36f700ac8c6766207fcf3bc2540692af868b) Co-authored-by: paskozdilar <53006174+paskozdilar@users.noreply.github.com> Co-authored-by: Kumar Aditya <kumaraditya@python.org> <!-- gh-issue-number: gh-110703 --> * Issue: gh-110703 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--110827.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::,Miss Islington (bot),31488909,73,1,3,3,1,0,52aee0f8bfe202aa1ffff03ab47972a0fe6ac61d::
https://api.github.com/repos/python/cpython,110826,backport-f81e36f-3.12::3.12,0,merged,docs::skip news::,* Remove redundant versionchanged * Add missing versionchanged * Update Doc/library/asyncio-task.rst Co-authored-by: Kumar Aditya <kumaraditya@python.org> --------- (cherry picked from commit f81e36f700ac8c6766207fcf3bc2540692af868b) Co-authored-by: paskozdilar <53006174+paskozdilar@users.noreply.github.com> Co-authored-by: Kumar Aditya <kumaraditya@python.org> <!-- gh-issue-number: gh-110703 --> * Issue: gh-110703 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--110826.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::,Miss Islington (bot),31488909,73,1,3,3,1,0,3a2994e86f573ddb08df283c45769ce73c3e01fa::
https://api.github.com/repos/python/cpython,110825,backport-548ce09-3.12::3.12,0,merged,skip news::,(cherry picked from commit 548ce0923b9ef93b1c1df59f8febc4bb3daff28a) Co-authored-by: Serhiy Storchaka <storchaka@gmail.com> <!-- gh-issue-number: gh-110815 --> * Issue: gh-110815 <!-- /gh-issue-number --> ::,Miss Islington (bot),31488909,73,1,70,18,2,0,dd99f044d7ca2211de502b3b7b45720787fdb527::
https://api.github.com/repos/python/cpython,110823,backport-2ab34f0-3.12::3.12,0,merged,docs::skip news::,"* gh-110803: Reorganize docs for what PyType_Slot doesn't cover - Cover the offset fields first - Mention the old alternative for MANAGED flags, which is needed to support older Pythons - De-emphasize the internal flags: use an inline list. - Add a note to PyMemberDef saying what to do with it * Remove an older draft... (cherry picked from commit 2ab34f0e425d90d0a153104ef2f4343dce2a414d) Co-authored-by: Petr Viktorin <encukou@gmail.com> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--110823.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::",Miss Islington (bot),31488909,73,1,32,15,2,0,6eda19a27c1e96ee67e1bf2c9cb7143f0591b736::
https://api.github.com/repos/python/cpython,110822,issue-110715::main,0,merged,skip news::,<!-- gh-issue-number: gh-110715 --> * Issue: gh-110715 <!-- /gh-issue-number --> ::Would you mind moving it to the instance method of AbstractTestsWithSourceFile? Another utility method already exists. https://github.com/python/cpython/blob/1b448a2fdfc7a7e978ce7b908f4c160a3901d3e1/Lib/test/test_zipfile/test_core.py#L85-L95::class `OtherTests` isn't inherited from `AbstractTestsWithSourceFile`. Should I move helper  and tests to `AbstractTestsWithSourceFile`?::Oh please move to `OtherTests`. I misread the code :)::Done.::,Kirill Podoprigora,80244920,38,4,19,7,2,0,eac69535db412b489d8430cb1e30fd18002b3ebe::1b448a2fdfc7a7e978ce7b908f4c160a3901d3e1::a416a7611504035d5c33613772956991bcc12f37::051ccee32c082ea4203d0f55632724860286e273::
https://api.github.com/repos/python/cpython,110818,main::main,0,merged,docs::topic-asyncio::skip news::,"<!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-110703 --> * Issue: gh-110703 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--110818.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::```suggestion Raises :exc:`TimeoutError` instead of :exc:`asyncio.TimeoutError`. ```::",,53006174,3,3,3,3,1,0,535078e5e35541e6c88e23abd67f1ce6ecab7d8e::48162e486fd46a5a775afc1379a9bde90825fbe6::a90a0ecfa059776e3fc063caa4218656802a6dbd::
https://api.github.com/repos/python/cpython,110817,test_capi-parse_tuple_and_keywords::main,0,merged,tests::skip news::,<!-- gh-issue-number: gh-110815 --> * Issue: gh-110815 <!-- /gh-issue-number --> ::,Serhiy Storchaka,3659035,401,1,70,18,2,0,c41cacbd0085c80cac5982719a8836c5f3e2a47b::
https://api.github.com/repos/python/cpython,110816,capi-non-ascii-keyword-parameters::main,0,merged,,"It already mostly worked, except in the case when invalid keyword argument with non-ASCII name was passed to function with non-ASCII parameter names. Then it crashed in the debug mode. <!-- gh-issue-number: gh-110815 --> * Issue: gh-110815 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--110816.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::",Serhiy Storchaka,3659035,401,2,64,3,5,0,5153eb83c127ede5158a30779def4910c1e9697a::6411f07cfd251abd587ebd19112b80386d901556::
https://api.github.com/repos/python/cpython,110814,gh-110805::main,0,merged,skip news::,<!-- gh-issue-number: gh-110805 --> * Issue: gh-110805 <!-- /gh-issue-number --> ::,Pablo Galindo Salgado,11718525,847,1,1,1,1,0,cae2347625ddfa55a1a7456cd79b4e01bbac1ab2::
https://api.github.com/repos/python/cpython,110813,gh-110803::main,0,merged,docs::skip news::,"- Cover the offset fields first - Mention the old alternative for MANAGED flags, which is needed to support older Pythons - De-emphasize the internal flags: use an inline list. - Add a note to PyMemberDef saying what to do with it (Not to be backported to 3.11, which doesn't have public `Py_TPFLAGS_MANAGED_*` flags.) <!-- gh-issue-number: gh-110803 --> * Issue: gh-110803 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--110813.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::",Petr Viktorin,302922,295,2,32,15,2,0,3a0b4b0eeeb0995259059ebfaa90d2e284fbb272::dacc9957d89d4fec3c09aa87765fdef81445c46a::
https://api.github.com/repos/python/cpython,110811,pyspecific-main::main,0,merged,skip issue::skip news::,"Fix the pyspecific SOURCE_URI, which was accidentally set to 3.12 in the main branch. <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--110811.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::",T. Wouters,3949752,94,1,1,1,1,1,a11219c75bc07e77d518e2a22bb36f7634343c07::
https://api.github.com/repos/python/cpython,110810,test_exceptions_memory_error::main,0,merged,tests::skip news::,"<!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-107450 --> * Issue: gh-107450 <!-- /gh-issue-number --> ::",Lysandros Nikolaou,20306270,38,1,1,1,1,0,d7ed284844c3ae7c406cef7a11e9aec58b520691::
https://api.github.com/repos/python/cpython,110809,backport-05439d3-3.11::3.11,0,merged,tests::skip news::,(cherry picked from commit 05439d308740b621d03562451a7608eb725937ae) Co-authored-by: Lysandros Nikolaou <lisandrosnik@gmail.com> Co-authored-by: Nikita Sobolev <mail@sobolevn.me> <!-- gh-issue-number: gh-107450 --> * Issue: gh-107450 <!-- /gh-issue-number --> ::,Miss Islington (bot),31488909,73,2,4,2,1,0,ccd04866fe90625449ce7e9b710c269b7ac2f0a3::4e522a66a8ef49a6c945c164cf9819f65902a1db::
https://api.github.com/repos/python/cpython,110808,backport-05439d3-3.12::3.12,0,merged,tests::skip news::,(cherry picked from commit 05439d308740b621d03562451a7608eb725937ae) Co-authored-by: Lysandros Nikolaou <lisandrosnik@gmail.com> Co-authored-by: Nikita Sobolev <mail@sobolevn.me> <!-- gh-issue-number: gh-107450 --> * Issue: gh-107450 <!-- /gh-issue-number --> ::,Miss Islington (bot),31488909,73,2,4,2,1,0,28d05eae2dd7f549f68ecf3482b639a9a7dfc12e::b2273a3618b0cabeb2f3fbda1c82899eee706a07::
https://api.github.com/repos/python/cpython,110801,gh-110800::main,0,closed,tests::awaiting core review::skip news::,"<!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-110800 --> * Issue: gh-110800 <!-- /gh-issue-number --> <!-- gh-issue-number: gh-107450 --> * Issue: gh-107450 <!-- /gh-issue-number --> ::I don't think this tests the correct thing. The buffer is way too small to overflow, probably a typo?::This should probably the other way around. If `sizeof(ssize_t) <= sizeof(int)` the cast is always safe, right?::Yep, I forgot it returns the number of bytes :sweat_smile: ::Yeah :upside_down_face:::This probably needs another merge, since a `_size` argument has been added. Also, it might be good to request the size of the buffer we want and then use that. Something like: ```python3 @support.bigmemtest(2 ** (ctypes.sizeof(ctypes.c_int) * 8), memuse=1) def testMemoryErrorBigSource(self, size): padding = '        ' * (size // 8) ```::Merge is needed for this as well. This doesn't check the regex anymore.::Don't we want to keep the regex to make sure we are actually finding the expected error? I don't think it matters that much anyway, though.::Done.::Windows 32-bit produces a different error message.::Yeah, the ""cannot fit 'int' into an index-sized integer"" one, but that's from the `' ' * 2**31` part, not what we intended, which is why this PR is now being careful with the `PySequence_Repeat` operation to not use a number bigger than `Py_ssize_t`. Am I missing something?::Oh right. My error.::No worries :smile: ::",Filipe Laíns,11718923,377,1,10,2,1,0,f932c9625f93f0bddceb337a1aabfb4327e37cbd::
https://api.github.com/repos/python/cpython,110797,gh-110796::main,0,merged,skip news::,"<!-- gh-issue-number: gh-110796 --> * Issue: gh-110796 <!-- /gh-issue-number --> ::Also added a timeout here, as if an unexpected exception is raised in the thread, the event will never be set, and we will deadlock.::",Filipe Laíns,11718923,377,2,3,6,1,0,e9aee87cf4be1dcdd803cf385df5fe60d98abeaa::c6e645f5672adca16044da858e4c087e1c7d3dce::
https://api.github.com/repos/python/cpython,110792,gh-103480::main,0,merged,skip news::release-blocker::,"<!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-103480 --> * Issue: gh-103480 <!-- /gh-issue-number --> ::",Filipe Laíns,11718923,377,1,1,0,1,0,c27efe0aec189ebba72b364459a796556e2aa306::
https://api.github.com/repos/python/cpython,110791,gh-110786::main,0,merged,type-feature::topic-sysconfig::3.13::,"<!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-110786 --> * Issue: gh-110786 <!-- /gh-issue-number --> ::",Filipe Laíns,11718923,377,1,6,1,2,0,55983b06f4c2f42852f309c7eee176c474fdbf05::
https://api.github.com/repos/python/cpython,110790,asyncio_clear_watcher_threads::main,0,closed,tests::topic-asyncio::awaiting core review::skip news::needs backport to 3.11::needs backport to 3.12::,"ThreadedChildWatcher._join_threads() now clears references to completed threads. test_asyncio.utils.TestCase now calls _join_threads() of the watcher, uses SHORT_TIMEOUT to join a thread, and then raises an exception if there are still running threads. Rename also ThreadedChildWatcher threads to add ""asyncio-"" prefix to the name. <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-110205 --> * Issue: gh-110205 <!-- /gh-issue-number --> ::Why are you creating a new instance variable `self.threads` here? Did you intend to clean out completed threads from the dict `self._threads`?::I used the list comprehension above as an example, for me it looks easier to remove completed threads rather than having a regular list and removing items from the list. The purpose of this line is to remove completed threads to save memory and to fix the dangling threads issue.::Do you mean that you prefer to not create a new list?::I modified my PR to use ``self.threads[:] = ...``, so the self.threads list object is not replacd.::As I was trying to let you see for yourself, `self._threads` is a dict, not a list. If you want to update it using a comprehension you can use something like this: ``` self._threads = {key: thread for key, thread in self._threads.items() if thread.daemon or thread.is_alive()} ``` Please test locally before merging.::> Do you mean that you prefer to not create a new list? No I meant that the tests fail because `self._threads` is a dict, not a list.::",Victor Stinner,194129,1148,3,13,6,2,0,d414ed266bfc747d03ea9044ea0f662e2b388f1c::f161daafc1d9be2a96c6486f3924dabfb63eda76::dbbad2d163f835e06514a465d33b3d34c0d42c58::
https://api.github.com/repos/python/cpython,110789,test_timerfd_selector::main,0,merged,tests::skip news::,"Replace select.epoll() with selectors.DefaultSelector to support FreeBSD 14 and newer. * Merge common code between test_timerfd_epoll() test_timerfd_ns_epoll(). * Replace ""_ = func()"" with ""func()"". * Add TimerfdTests.read_count_signaled() method. <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-110697 --> * Issue: gh-110697 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,1,67,102,1,0,574b597f7d8b29e1e722a6802b50aa2e10370c9a::
https://api.github.com/repos/python/cpython,110787,backport-d2a536b-3.12::3.12,0,merged,,(cherry picked from commit d2a536b1706d4a79303b7ac53684bb82eac2de23) Co-authored-by: Jelle Zijlstra <jelle.zijlstra@gmail.com> <!-- gh-issue-number: gh-110782 --> * Issue: gh-110782 <!-- /gh-issue-number --> ::,Miss Islington (bot),31488909,73,1,28,18,3,1,b01475f34457230feeee156d021d0d2acd0afcca::
https://api.github.com/repos/python/cpython,110785,gh-103480::main,0,merged,,"In preparation for the new API, this patch makes `sysconfig` a package. It has been a long time coming and open up several possibilities for improvements — it will allow us to more easily improve the import time, extend the CLI, have better separation between the code logic, etc. <!-- gh-issue-number: gh-103480 --> * Issue: gh-103480 <!-- /gh-issue-number --> ::",Filipe Laíns,11718923,377,3,250,229,4,0,aae3f5c56bf53e39bf5467a7c276ee3c6d8c4770::1372e5ad5c9dc4bb50dec8e1faa51288b1c379c9::9fc7dcb7051d489527a94478d4b03f1471889afc::
https://api.github.com/repos/python/cpython,110784,tvkw::main,0,merged,,"<!-- gh-issue-number: gh-110782 --> * Issue: gh-110782 <!-- /gh-issue-number --> ::I find this form offensive, but since we allowed it in 3.11 I guess we have to keep supporting it, and we can't just make it an error (not crashing of course). (It's especially weird since a type var with constraints *requires* the name to be positional.)::",Jelle Zijlstra,906600,635,2,28,18,3,0,fb598e7568ce390aeedaaa3b03fb68d474c279c0::7558e8eab349f123d13b3bfa280ddde0c7b5a669::
https://api.github.com/repos/python/cpython,110781,regrtest11::3.11,0,merged,skip news::,"gh-110756: Sync regrtest with main branch Copy files from main to this branch: * Lib/test/libregrtest/*.py * Lib/test/__init__.py * Lib/test/__main__.py * Lib/test/autotest.py * Lib/test/pythoninfo.py * Lib/test/regrtest.py * Lib/test/test_regrtest.py Copy also changes from: * Lib/test/support/__init__.py * Lib/test/support/os_helper.py * Lib/test/support/testresult.py * Lib/test/support/threading_helper.py * Lib/test/test_support.py Do not modify scripts running tests such as Makefile.pre.in, .github/workflows/build.yml or Tools/scripts/run_tests.py: do not use --fast-ci and --slow-ci in this change. Changes: * SPLITTESTDIRS: don't include test_inspect. * Add utils.process_cpu_count() using len(os.sched_getaffinity(0)). * test_regrtest doesn't use @support.without_optimizer which doesn't exist in Python 3.11. * Add support.set_sanitizer_env_var(). * Update test_faulthandler to use support.set_sanitizer_env_var(). * @support.without_optimizer doesn't exist in 3.11. * Add support.Py_DEBUG. * regrtest.refleak: 3.11 doesn't have sys.getunicodeinternedsize. <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> ::",Victor Stinner,194129,1148,2,3712,2176,29,0,f452cdf08b926cb3c79394ccb788aa4e39e1dce2::710bdb6e1cd2ff60f8bca18a7d5ca369013676cb::
https://api.github.com/repos/python/cpython,110780,main::main,0,merged,docs::skip issue::skip news::,"There's a stray leading backslash; possibly used with the intention of escaping `**`, it is actually rendered as a literal character: ![__init_subclass__(cls, \**kwds)](https://github.com/python/cpython/assets/122007197/6283b325-df17-4597-b96e-3714b83e1bf3) <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--110780.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::",InSync,122007197,0,1,1,1,1,0,c29cfe5cd2803a835edf03a8390b691b1de6a2d0::
https://api.github.com/repos/python/cpython,110779,regrtest12more::3.12,0,merged,skip news::,"* Remove runtest.py and runtest_mp.py of Lib/test/libregrtest/. * Backport support._parse_memlimit(). <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-110756 --> * Issue: gh-110756 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,1,61,1228,4,0,d996ab5f34a52577d9e4b3f1d81edd300aa23bda::
https://api.github.com/repos/python/cpython,110775,repl3::main,0,merged,,<!-- gh-issue-number: gh-110805 --> * Issue: gh-110805 <!-- /gh-issue-number --> ::We are probably leaking here.::Is this needed?::👍 ::,Pablo Galindo Salgado,11718525,847,7,191,19,11,0,05f943737c77279008b2e88c6181a8fb42f92453::efdfaa4100567a848c2fd0351c50cf45e5a4bca6::757f3c022eb665f521fec8ee8fae480ddfef89bf::171138451dde7fceb82d6c8875aa71c769507234::64e1c41a37f0f6a54b1fd66f28d744001e557291::2da72a3dcd41e51baab354351d8055d46a310b8e::de39d7dc9966a9bec9203129aaf937997b8b1bb3::
https://api.github.com/repos/python/cpython,110773,decomposed-event-loop::main,0,merged,,"Decomposes `run_forever()` into a `run_forever_setup()`, the actual loop, and `run_forever_cleanup()`, so that the CPython asyncio event loop can be easily integrated with other event loops. Refactors the Winforms ProactorEventLoop's `run_forever()` to make use of this new API entry point. I don't believe any additional testing is required, as coverage inside Python won't change. Fixes #110771. <!-- gh-issue-number: gh-110771 --> * Issue: gh-110771 <!-- /gh-issue-number --> ::By convention the first paragraph of a docstring must be a one-line summary. ```suggestion """"""Prepare for processing events. ```::Document the type of the state, please. (If it's meant to be opaque, make it more opaque than a 1-tuple please. :-) I find it a bit odd that the method name is ""run_forever_setup()"", which doesn't hint at the existence of a return value. (Could you store the state to be restored in a private/protected instance variable instead of returning it?) Also, ""arguments""? Or ""argument""?::""is only needed if"" -- odd phrasing. The method exists. Do you mean it only needs to be overridden? Maybe show a brief example of how it's supposed to be used in that case? (I intentionally didn't the docs before reading the code, and from only reading the docstring I'm a bit confused about what's hooking what. From reading more code I realize that setup/cleanup are what you intend to override.)::```suggestion """"""Clean up after the event loop finishes the looping over events. ```::Maybe clarify in this docstring that this is what calls setup/cleanup?::Why this blank line?::Why is there no super call here?::""argument"" I presume? ```suggestion should be passed in as argument to :meth:`loop.run_forever_cleanup()`. ```::Maybe this? Or maybe I misunderstand and the subclass would *call* this and the cleanup method? ```suggestion Overriding this method is only needed if you are writing your own ``EventLoop`` ```::Maybe stronger? ```suggestion end users should not call this method directly. ``` Also below. Also, I'd like to see a tiny example of how to write such a subclass.::```suggestion The *original_state* argument is the return value from the call to ```::Same as above.::The usage I'm envisaging (and the usage that would be needed by Toga would be to *call* the startup/cleanup methods, but provide a custom ""while True: process event"" loop that does whatever is needed for integration. Overriding may also be required - the Windows event loop does this. However, I suspect that's more a case of Python's implementation using subclassing to satisfy the needs of all platforms, rather than something you'll see with GUI integration.::Definitley an oversight (which the test suite has picked up). A correction is incoming.::No longer relevant as I've moved this to be an internal variable.::No longer relevant as I've moved this to be an internal variable.::I've modified the implementation to store the state as a protected variable, which simplifies the interface.::No - it would be run_forever() that is being replaced. I've provided a sample implementation in the docs; I'll clarify the language here to (hopefully) make the intended usage more clear.::Maybe say something about whether this is re-entrant? Should I worry about not calling it twice?::I would imagine these two should happen in the reverse order? Cleanup in reverse order of setup. (Also, to be more robust, I'd use multiple nested `try/finally`s, but the example doesn't need that complexity.::It's unfortunate you need to use private (technically ""protected"") API and variable here. Then again, maybe ""private"" is the right term and we're okay with subclasses using those. It's also unfortunate that this documentation now constrains what we can do in `run_forever()`. It almost seems that we might as well document what `run_forever()` does and specify it as never doing anything else. ::I'll reverse the order; agreed that another layer of try/finally is probably overkill for documenation purposes.::",Russell Keith-Magee,37345,1675,12,95,31,4,0,a0c1fde9ec0bec2582400156bca37ad111eccb5b::67bfc8f756c8b29c9abb33a71598e60729cc6486::3dcf97b3ee9623c2f716c93dfdcca6c1d16c14ed::35271dc9947acb1b8e759a6af253de1e1ffce27d::6672f6875eee9d281889f1fc34180c913f4faed2::54349c3decf269aac4abc75bc0459ec7283c323f::e6226a5cb7c24bd00dec0de14cf8cc1aeae3559c::23852d0fcd3e1b1d24ecdc3132608238bbf198b2::e7f892e529b2f8b3eb0e1d6fce5b3bb22e449385::f944944edaa876385421e305e8917fb2110972f3::3143126de9b18902ddc3767c86796fc6f5660e79::1b3e3d88eff6482e5220ea636f0dadd858cd86ef::
https://api.github.com/repos/python/cpython,110769,gh-110722-presite::main,0,merged,,"This is only available --with-pydebug. <!-- gh-issue-number: gh-110722 --> * Issue: gh-110722 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--110769.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::Sphinx is really stupid :-( With your syntax, it cannot create a reference from the -X option doc to this variable, it warns: ``` 'envvar' reference target not found: PYTHON_PRESITE ``` I suggest: ```suggestion .. envvar:: PYTHON_PRESITE ```::```suggestion fprintf(stderr, ""Could not convert pre-site module name to unicode\n""); ```::Maybe rename it to just ""presite"".::Can you add a function for this code to keep init_interp_main() short?::If we want to change this back, we should also change `PYTHONDUMPREFSFILE=FILENAME ` above. I noticed and worked around this problem in references I made for Blurb and in cmdline.rst above.::Yeah, please change also PYTHONDUMPREFSFILE. There is a reference to this env var: ``` Misc/NEWS.d/3.11.0a1.rst:A debug variable :envvar:`PYTHONDUMPREFSFILE` is added for creating a dump ``` I don't know why Sphinx cannot handle this case.::Added in the upcoming push.::Added in the upcoming push.::Changed in the upcoming push.::It's symmetrical to the other run_* PyConfig attributes that run things so I decided to keep the name.::```suggestion if (config->run_presite == NULL) { ```::s/""Need a""/""Requires a""/::Mention that this only applies to debug builds of CPython.::these lines should be indented another level, they're within the config->run_presite if.::This was modelled after the other entries in this same list.::This section of the docs is called ""Debug-mode variables"".::Other variables document which kind of build is needed. Either document here that a debug build is needed, or mention under ""Debug-mode variables"" title that a debug build is needed.::`cmdline.rst` also uses the ""Need a"" wording. Let's fix this in a separate PR.::Right, good point, I haven't realized `--with-trace-refs` doesn't require `--with-pydebug`. Incoming fix.::I like this doc the most, you should copy it in other places where you documented the feature :-) For example, the PyConfig doc is different and IMO misleading. ```suggestion early in the interpreter lifecycle, before the :mod:`site` module is executed, ``` I suggest to add: I suggest: ``` It can be used to execute code early during Python initialization. ``` To highlight, that it's not only about *importing* a module, but also to execute it. If you want, you can add: ``` It can be a sub-module of a package such as `package.module`. ```::",Łukasz Langa,55281,1995,10,178,7,8,0,3daa65ac8d24252965bb09b497993e4587b01f90::1ef282b75e78dce1cc035a24746a49c5c2eaae04::8a201b4a63069982d9670d3bc595262f90a20e5d::f192e383808c598dea153e223488cc6ef6232f1a::b89548d9e5f55331dde9c0a9a844a235d734373f::ebcc37335046e7be519da9a1707ca718e6e4a53e::bebb594697228f2405999c670e66ad825ae440bf::08679d85395cd63ab2ce32ccf7fd000f164f1f79::3d3f5d36902a296d4bc232a87301bf6babfd2d35::2e1d1805b5302ad3529d43b08271ae5de8649be2::
https://api.github.com/repos/python/cpython,110768,overflowerror-windows-fix::main,0,merged,tests::skip news::,"<!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-107450 --> * Issue: gh-107450 <!-- /gh-issue-number --> ::```suggestion with self.assertRaises(OverflowError): ```::",Lysandros Nikolaou,20306270,38,3,3,1,1,0,c8de7b8ed46ade2156864565570a4b20232dd532::007a3566bd4ca8c2e6b8a0136eef26adbf70f664::97d9c5bbb1bfbfdbc5e39f07c0cacff5d720cf64::
https://api.github.com/repos/python/cpython,110766,backport-3d18034-3.11::3.11,0,merged,,"… (cherry picked from commit 3d180347ae73119bb51500efeeafdcd62bcc6f78) <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-110696 --> * Issue: gh-110696 <!-- /gh-issue-number --> ::",Pablo Galindo Salgado,11718525,847,2,1361,989,4,0,2a1d64e23f77f93f740baf241fedb9a6669b4442::f0280859056807d1f08f975860897796269d39bc::
https://api.github.com/repos/python/cpython,110765,backport-3d18034-3.12::3.12,0,merged,,"… (cherry picked from commit 3d180347ae73119bb51500efeeafdcd62bcc6f78) <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-110696 --> * Issue: gh-110696 <!-- /gh-issue-number --> ::",Pablo Galindo Salgado,11718525,847,1,1539,1173,4,0,e1b8f4ed5f46417a9836b657ae3b5ca54936511e::
https://api.github.com/repos/python/cpython,110763,backport-fb7843e-3.11::3.11,0,merged,skip news::,(cherry picked from commit fb7843ee895ac7f6eeb58f356b1a320eea081cfc) Co-authored-by: Lysandros Nikolaou <lisandrosnik@gmail.com> <!-- gh-issue-number: gh-107450 --> * Issue: gh-107450 <!-- /gh-issue-number --> ::,Miss Islington (bot),31488909,73,1,10,0,2,0,d71d4f278bdfb8b511658d51b296de7fc0c6a9f7::
https://api.github.com/repos/python/cpython,110762,backport-fb7843e-3.12::3.12,0,merged,skip news::,(cherry picked from commit fb7843ee895ac7f6eeb58f356b1a320eea081cfc) Co-authored-by: Lysandros Nikolaou <lisandrosnik@gmail.com> <!-- gh-issue-number: gh-107450 --> * Issue: gh-107450 <!-- /gh-issue-number --> ::,Miss Islington (bot),31488909,73,1,10,0,2,0,6cd39f7ad44468066e3e521c294e6afc10b93405::
https://api.github.com/repos/python/cpython,110761,backport-3.11-clinic-migration::3.11,0,merged,docs::skip news::,(cherry picked from commit d1f7fae424d51b0374c8204599583c4a26c1a992) * Remove the content of the Argument Clinic HOWTO * Update cross-references to the Argument Clinic * Add a note directing readers to the devguide <!-- gh-issue-number: gh-107518 --> * Issue: gh-107518 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--110761.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::,Erlend E. Aasland,13780613,72,2,7,1924,4,0,11afeaf4e92f21e8d0d42b38964d3435230e9ff0::76744536cd3e5b5bfb3d2ba0658002e563302712::
https://api.github.com/repos/python/cpython,110760,backport-3.12-clinic-migration::3.12,0,merged,docs::skip news::,(cherry picked from commit d1f7fae424d51b0374c8204599583c4a26c1a992) * Remove the content of the Argument Clinic HOWTO * Update cross-references to the Argument Clinic * Add a note directing readers to the devguide <!-- gh-issue-number: gh-107518 --> * Issue: gh-107518 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--110760.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::,Erlend E. Aasland,13780613,72,1,6,1893,3,0,af637361082027b8abac99197569b68b10f73f16::
https://api.github.com/repos/python/cpython,110759,redundant_arg::main,0,merged,skip news::interpreter-core::,"The `prev_instr` arg is not actually used (always passed 0). I suggest removing it rather than migrating it to `instr_ptr`, since there are no tests to tell us if we're doing it right. It would not be hard to re-implement this if and when we need it. <!-- gh-issue-number: gh-109094 --> * Issue: gh-109094 <!-- /gh-issue-number --> ::",Irit Katriel,1055913,162,1,4,4,3,0,9759fb493b3bb1c7674942d730090a1d3b067165::
https://api.github.com/repos/python/cpython,110758,regrtest12::3.12,0,merged,tests::skip news::,"Copy files from main to this branch: * Lib/test/libregrtest/*.py * Lib/test/__init__.py * Lib/test/__main__.py * Lib/test/autotest.py * Lib/test/pythoninfo.py * Lib/test/regrtest.py * Lib/test/test_regrtest.py Do not modify scripts running tests such as Makefile.pre.in, .github/workflows/build.yml or Tools/scripts/run_tests.py: do not use --fast-ci and --slow-ci in this change. Changes: * SPLITTESTDIRS: don't include test_inspect. * Add utils.process_cpu_count() using len(os.sched_getaffinity(0)). * test_regrtest doesn't use @support.without_optimizer which doesn't exist in Python 3.12. * Add support.set_sanitizer_env_var(). * Update test_faulthandler to use support.set_sanitizer_env_var(). <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-110756 --> * Issue: gh-110756 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,1,3372,980,23,0,c27abfb75d7265e3e556defddffb632bf057ff5f::
https://api.github.com/repos/python/cpython,110757,canalyzer-raise-clang::main,0,merged,skip news::,"<!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-106212 --> * Issue: gh-106212 <!-- /gh-issue-number --> ::",Lysandros Nikolaou,20306270,38,1,3,0,1,0,49b2f341673deaf73b87a7943f9009da27f62cf8::
https://api.github.com/repos/python/cpython,110755,set-ip-directly::main,0,merged,skip news::,"Translate `_SAVE_CURRENT_IP` to `_SET_IP` when creating the tier 2 trace. A bit more efficient, but mainly tidier. <!-- gh-issue-number: gh-109214 --> * Issue: gh-109214 <!-- /gh-issue-number --> ::",Mark Shannon,9448417,435,1,22,59,8,0,524628348de355533f9870a9ea3d96fea7130b75::
https://api.github.com/repos/python/cpython,110754,int-overflow-parser-long-string-exec::main,0,merged,skip news::,"<!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-107450 --> * Issue: gh-107450 <!-- /gh-issue-number --> ::",Lysandros Nikolaou,20306270,38,3,10,0,2,0,9cd92ad636ec22a517d45b39856bf8ddfa3a31dd::50186785463c7d0e57c59a07ac1f1ea62118463e::f87e527e25f80eef7a35ed8119e3e0e74e7ac1e9::
https://api.github.com/repos/python/cpython,110753,instrumentation-finalize::main,0,merged,,I tried to read the code and I believe at this point all the threads should be done so we don't need atomic operations. Also no test was added for now. The test requires interpreter finalization so it needs to be in its own process. <!-- gh-issue-number: gh-110752 --> * Issue: gh-110752 <!-- /gh-issue-number --> ::,Tian Gao,13121107,1366,2,5,0,2,0,a7984d5df2ef915085190f7bbc1f70d881e0980c::e9577bdddc7b0522eefd580feeedbc183c888c03::
https://api.github.com/repos/python/cpython,110750,gh-110749::main,0,merged,skip news::,"<!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-110749 --> * Issue: gh-110749 <!-- /gh-issue-number --> ::",Filipe Laíns,11718923,377,1,4,4,1,0,f613bd2d32372d1bf2022b2cef26f5c039cbb566::
https://api.github.com/repos/python/cpython,110743,backport-b4e8049-3.11::3.11,0,merged,tests::skip news::,Add write_all() helper function to test_pty to raise an exception on short write: if os.writes() does not write all bytes. It should not happen for a PTY. (cherry picked from commit b4e8049766a46a9e6548b18d7e9a0c9f573cd122) Co-authored-by: Victor Stinner <vstinner@python.org> <!-- gh-issue-number: gh-110673 --> * Issue: gh-110673 <!-- /gh-issue-number --> ::,Miss Islington (bot),31488909,73,1,14,5,1,0,2b94bc7bf29392371f4629abbdae03429a20a6ff::
https://api.github.com/repos/python/cpython,110742,backport-b4e8049-3.12::3.12,0,merged,tests::skip news::,Add write_all() helper function to test_pty to raise an exception on short write: if os.writes() does not write all bytes. It should not happen for a PTY. (cherry picked from commit b4e8049766a46a9e6548b18d7e9a0c9f573cd122) Co-authored-by: Victor Stinner <vstinner@python.org> <!-- gh-issue-number: gh-110673 --> * Issue: gh-110673 <!-- /gh-issue-number --> ::,Miss Islington (bot),31488909,73,1,14,5,1,0,19aa22d2d5e77c381fc3dae463744f017070da95::
https://api.github.com/repos/python/cpython,110741,backport-41d8ec5-3.11::3.11,0,merged,docs::skip news::,"Fix wrong indentation in the Doc/reference dir.. (cherry picked from commit 41d8ec5a1bae1e5d4452da0a1a0649ace4ecb7b0) <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-110631 --> * Issue: gh-110631 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--110741.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::",Ezio Melotti,25624924,146,1,78,76,4,0,30c858388420a1e28971fd1d515520c37ba80cc7::
https://api.github.com/repos/python/cpython,110740,backport-41d8ec5-3.12::3.12,0,merged,docs::skip news::,Fix wrong indentation in the Doc/reference dir. (cherry picked from commit 41d8ec5a1bae1e5d4452da0a1a0649ace4ecb7b0) Co-authored-by: Ezio Melotti <ezio.melotti@gmail.com> <!-- gh-issue-number: gh-110631 --> * Issue: gh-110631 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--110740.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::,Miss Islington (bot),31488909,73,1,79,77,4,0,b850d11c0ae9c749b9d6dec7dacc8a343c5cb8f3::
https://api.github.com/repos/python/cpython,110739,backport-718391f-3.11::3.11,0,merged,docs::skip news::,"* Fix wrong indentation in the other dirs. * Fix more wrong indentation.. (cherry picked from commit 718391f475f2550d99dd794069ca76312f7f6aa6) <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-110631 --> * Issue: gh-110631 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--110739.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::",Ezio Melotti,25624924,146,1,51,53,7,0,9d36f00ca20513e1b551c0973ca6c6f89495cfdd::
https://api.github.com/repos/python/cpython,110738,backport-718391f-3.12::3.12,0,merged,docs::skip news::,"* Fix wrong indentation in the other dirs. * Fix more wrong indentation.. (cherry picked from commit 718391f475f2550d99dd794069ca76312f7f6aa6) <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-110631 --> * Issue: gh-110631 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--110738.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::",Ezio Melotti,25624924,146,1,51,53,7,0,e0baea8949be37e5d0d4279964699f7833de5c0b::
https://api.github.com/repos/python/cpython,110737,backport-bb7923f-3.11::3.11,0,merged,docs::skip news::,"Fix wrong indentation in the Doc/library dir.. (cherry picked from commit bb7923f556537a463c403dc1097726d8a8e1a6f2) <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-110631 --> * Issue: gh-110631 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--110737.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::```suggestion $ echo ""import this"" | python3 ```::",Ezio Melotti,25624924,146,2,920,914,33,0,809a6770d7b05de474873f961fe911ad28d96369::33e11ba893635a38108586641eee17127f15ec4b::
https://api.github.com/repos/python/cpython,110736,backport-bb7923f-3.12::3.12,0,merged,docs::skip news::,Fix wrong indentation in the Doc/library dir. (cherry picked from commit bb7923f556537a463c403dc1097726d8a8e1a6f2) Co-authored-by: Ezio Melotti <ezio.melotti@gmail.com> <!-- gh-issue-number: gh-110631 --> * Issue: gh-110631 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--110736.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::,Miss Islington (bot),31488909,73,1,933,926,34,0,f7b74dfe3ee29624a253ba5a4f9b34314d9aa1fc::
https://api.github.com/repos/python/cpython,110735,run_once_overhead::main,0,merged,,"Replace `min` and `max` in `_run_once` with simple `<` and `>` close #110733 <!-- gh-issue-number: gh-110733 --> * Issue: gh-110733 <!-- /gh-issue-number --> benchmarks in #110733 ``` new: 0.36033158400096 original: 0.4667800000170246 ``` ::```suggestion Micro-optimization: Avoid calling ``min()``, ``max()`` in :meth:`BaseEventLoop._run_once`. ```::",J. Nick Koston,663432,859,3,6,2,2,0,86a112f61954dede0a777544e59068c0b01c8439::8c40652b0a2074a36a098f99505fa401947ac461::3973df6a404d20255f9e55b8cc9754259462820e::
https://api.github.com/repos/python/cpython,110734,backport-c523ce0-3.12::3.12,0,merged,type-bug::,(cherry picked from commit c523ce0f434582580a3721e15cb7dd6b56ad0236) Co-authored-by: Tian Gao <gaogaotiantian@hotmail.com> <!-- gh-issue-number: gh-65052 --> * Issue: gh-65052 <!-- /gh-issue-number --> ::,Miss Islington (bot),31488909,73,1,62,7,3,0,c1f8fecabf28113f4080be276114e35e2e7d573b::
https://api.github.com/repos/python/cpython,110732,backport-732532b-3.12::3.12,0,merged,skip news::needs backport to 3.11::,(cherry picked from commit 732532b0af9d1b5c7ae4932526c8d20d86c15507) <!-- gh-issue-number: gh-108303 --> * Issue: gh-108303 <!-- /gh-issue-number --> ::,Nikita Sobolev,4660275,4663,2,15,7,11,1,f0002feede8acf7c4166f9234e6d72787e606215::e6cd31754c93a78160c14ff266cb528ff47f910c::
https://api.github.com/repos/python/cpython,110730,backport-de956b2-3.12::3.12,0,merged,skip news::,(cherry picked from commit de956b263b98bb9928ce4377c42ca8271c4f2682) Co-authored-by: Hugo van Kemenade <hugovk@users.noreply.github.com> <!-- gh-issue-number: gh-109408 --> * Issue: gh-109408 <!-- /gh-issue-number --> ::,Miss Islington (bot),31488909,73,1,110,34,2,0,78f19008241795c262e134b88aeb347b50383985::
https://api.github.com/repos/python/cpython,110727,tokenizer-lexer-refactoring-test-peg-generator::main,0,merged,skip news::,"<!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-104169 --> * Issue: gh-104169 <!-- /gh-issue-number --> ::",Lysandros Nikolaou,20306270,38,2,24,14,10,0,2253a498c37c38ddacd0a5f92a760b28bfd2c06e::1c8a9f60858c105c4e3719e1d9e0a6e03cb616de::
https://api.github.com/repos/python/cpython,110726,revert-patchcheck/file-whitespace::main,0,merged,skip news::,"Re: https://github.com/python/cpython/issues/110652, revert PRs https://github.com/python/cpython/pull/109890 and  https://github.com/python/cpython/pull/109891 because we didn't find a portable solution that works on both macOS and Windows. I kept a couple of the string formatting (and whitespace) improvements: ```diff -    return ""{} file{}"".format(count, ""s"" if count != 1 else """") +    s = ""s"" if count != 1 else """" +    return f""{count} file{s}"" ``` ```diff -    cmd = ""git remote show {}"".format(remote_name).split() +    cmd = f""git remote show {remote_name}"".split() ``` (I suggest finding existing pre-commit checks that can do more-or-less the same thing as the patchcheck things. They don't necessarily need to be exactly the same.) <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-109408 --> * Issue: gh-109408 <!-- /gh-issue-number --> ::",Hugo van Kemenade,1324225,628,2,110,34,2,0,1f25035b8800bd063be6adbf598a5b38b97bd195::105b86c819214ca2ce165f37eac55cc45ff1c4be::
https://api.github.com/repos/python/cpython,110725,limited_api_build_core::main,0,merged,,"If the Py_LIMITED_API macro is defined, Py_BUILD_CORE, Py_BUILD_CORE_BUILTIN and Py_BUILD_CORE_MODULE macros are now undefined by Python.h. Only undefine these 3 macros after including ""exports.h"" which uses them to define PyAPI_FUNC(), PyAPI_DATA() and PyMODINIT_FUNC macros. <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-85283 --> * Issue: gh-85283 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--110725.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::",Victor Stinner,194129,1148,2,17,4,3,0,105fce130b02be961c6d54666e79d92b9ae5a751::8ae3173827775df23d0f13b0f3a66bf2348728b1::
https://api.github.com/repos/python/cpython,110724,fix-ind-others::main,0,merged,docs::skip news::,"This PR fixes indentation errors that resulted in spurious `blockquote`s and definition lists in the remaining `Doc` dirs, plus a few more errors that I missed on the first pass. <!-- gh-issue-number: gh-110631 --> * Issue: gh-110631 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--110724.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::The way this rendered was a bit inconsistent, since the versionchanged had an indented list and the deprecation had inline text.  By adding two separate versionchanged, we get rid of the list and the result looks more consistent (3 separate notes with inline text).::",Ezio Melotti,25624924,146,2,57,59,8,1,b4450feb285072be45cfec76b6866604a141a931::9f5d8904a2ca1f5b9a3850c4c4c7b9232fb44589::
https://api.github.com/repos/python/cpython,110723,add-asyncio-event-loop::main,0,merged,,"<!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-94597 --> * Issue: gh-94597 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--110723.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::```suggestion Uses the most efficient available event loop for the given ```::I think this ought to explain that it's an alias for one of the above classes, and that it's the one used by default, and that it's selected the way described above (L1689-90). ""Uses"" doesn't even explain that it's a subclass of AbstractEventLoop. Maybe we should be less specific about how the default is selected, and probably whatever we say about it should be only said once, but it should be made clear that this class is the default, and the default is this class.::```suggestion Added :class:`asyncio.EventLoop` for use with the :func:`asyncio.run` *loop_factory* kwarg to avoid calling the asyncio policy system. ```::maybe something like this? The other classes don't explain that they are subclasses of AbstractEventLoop, should that be explained in ProactorEventLoop and SelectorEventLoop? ```suggestion Uses the most efficient available event loop for the given platform. It is an alias for :class:`SelectorEventLoop` on Unix and :class:`ProactorEventLoop` on Windows. ```::Not quite. I don't like any sentence describing a class object starting with ""Uses"". Classes are nouns, and the description should explain what the class *is*, not what it *does*. Also, the current algorithm for choosing a default is now specified in two places. I think it should be specified only here (and the earlier text should be changed to claim that `EventLoop` is the class used by default). It's also a good idea to clarify that both concrete classes are subclasses of `AbstractEventLoop` (but if you're tired of going around in review you can skip that).::ok I've pushed a change with some doc tweaks::Only some platforms?::yep that's redundant https://github.com/python/cpython/blob/7dd3c2b80064c39f1f0ebbc1f8486897b3148aa5/Lib/asyncio/__init__.py#L42-L47 ```suggestion ```::",Thomas Grainger,413772,307,9,30,5,6,1,d2f7090a591e3c5f0cd8b30c017df0a7d24bebf0::47ea029e440752f8ac89bda8321570e58ea541f1::dc9cfeef46f95451e358c71ccc2c1a2b56724343::2beab6e030b30b6774f60a508538d03c8c8a44a2::6290284460535bdc89685c5648ef19e0f485fc98::ac27e1523424f98543dca532ed02fbbcae2f94dd::ad2c22ca53ddde015b1da1c2fec2c1adee18ccfc::27d96caf249d08ad8e7752e511aeef14b28b5f0f::afaecf2eb9011e7a67bc094da30904e8937aaaa3::
https://api.github.com/repos/python/cpython,110720,revert_notlo::main,0,merged,skip news::,"…mbed (#109581)"" This reverts commit 3e3a7da590e1c3e5f03802e538f26c5204889c82. <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-110313 --> * Issue: gh-110313 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,1,2,2,1,0,43950a6f78ecabf21428e0cf4b4b2d6fe083522b::
https://api.github.com/repos/python/cpython,110712,3.12::3.12,0,closed,awaiting review::skip news::,"We do the following: * add a per-interpreter XID registry (PyInterpreterState.xidregistry) * put heap types there (keep static types in _PyRuntimeState.xidregistry) * clear the registries during interpreter/runtime finalization * avoid duplicate entries in the registry (when _PyCrossInterpreterData_RegisterClass() is called more than once for a type) * use Py_TYPE() instead of PyObject_Type() in _PyCrossInterpreterData_Lookup() The per-interpreter registry helps preserve isolation between interpreters.  This is important when heap types are registered, which is something we haven't been doing yet but I will likely do soon. (cherry-picked from commit 80dc39e1dc2abc809f448cba5d2c5b9c1c631e11) <!-- gh-issue-number: gh-110310 --> * Issue: gh-110310 <!-- /gh-issue-number --> ::",Eric Snow,1152074,290,1,150,57,3,0,71c96b525c9a0af48f85cb3e2d0f757d690cd2bf::
https://api.github.com/repos/python/cpython,110711,limited_stat::main,0,merged,,"The _stat C extension is now built with the limited C API. <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-85283 --> * Issue: gh-85283 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--110711.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::",Victor Stinner,194129,1148,1,9,0,3,0,a0cc4f5d894615582fde59df1206996ee68d991f::
https://api.github.com/repos/python/cpython,110710,backport-13e4600-3.11::3.11,0,merged,,(cherry picked from commit 13e460086b007691f2ca1c5ff677cdb70d19eba8) Co-authored-by: Ned Deily <nad@python.org> <!-- gh-issue-number: gh-99834 --> * Issue: gh-99834 <!-- /gh-issue-number --> ::,Miss Islington (bot),31488909,73,1,4,3,2,0,cdb90c3446fbf97bba4875b8ca76ffe90a5203b7::
https://api.github.com/repos/python/cpython,110708,fix-ind-reference::main,0,merged,docs::skip news::,This PR fixes indentation errors that resulted in spurious `blockquote`s and definition lists in the `Doc/reference` dir. <!-- gh-issue-number: gh-110631 --> * Issue: gh-110631 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--110708.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::,Ezio Melotti,25624924,146,1,79,77,4,1,ad017412002ece1ba69e45364d0974490bd4cf29::
https://api.github.com/repos/python/cpython,110706,gh-110696::main,0,merged,,"<!-- gh-issue-number: gh-110696 --> * Issue: gh-110696 <!-- /gh-issue-number --> ::Remove the two empty lines?::```suggestion | ((','.(starred_expression | ( assignment_expression | expression !':=') !'=')+ ',' kwargs) | kwargs) ',' b='*' { RAISE_SYNTAX_ERROR_KNOWN_LOCATION(b, ""iterable argument unpacking follows keyword argument unpacking"") } ```::",Pablo Galindo Salgado,11718525,847,6,1539,1173,4,1,870333014eed52b88bb1eddf1b7c811902d7d3d8::7b325ba91aeceec29e847437ee7667132c04d968::1c59555e179275a8ecf5e650c49ab5cb9d5c5a01::4f73ca2059468725ad308cd6128b62fb3b8fb515::3fa5d8a418673627ac9438920ee2a1cdf2981beb::51812627576fd2e08ba1bec34dc1ede171951b2f::
https://api.github.com/repos/python/cpython,110702,traceback::main,0,merged,,"<!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-110721 --> * Issue: gh-110721 <!-- /gh-issue-number --> ::```suggestion class TracebackFormatMixin: ```::```suggestion if limit is None or builtin_limit: ```::Why did this need to change?::This is a NOP now.::This is a NOP.::```suggestion // Try first with the stdlib traceback module. ```::There is actually a `print_tb` function in the traceback module. Maybe rename this variable to avoid confusion.::`_PyRuntime.signals.unhandled_keyboard_interrupt = unhandled_keyboard_interrupt;`  is not done if we goto fallback above.::Discussed offline: in debug mode there is a fallback to the C traceback but we still want to see why we are falling back in case there is a problem in the traceback module itself.::After this change I don't think we're ever passing anything other than `0, """"` for `indent` and `margin`.::",Pablo Galindo Salgado,11718525,847,13,146,837,7,0,290280b62766a1f6d133c998a859dc3f65dee8c2::987988d6c6c5718a1825ebc9198b38d607f2f914::2292ab38c79910594d33f24fe4163ceb0fbc4fe9::2ab21688ce50298ff143f74d90fed63b2311d690::e15171777827ec7884a270c8877b832341b75b03::7d57970b6e3a7aff4404983c98b14963bdad4b34::c812a3c59c0f6cbc75dc887cb998539df1dd7d99::d55b7e766175e69ff137fd169f4e04151a9f2047::a65d281802dcb3fa93665c36b3dcb6a903bda808::4d438ecd915069451b54715372ddcf8b035a7988::dab41fb22e2896a58f702ab065387e96f842dc76::a6eb00e2ae8dd0621926cc20ae38e46c4143fc38::d74b83757cf5b7dd43d5ab9e79092937a20c6d28::
https://api.github.com/repos/python/cpython,110700,backport-f27b830-3.11::3.11,0,merged,tests::skip news::,"It does not already work (because it locks only addCleanup(), not doCleanups()), and it is no longer needed since the clean up procedure waits for all test threads to join. (cherry picked from commit f27b83090701b9c215e0d65f1f924fb9330cb649) Co-authored-by: Serhiy Storchaka <storchaka@gmail.com> <!-- gh-issue-number: gh-76106 --> * Issue: gh-76106 <!-- /gh-issue-number --> ::",Miss Islington (bot),31488909,73,1,2,24,1,0,4b7fb727250332f5220516a50212ade52c57cf93::
https://api.github.com/repos/python/cpython,110699,backport-f27b830-3.12::3.12,0,merged,tests::skip news::,"It does not already work (because it locks only addCleanup(), not doCleanups()), and it is no longer needed since the clean up procedure waits for all test threads to join. (cherry picked from commit f27b83090701b9c215e0d65f1f924fb9330cb649) Co-authored-by: Serhiy Storchaka <storchaka@gmail.com> <!-- gh-issue-number: gh-76106 --> * Issue: gh-76106 <!-- /gh-issue-number --> ::",Miss Islington (bot),31488909,73,1,2,24,1,0,09b894e438856e14ed102b96d7539019b935d33b::
https://api.github.com/repos/python/cpython,110691,backport-3dd593e-3.11::3.11,0,merged,docs::skip news::,Fix wrong indentation in the Doc/whatsnew dir. (cherry picked from commit 3dd593e2f2527e199ff7401308131e6888f0cf6c) <!-- gh-issue-number: gh-110631 --> * Issue: gh-110631 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--110691.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::,Ezio Melotti,25624924,146,1,182,182,5,1,a943a4b55e1b06b20df5e56e745833042adb3511::
https://api.github.com/repos/python/cpython,110690,backport-3dd593e-3.12::3.12,0,merged,docs::skip news::,Fix wrong indentation in the Doc/whatsnew dir. (cherry picked from commit 3dd593e2f2527e199ff7401308131e6888f0cf6c) <!-- gh-issue-number: gh-110631 --> * Issue: gh-110631 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--110690.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::,Ezio Melotti,25624924,146,1,191,191,6,1,ab25de2f90d13cdec98bae829d24e09eb32168f7::
https://api.github.com/repos/python/cpython,110689,backport-0d805b9-3.11::3.11,0,merged,,"Co-authored-by: Hugo van Kemenade <hugovk@users.noreply.github.com> Co-authored-by: blurb-it[bot] <43283697+blurb-it[bot]@users.noreply.github.com> (cherry picked from commit 0d805b998ded854840f029b7f0c9a02eb3efa251) Like https://github.com/python/cpython/pull/110681, I removed the `-C` option for dis, as it's new in 3.13. Also include `cmdline.rst` (removing sqlite3 and uuid from the list, they're new in 3.12) and add the extra reST anchors. <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-108826 --> * Issue: gh-108826 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--110689.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::",Hugo van Kemenade,1324225,628,1,97,3,12,0,d1b2b1488b28839459ee642d6aa7ced32a9940ac::
https://api.github.com/repos/python/cpython,110688,issue-110525-test_c_api::main,0,merged,,Now we have proper tests and this method can be deleted. <!-- gh-issue-number: gh-110525 --> * Issue: gh-110525 <!-- /gh-issue-number --> ::,Nikita Sobolev,4660275,4663,2,4,158,4,0,222160738fa1bc3224ab8b56531338d19882ddee::598d566279f227f6754bf74885d6136129d02c68::
https://api.github.com/repos/python/cpython,110685,fix-ind-library::main,0,merged,docs::skip news::,"This PR fixes indentation errors that resulted in spurious `blockquote`s and definition lists in the `Doc/library` dir. <!-- gh-issue-number: gh-110631 --> * Issue: gh-110631 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--110685.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::This and the next few chunks created a weird definition list with bullets.  I removed the bullets to create a regular definition list.  The markup of the `dt`s could be improved by adding some ` ``...`` ` too, to make them stand out more.::How about normalising the `:param:` indents also?::In a separate pull request, sure.::",Ezio Melotti,25624924,146,1,933,926,34,1,6d549224c00c3eaec9f2680ca78d4a7a2500875d::
https://api.github.com/repos/python/cpython,110684,tokenizer-lexer-refactoring::main,0,merged,,"* The lexer, which include the actual lexeme producing logic, goes into the `lexer` directory. * The wrappers, one wrapper per input mode (file, string, utf-8, and readline), go into the `tokenizer` directory and include logic for creating a lexer instance and managing the buffer for different modes. <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-104169 --> * Issue: gh-104169 <!-- /gh-issue-number --> ::@pablogsal This is the only change I did here. Instead of calling `underflow` according to stuff like `tok->str`, every tokenizer type passes in a callable that handles `underflow` in `_PyTokenizer_From*`. ::",Lysandros Nikolaou,20306270,38,12,3185,2988,29,0,99a2b40bd5c8cbe0fe5bf818b326f2ff22aceaab::39257a03f73d1d44d78444dc03589d7417c49244::a4190a9a8678f7a2b9afd60fbd8e5df53a2cd6a6::a949d15bb074e76b3310c335f99288c1001c3a5f::95662b8988f3e242c9bbc2f664c234dd4470638c::ec41b56271cd6159c4781c4279ca1c9bc98e2495::815cb3476817b00b4b87adaba00e1803553fda0b::20be8a0a97ff34474335175e235f4de1f11f776f::128fd0272967907a32299e47e4e5137e20a35cb5::df2c8cb9bfc86761fc06bdcd280cfd6ba8e59832::7e10dbf37eb72b57e107d48cd098e5037ae32144::aeeb5622be2b9d86b881628a9fa27e5a38cb45c5::
https://api.github.com/repos/python/cpython,110683,issue-110682::main,0,merged,stdlib::topic-typing::,"<!-- gh-issue-number: gh-110682 --> * Issue: gh-110682 <!-- /gh-issue-number --> ::```suggestion :func:`runtime-checkable protocols <typing.runtime_checkable>` used to consider ``__match_args__`` a protocol member in ``__instancecheck__`` if it was present on the protocol. Now, this attribute is ignored if it is present. ```::",Nikita Sobolev,4660275,4663,2,39,1,3,0,860255319a75af63090caf9fc629c6ce11733a4d::ac9f92ea1eebb40bfc2f49f9f0f80c629caa800c::
https://api.github.com/repos/python/cpython,110681,backport-0d805b9-3.12::3.12,0,merged,,"Co-authored-by: Hugo van Kemenade <hugovk@users.noreply.github.com> Co-authored-by: blurb-it[bot] <43283697+blurb-it[bot]@users.noreply.github.com> (cherry picked from commit 0d805b998ded854840f029b7f0c9a02eb3efa251) I removed the `-C` option for dis, as it's new in 3.13. Also include `cmdline.rst` and the extra reST anchors. <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-108826 --> * Issue: gh-108826 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--110681.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::Do you think it makes sense to rename the existing labels so that they are consistent across all modules?::It's tempting, but if we did, we should keep all the old ones to make sure no existing anchor links go 404.::",Hugo van Kemenade,1324225,628,1,95,3,12,0,0f0af013f22d8747ebbc511d4a88d6508ddce84e::
https://api.github.com/repos/python/cpython,110680,backport-5c6e854-3.12::3.12,0,merged,skip news::,(cherry picked from commit 5c6e85480ad8365c1b05fdbd678c7867103f7d76) Co-authored-by: Serhiy Storchaka <storchaka@gmail.com> <!-- gh-issue-number: gh-84489 --> * Issue: gh-84489 <!-- /gh-issue-number --> ::,Miss Islington (bot),31488909,73,1,117,0,2,0,9aea195c453ae3b7704af32958285a19c8422749::
https://api.github.com/repos/python/cpython,110678,backport-b5f7777-3.12::3.12,0,merged,topic-pathlib::,Ensure that `PurePath('foo/a').with_name('.')` raises `ValueError` Ensure that `PureWindowsPath('foo/a').with_name('a:b')` does not raise `ValueError`.. (cherry picked from commit b5f7777cb3ecae02d49e0b348968c1ff1ffe21f4) Co-authored-by: Barney Gale <barney.gale@gmail.com> <!-- gh-issue-number: gh-110488 --> * Issue: gh-110488 <!-- /gh-issue-number --> ::,Barney Gale,960340,86,1,15,6,3,0,64e3774f9568d48a5550167b835bed4f96cd4dda::
https://api.github.com/repos/python/cpython,110677,test_pty_writeall::main,0,merged,tests::skip news::,"Add write_all() helper function to test_pty to raise an exception on short write: if os.writes() does not write all bytes. It should not happen for a PTY. Let's check if this assumption is correct. <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-110673 --> * Issue: gh-110673 <!-- /gh-issue-number --> ::Why loop?::Oh. My first implementation (before I created this PR) actually implemented write_all(): retry os.write() until all bytes are written. But I was told that it must not happend, so I changed my PR to raise an exception instead. I will remove the loop until buildbots complete, before merging this change. At least, with this change, if the test hangs again, we will know for sure that no short write occurred.::",Victor Stinner,194129,1148,1,14,5,1,0,b5ebb45fba82814fd672d2107f6596deec46b62d::
https://api.github.com/repos/python/cpython,110675,backport-790ecf6-3.11::3.11,0,merged,skip news::,"Increase timeout from 1 second to 30 seconds, if not longer. The important part is that apply_async() takes longer than TIMEOUT2. (cherry picked from commit 790ecf6302e47b84da5d1c3b14dbdf070bce615b) Co-authored-by: Victor Stinner <vstinner@python.org> <!-- gh-issue-number: gh-110662 --> * Issue: gh-110662 <!-- /gh-issue-number --> ::",Miss Islington (bot),31488909,73,1,1,1,1,0,7752889b2919975393b13bdef1bde39c7ec47f34::
https://api.github.com/repos/python/cpython,110674,backport-790ecf6-3.12::3.12,0,merged,skip news::,"Increase timeout from 1 second to 30 seconds, if not longer. The important part is that apply_async() takes longer than TIMEOUT2. (cherry picked from commit 790ecf6302e47b84da5d1c3b14dbdf070bce615b) Co-authored-by: Victor Stinner <vstinner@python.org> <!-- gh-issue-number: gh-110662 --> * Issue: gh-110662 <!-- /gh-issue-number --> ::",Miss Islington (bot),31488909,73,1,1,1,1,0,5457da9366eb2994c780290e3cf5dc2cd82b1713::
https://api.github.com/repos/python/cpython,110669,backport-1556f42-3.11::3.11,0,merged,skip news::,multiprocessing test_terminate() and test_wait_socket_slow() no longer test the CI performance: no longer check maximum elapsed time. Add CLOCK_RES constant: tolerate a difference of 100 ms. (cherry picked from commit 1556f426da3f2fb5842689999933c8038b65c034) Co-authored-by: Victor Stinner <vstinner@python.org> <!-- gh-issue-number: gh-110666 --> * Issue: gh-110666 <!-- /gh-issue-number --> ::,Miss Islington (bot),31488909,73,1,15,20,1,0,45f679729b5ca93d0b1d15a8cf9130dd3cc88027::
https://api.github.com/repos/python/cpython,110668,backport-1556f42-3.12::3.12,0,merged,skip news::,multiprocessing test_terminate() and test_wait_socket_slow() no longer test the CI performance: no longer check maximum elapsed time. Add CLOCK_RES constant: tolerate a difference of 100 ms. (cherry picked from commit 1556f426da3f2fb5842689999933c8038b65c034) Co-authored-by: Victor Stinner <vstinner@python.org> <!-- gh-issue-number: gh-110666 --> * Issue: gh-110666 <!-- /gh-issue-number --> ::,Miss Islington (bot),31488909,73,1,15,20,1,0,52b8c19e6faa0e072cff244138445466a05c74f2::
https://api.github.com/repos/python/cpython,110667,mp_test_terminate_elapsed::main,0,merged,tests::skip news::,"multiprocessing test_terminate() and test_wait_socket_slow() no longer test the CI performance: no longer check maximum elapsed time. Add CLOCK_RES constant: tolerate a difference of 100 ms. <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-110666 --> * Issue: gh-110666 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,1,15,20,1,0,8a7e4ca56a8edc55fab4ff0a17e2c7a3b8cc9847::
https://api.github.com/repos/python/cpython,110665,backport-f901f56-3.11::3.11,0,merged,skip news::,Skip test_post_fork_child_no_deadlock() if Python is built with ASAN. Add support.HAVE_ASAN_FORK_BUG. (cherry picked from commit f901f56313610389027cb4eae80d1d4b071aef69) Co-authored-by: Victor Stinner <vstinner@python.org> <!-- gh-issue-number: gh-110656 --> * Issue: gh-110656 <!-- /gh-issue-number --> ::,Miss Islington (bot),31488909,73,1,15,10,4,0,e82636bf63797b229a9cee7ff968160a96029832::
https://api.github.com/repos/python/cpython,110664,backport-f901f56-3.12::3.12,0,merged,skip news::,Skip test_post_fork_child_no_deadlock() if Python is built with ASAN. Add support.HAVE_ASAN_FORK_BUG. (cherry picked from commit f901f56313610389027cb4eae80d1d4b071aef69) Co-authored-by: Victor Stinner <vstinner@python.org> <!-- gh-issue-number: gh-110656 --> * Issue: gh-110656 <!-- /gh-issue-number --> ::,Miss Islington (bot),31488909,73,1,15,10,4,0,bd3b74ab8ed197515224bf70777ca3ac96007a0e::
https://api.github.com/repos/python/cpython,110663,mp_test_async_timeout::main,0,merged,tests::skip news::,"Increase timeout from 1 second to 30 seconds, if not longer. The important part is that apply_async() takes longer than TIMEOUT2. <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-110662 --> * Issue: gh-110662 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,1,1,1,1,0,8de390e8fd6498dcbe8ea15a214cdf1a06294fae::
https://api.github.com/repos/python/cpython,110661,test_timerfs::main,0,merged,tests::skip news::,"<!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-108277 --> * Issue: gh-108277 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,1,2,2,1,0,5f44f4f3979d80047a6003ffe8c3b75ed9182bd1::
https://api.github.com/repos/python/cpython,110659,backport-e07c37c-3.11::3.11,0,merged,tests::,* cycle_handlers() now waits until at least one signal is received. * num_received_signals can be equal to num_sent_signals. (cherry picked from commit e07c37cd5212c9d13749b4d02a1d68e1efcba6cf) Co-authored-by: Victor Stinner <vstinner@python.org> <!-- gh-issue-number: gh-110647 --> * Issue: gh-110647 <!-- /gh-issue-number --> ::,Miss Islington (bot),31488909,73,1,4,2,2,0,0cec86e612facc57052eb95c15e81eba8edbc61e::
https://api.github.com/repos/python/cpython,110658,backport-e07c37c-3.12::3.12,0,merged,tests::,* cycle_handlers() now waits until at least one signal is received. * num_received_signals can be equal to num_sent_signals. (cherry picked from commit e07c37cd5212c9d13749b4d02a1d68e1efcba6cf) Co-authored-by: Victor Stinner <vstinner@python.org> <!-- gh-issue-number: gh-110647 --> * Issue: gh-110647 <!-- /gh-issue-number --> ::,Miss Islington (bot),31488909,73,1,4,2,2,0,71cc38152000c2fc37853faf1c567ad5380e5730::
https://api.github.com/repos/python/cpython,110657,test_logging_skip_fork::main,0,merged,tests::skip news::,"Skip test_post_fork_child_no_deadlock() if Python is built with ASAN. Add support.HAVE_ASAN_FORK_BUG. <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-110656 --> * Issue: gh-110656 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,1,15,10,4,0,054ec0ab25cfc10ed1470ca33040a23df1d72f80::
https://api.github.com/repos/python/cpython,110653,no-pre-commit-for-you::main,0,closed,awaiting review::skip news::needs backport to 3.12::,"<!-- gh-issue-number: gh-110652 --> * Issue: gh-110652 <!-- /gh-issue-number --> ::Also works without the `./`, any preference? ```suggestion entry: 'Tools/patchcheck/reindent.py --nobackup --newline LF' ```::```suggestion entry: ""Tools/patchcheck/untabify.py"" ```::It's cleaner without the `./`::",Erlend E. Aasland,13780613,72,2,4,4,1,0,6509e94959cdd2c9eb312ef8990bf877c8cac6a9::9501fab02da6da722b3cc4df3c8a55b89891b766::
https://api.github.com/repos/python/cpython,110651,gh-110488-with-name-fixes::main,0,merged,topic-pathlib::,Ensure that `PurePath('foo/a').with_name('.')` raises `ValueError` Ensure that `PureWindowsPath('foo/a').with_name('a:b')` **does not** raise `ValueError`. <!-- gh-issue-number: gh-110488 --> * Issue: gh-110488 <!-- /gh-issue-number --> ::,Barney Gale,960340,86,2,15,6,3,1,a28f9670888cad86f9a504d719a47b8fd19faf86::1bec1c4db3d3c1f085cab6e2e16851472f199446::
https://api.github.com/repos/python/cpython,110650,test_signal::main,0,merged,tests::,"* cycle_handlers() now waits until at least one signal is received. * num_received_signals can be equal to num_sent_signals. <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-110647 --> * Issue: gh-110647 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,1,4,2,2,0,ee14a38e924c723319b8ef6fed1cde23027d476a::
https://api.github.com/repos/python/cpython,110646,backport-c2d542b-3.11::3.11,0,merged,skip news::,* gh-108303: Move all certificates to `Lib/test/certdata/` (GH-109489) (cherry picked from commit e57ecf6bbc59f999d27b125ea51b042c24a07bd9) Co-authored-by: Nikita Sobolev <mail@sobolevn.me> Python 3.12 backport: update also `test_nntplib`. (cherry picked from commit c2d542b42cd109d81c0308f9c4437c38ac74d2e0) Co-authored-by: Miss Islington (bot) <31488909+miss-islington@users.noreply.github.com> Co-authored-by: Nikita Sobolev <mail@sobolevn.me> Co-authored-by: T. Wouters <thomas@python.org>::,Miss Islington (bot),31488909,73,1,32,29,42,0,bbd4bd9807be58be5aec648180132fe19499d06b::
https://api.github.com/repos/python/cpython,110642,tty-cfmakeraw-cfmakecbreak::main,0,merged,,* tty.setraw() and tty.setcbreak() previously returned partially modified list of the original tty attributes. Now they return the correct list of the original tty attributes * tty.cfmakeraw() and tty.cfmakecbreak() now make a copy of the list of special characters before modifying it. <!-- gh-issue-number: gh-110392 --> * Issue: gh-110392 <!-- /gh-issue-number --> ::,Serhiy Storchaka,3659035,401,1,12,2,3,0,2a4f260257b4ee262f48ed488c98a10ca00d11c2::
https://api.github.com/repos/python/cpython,110641,backport-08ec4a1-3.11::3.11,0,closed,awaiting core review::skip news::,(cherry picked from commit 08ec4a1dbf66383303de9ce5cb55b2b437ef92c0) <!-- gh-issue-number: gh-109408 --> * Issue: gh-109408 <!-- /gh-issue-number --> ::,Adam Turner,9087854,89,3,16,19,2,0,26ccc48760cf174093f189d26c570495bf78a702::0490c441e974791b78dc7a94f5dcab3b6db0d73c::8a442665a934a81ee7cebe14911471853679ebd2::
https://api.github.com/repos/python/cpython,110640,backport-f5edb56-3.11::3.11,0,closed,skip news::,(cherry picked from commit f5edb56328b46f262b74a53343b8098a3934f761) <!-- gh-issue-number: gh-109408 --> * Issue: gh-109408 <!-- /gh-issue-number --> ::,Adam Turner,9087854,89,3,42,103,3,0,fd8ddd449d415cecba27d27fb2875db3e4395511::afd9d760d45e3814eca27dc9dc43127fd9d048db::707ffaa5b16a8b2e8c5b37bcccb114a6522817fb::
https://api.github.com/repos/python/cpython,110639,gh-109595-process::main,0,closed,awaiting review::,"<!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-110649 --> * Issue: gh-110649 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--110639.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end --> ::```suggestion If *n* is ``default``, nothing is overridden. If *n* is ``process``, ```::That's wrong. It's the opposite: os.cpu_count becomes an alias to os.process_cpu_count. No? I don't see why you mention multiprocessing.cpu_count(). -X cpu_count=process has no effect on multiprocessing.cpu_count(), since multiprocessing.cpu_count() calls os.process_cpu_count(). No?::Ah got it, I missed::",Donghee Na,5110323,401,5,28,4,7,0,920fb835f19f30d6b27484decf2c8aca44d7d770::4832a782b0cc7dbf43a287a384fb524ef9fe1e20::a954a560a54d9a0799d799f06a201e6196ec9aa6::fe829b85e65b7d69c6fd82fd65d7acd73584f6bc::0967c522ae93e8fceb995485613f4f6ad1b8ae5d::
https://api.github.com/repos/python/cpython,110638,backport-66a9b10-3.11::3.11,0,merged,skip news::,Set three-space indents in EditorConfig (cherry picked from commit 66a9b1082049855889854bfde617059499c26dd2) Co-authored-by: Hugo van Kemenade <hugovk@users.noreply.github.com> <!-- gh-issue-number: gh-110631 --> * Issue: gh-110631 <!-- /gh-issue-number --> ::,Miss Islington (bot),31488909,73,1,3,0,1,0,2e8b456234fe622875c021d7797234fc211399f5::
https://api.github.com/repos/python/cpython,110637,backport-66a9b10-3.12::3.12,0,merged,skip news::,Set three-space indents in EditorConfig (cherry picked from commit 66a9b1082049855889854bfde617059499c26dd2) Co-authored-by: Hugo van Kemenade <hugovk@users.noreply.github.com> <!-- gh-issue-number: gh-110631 --> * Issue: gh-110631 <!-- /gh-issue-number --> ::,Miss Islington (bot),31488909,73,1,3,0,1,0,40de936d32a159153501cc1490db43bbe2bb585a::
https://api.github.com/repos/python/cpython,110636,backport-f5edb56-3.12::3.12,0,merged,skip news::,(cherry picked from commit f5edb56328b46f262b74a53343b8098a3934f761) <!-- gh-issue-number: gh-109408 --> * Issue: gh-109408 <!-- /gh-issue-number --> ::,Adam Turner,9087854,89,1,23,90,3,0,ae0dd836e1ff0e80e5c5274b9cb2e925dea9e368::
https://api.github.com/repos/python/cpython,110635,editorconfig-rst::main,0,merged,skip news::,"<!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> https://devguide.python.org/documentation/style-guide/#use-of-whitespace says: > All reST files use an indentation of 3 spaces EditorConfig is read by many editors, and there are plugins for others, so helps avoid incorrect tabs in reST files. https://editorconfig.org/ <!-- gh-issue-number: gh-110631 --> * Issue: gh-110631 <!-- /gh-issue-number --> ::",Hugo van Kemenade,1324225,628,1,3,0,1,0,82f4745f6ba4f4d461811c076e1edbceb364caf6::
https://api.github.com/repos/python/cpython,110634,backport-7f702b2-3.11::3.11,0,merged,tests::,"(cherry picked from commit 7f702b2) <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-110388 --> * Issue: gh-110388 <!-- /gh-issue-number --> ::",Serhiy Storchaka,3659035,401,1,61,0,2,0,fc6101b272b95f8da7a6cec2a435bf978605ee7a::
https://api.github.com/repos/python/cpython,110633,backport-08ec4a1-3.12::3.12,0,merged,skip news::,(cherry picked from commit 08ec4a1dbf66383303de9ce5cb55b2b437ef92c0) Co-authored-by: Adam Turner <9087854+AA-Turner@users.noreply.github.com> Co-authored-by: Hugo van Kemenade <hugovk@users.noreply.github.com> <!-- gh-issue-number: gh-109408 --> * Issue: gh-109408 <!-- /gh-issue-number --> ::,Miss Islington (bot),31488909,73,1,16,25,2,0,cbf7a0b90a7862947782c56ff965f5695a6e8d9e::
https://api.github.com/repos/python/cpython,110632,fix-ind-whatsnew::main,0,merged,docs::skip news::,This PR fixes indentation errors that resulted in spurious `blockquote`s and definition lists in the `Doc/whatsnew` dir. <!-- gh-issue-number: gh-110631 --> * Issue: gh-110631 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--110632.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::,Ezio Melotti,25624924,146,1,222,222,7,1,b2a1d68deba7de25c45f46115902d99534abe200::
https://api.github.com/repos/python/cpython,110630,issue-110525-internal::main,0,merged,skip news::needs backport to 3.12::,"<!-- gh-issue-number: gh-110525 --> * Issue: gh-110525 <!-- /gh-issue-number --> ::You can use `Py_BuildValue(""nOn"", count, item, (Py_ssize_t)h)`. It will save 11 lines of code.::On other hand, why return `count`?::I would write test similarly to the test for `PyDict_Next()` -- implement a wrapper for single step and call it repeatedly in Python code.::```suggestion Py_hash_t hash = (Py_hash_t)UNINITIALIZED_SIZE; ```::What if it returns 2 or -2? ```suggestion if (rc != 0 && rc != -1) { ```::```suggestion if (rc == -1) { ``` Otherwise returning -1 without setting error will pass unnoticing.::```suggestion assert(item == UNINITIALIZED_PTR); assert(hash == (Py_hash_t)UNINITIALIZED_SIZ); ```::The key, its hash, and pos are the same. It is easy to make mistake in test and compare wrong value. Could you use strings? As a bonus, you will get different order and hashes on every run.::It is meaningless, because it is created by the wrapper, not the tested C API.object.::Also store items, and compare the accumulated result with `list(instance)`. It will test that 1. All items are yielded. 2. Every item was yielded only once. 3. The order of iteration is the same as in normal iteration (and not reversed order or insertion order, for example).::Sorry, I don't understand this one. Right now it is defined as: https://github.com/python/cpython/blob/66a9b1082049855889854bfde617059499c26dd2/Objects/setobject.c#L2332-L2346 It cannot return anything except `[-1, 0, 1]`. Do you mean that it can return something other than `[-1, 0, 1]` in the future? I think that our test case must catch this change and be adapted if needed. This function is not documented currently.::The purpose of the test is to verify our assumptions (that it cannot return anything except [-1, 0, 1]). Otherwise there would not be need of tests. In future a new return can be added in the code, or refactoring can lead to returning non-initialized variable in rare case. The wrapper will successfully return None.::Got it, I used an assertion, which is more readable in my opinion 👍 ::",Nikita Sobolev,4660275,4663,4,117,3,6,1,f82ca467553e84647aa3a64985528248af6ea67c::338d340eaac7b42f377b184474e74bae2a42b527::21ca91f6fea7d6edbe8ff9765c881d146b8741a1::e4ff92bd88d344fc5b2a3f3390fc69b4ba684a46::
https://api.github.com/repos/python/cpython,110629,test_capi-test_long::main,0,merged,tests::skip news::,"<!-- gh-issue-number: gh-110628 --> * Issue: gh-110628 <!-- /gh-issue-number --> ::```suggestion pylong_as_ssize_t(PyObject *module, PyObject *arg) ``` It is really hard to tell apart `_assize_t` and `_asssize_t` when reading::```suggestion pylong_as_size_t(PyObject *module, PyObject *arg) ```::What does `XXX` imply? Is it a FIXME or TODO comment? If it has no special meaning, I think it should be removed. If it has a special meaning, it should be expressed clearly.::Maybe tests values around 0, like -0.0, +0.0, and `math.nextafter(0.0, 1.0)` (subnormal positive minimum)?::NULL can be greater than 0? ```suggestion self.assertEqual(y, 0) ```::These docstrings do not add any information; they just repeat the test name with a slightly different text format. They also clutter the test output when running tests in verbose mode. Please do not pollute tests like this.::not good :-( can it be fixed?::Wait, is it an object? It's just a raw pointer, no? Maybe return PyLong_FromVoidPtr(value)?::Actually, some of them add information. For example  `test_long_aslong` tests both`PyLong_AsLong()` and `PyLong_FromLong()`, unlike most of other tests. But I understand your pain. The right solution perhaps to add options to hide docstrings, or change the default report format, or output docstring only in `-vv` mode. But this is a different issue. I'll turn docstrings into comments.::I do not think that they are interesting, but I'll add zeroes.::Hmm. One part of me remember, that bitpattern of NULL is not always zeroes. But on other hand, a lot of code in CPython depends on this (starting from initializing pointers with `memset()`).::It means that that we cannot add `assert(end != UNINITIALIZED_PTR)` here. `end` is not set if `base` is incorrect, and maybe in case of memory allocation error. I am not sure what to do with this. It is not correct to set `end = str`, because the first character can be valid. Maybe set it to NULL? This is a different issue, and I am going to think about this later. XXX means ""Look! Something not good here.""::Not in this issue. And it is not clear what fix may look like.::Yes, it is a raw pointer. But Python does not have pointers. So these tests only test pointers to Python objects (and NULL). With `PyLong_FromVoidPtr() and `PyLong_AsVoidPtr()` we can round trip object -> int -> object.::This test is now suspicious. What if int() executes exactly the same code path, PyLong_FromDouble()? I would prefer to hardcode the expected result: ``` for value, expected in ( (5.0, 5), ... (float_max, int(float_max)), ): ... ```::Right, it is the purpose. `PyLong_FromDouble()` works exactly as `int()` with float argument. How does `int()` with float argument work is tested in other tests.::",Serhiy Storchaka,3659035,401,5,600,17,3,0,1420b38bab0347a3fce97c790377eae47db80bec::ad08600dfbb3f24d3e30bc7a1a9a56469b7c72e4::79766e374b3770de8cc32d8fcc5f6669591160b0::0a0c22b52cac4ddfbde9e4612d1650c7537d59e5::c908ae794b23fd45bbfdddd5e7781d8ec8998ddb::
https://api.github.com/repos/python/cpython,110627,backport-e24f9ae-3.11::3.11,0,merged,skip issue::skip news::,(cherry picked from commit e24f9ae7035cfb4c11c4a5c2820121fc22463f8b) Co-authored-by: Adam Turner <9087854+AA-Turner@users.noreply.github.com>::,Miss Islington (bot),31488909,73,1,1,0,1,0,1f6965650521636e44877e7d3b7837f474daa2bd::
https://api.github.com/repos/python/cpython,110626,backport-e24f9ae-3.12::3.12,0,merged,skip issue::skip news::,(cherry picked from commit e24f9ae7035cfb4c11c4a5c2820121fc22463f8b) Co-authored-by: Adam Turner <9087854+AA-Turner@users.noreply.github.com>::,Miss Islington (bot),31488909,73,1,1,0,1,0,de8d96ad2693e94ff50705fcb73f3fb54144bf45::
https://api.github.com/repos/python/cpython,110624,backport-756062b-3.11::3.11,0,merged,skip news::,(cherry picked from commit 756062b296df6242ba324e4cdc8f3e38bfc83617) Co-authored-by: Nikita Sobolev <mail@sobolevn.me> <!-- gh-issue-number: gh-101100 --> * Issue: gh-101100 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--110624.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::,Miss Islington (bot),31488909,73,1,52,26,2,0,0a3d2a83190cf89f1635d671796f43160b31e6d2::
https://api.github.com/repos/python/cpython,110623,backport-756062b-3.12::3.12,0,merged,skip news::,(cherry picked from commit 756062b296df6242ba324e4cdc8f3e38bfc83617) Co-authored-by: Nikita Sobolev <mail@sobolevn.me> <!-- gh-issue-number: gh-101100 --> * Issue: gh-101100 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--110623.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::,Miss Islington (bot),31488909,73,1,52,26,2,0,4f98353e78582a2c82b4d9ddfddd2f171d6789e2::
https://api.github.com/repos/python/cpython,110622,backport-7f702b2-3.11::3.11,0,closed,tests::awaiting review::,(cherry picked from commit 7f702b26dbbf24ab5ef2be5444ae652300733b5b) Co-authored-by: Serhiy Storchaka <storchaka@gmail.com> <!-- gh-issue-number: gh-110388 --> * Issue: gh-110388 <!-- /gh-issue-number --> ::,Miss Islington (bot),31488909,73,1,81,0,2,0,6e8135551e78fb6b86d24249b8aa4310119f49df::
https://api.github.com/repos/python/cpython,110621,backport-7f702b2-3.12::3.12,0,merged,tests::,(cherry picked from commit 7f702b26dbbf24ab5ef2be5444ae652300733b5b) Co-authored-by: Serhiy Storchaka <storchaka@gmail.com> <!-- gh-issue-number: gh-110388 --> * Issue: gh-110388 <!-- /gh-issue-number --> ::,Miss Islington (bot),31488909,73,1,81,0,2,0,e575fbe87576f9250e2be54144cc109e67a78c29::
https://api.github.com/repos/python/cpython,110620,backport-92a9e98-3.11::3.11,0,merged,tests::,(cherry picked from commit 92a9e980245156bf75ede0869f8ba9512e04d2eb) Co-authored-by: Serhiy Storchaka <storchaka@gmail.com> <!-- gh-issue-number: gh-81002 --> * Issue: gh-81002 <!-- /gh-issue-number --> ::,Miss Islington (bot),31488909,73,1,221,0,2,0,2b2519e3ae5590c1547602332c31374edee2ddca::
https://api.github.com/repos/python/cpython,110619,backport-92a9e98-3.12::3.12,0,merged,tests::,(cherry picked from commit 92a9e980245156bf75ede0869f8ba9512e04d2eb) Co-authored-by: Serhiy Storchaka <storchaka@gmail.com> <!-- gh-issue-number: gh-81002 --> * Issue: gh-81002 <!-- /gh-issue-number --> ::,Miss Islington (bot),31488909,73,1,221,0,2,0,4f229e71ef3eaa319370e891e30f95534c6f6ae9::
https://api.github.com/repos/python/cpython,110617,patchcheck/serial-is-the-new-parallel::main,0,merged,docs::skip issue::skip news::,"Sphinx-Lint internally parallelises, and pre-commit also parallelises, leading to seeming resource contention. I observe a speed-up of ~5 seconds (from ~12 to ~7) when we let sphinx-lint control the parallelism. ```text 5       12.582 pre-commit run sphinx-lint --all-files 6       11.193 pre-commit run sphinx-lint --all-files 7       13.530 pre-commit run sphinx-lint --all-files 8        0.013 history 9        7.422 pre-commit run sphinx-lint --all-files 10        7.067 pre-commit run sphinx-lint --all-files 11        7.344 pre-commit run sphinx-lint --all-files ```::",Adam Turner,9087854,89,1,1,0,1,0,28cd8af6c76a0d04b353cbd24814b340cb650948::
https://api.github.com/repos/python/cpython,110614,backport-344d3a2-3.11::3.11,0,merged,,TypeError would be overwritten by OverflowError if 'code' param contained non-ints. (cherry picked from commit 344d3a222a7864f8157773749bdd77d1c9dfc1e6) Co-authored-by: Nikita Sobolev <mail@sobolevn.me> <!-- gh-issue-number: gh-110590 --> * Issue: gh-110590 <!-- /gh-issue-number --> ::,Miss Islington (bot),31488909,73,1,9,0,3,0,530247b7734659e6f97ba8235950e2084b76074c::
https://api.github.com/repos/python/cpython,110613,backport-344d3a2-3.12::3.12,0,merged,,TypeError would be overwritten by OverflowError if 'code' param contained non-ints. (cherry picked from commit 344d3a222a7864f8157773749bdd77d1c9dfc1e6) Co-authored-by: Nikita Sobolev <mail@sobolevn.me> <!-- gh-issue-number: gh-110590 --> * Issue: gh-110590 <!-- /gh-issue-number --> ::,Miss Islington (bot),31488909,73,1,9,0,3,0,7ab8b3750b916594d0280f569739dc306e869eb6::
https://api.github.com/repos/python/cpython,110611,backport-5aa62a8-3.11::3.11,0,merged,tests::skip news::,"It now fails if the original bug is not fixed, and no longer produce ResourceWarning with fixed code. (cherry picked from commit 5aa62a8de15212577a13966710b3aede46e93824) Co-authored-by: Serhiy Storchaka <storchaka@gmail.com> <!-- gh-issue-number: gh-110378 --> * Issue: gh-110378 <!-- /gh-issue-number --> ::",Miss Islington (bot),31488909,73,1,5,9,1,0,dd2e259357f10842e7dc47c3b7672f1d81900f9c::
https://api.github.com/repos/python/cpython,110610,backport-5aa62a8-3.12::3.12,0,merged,tests::skip news::,"It now fails if the original bug is not fixed, and no longer produce ResourceWarning with fixed code. (cherry picked from commit 5aa62a8de15212577a13966710b3aede46e93824) Co-authored-by: Serhiy Storchaka <storchaka@gmail.com> <!-- gh-issue-number: gh-110378 --> * Issue: gh-110378 <!-- /gh-issue-number --> ::",Miss Islington (bot),31488909,73,1,5,9,1,0,d304bda9db3dd2d369a9b2a71ae6f284fe0e4af3::
https://api.github.com/repos/python/cpython,110609,backport-fc811c8-3.12::3.12,0,merged,skip news::,(cherry picked from commit fc811c8d205db9c19f42890e2c4193a0c2f87965) Co-authored-by: Alex Waygood <Alex.Waygood@Gmail.com> <!-- gh-issue-number: gh-110558 --> * Issue: gh-110558 <!-- /gh-issue-number --> ::,Miss Islington (bot),31488909,73,1,20,5,4,0,50c3fd6d8e131572a9e4769f92eecc86b736c0ae::
https://api.github.com/repos/python/cpython,110608,gh-107838-dataclasses-improve-error-message::main,0,closed,awaiting review::,<!-- gh-issue-number: gh-107838 --> * Issue: gh-107838 <!-- /gh-issue-number --> ::,Eric V. Smith,489791,174,3,0,0,0,0,f0b27673705d1244b6eeaeae53917914fe55e0dd::d41dd947351485b07bc91994263ebc586776a1af::70f9d4f258d0125ae3ec925210173281667410e2::
https://api.github.com/repos/python/cpython,110607,restore-shareable-channels::main,0,merged,skip news::,"This restores their shareability, which was disabled by gh-110318 due to ref leaks. <!-- gh-issue-number: gh-76785 --> * Issue: gh-76785 <!-- /gh-issue-number --> ::",Eric Snow,1152074,290,1,5,2,3,0,cf4734d4466b5287d3562f3611a1cf98b7429091::
https://api.github.com/repos/python/cpython,110606,channel-info::main,0,merged,skip news::,<!-- gh-issue-number: gh-76785 --> * Issue: gh-76785 <!-- /gh-issue-number --> ::,Eric Snow,1152074,290,6,302,2,3,0,3031b6c8707695af784fd5e075862622d430e294::7932bf8aff85471cc9426c619a2fffc3c29d4c66::06de92bfcad17288685dc645590f370f7d821b53::a70509a9250ed295792987551268f593e6795bc0::09b7812df2bd38067511f2204050e574025fe4b2::c3555304e11d9b1ecff93648c58fc3df6f9ec15f::
https://api.github.com/repos/python/cpython,110605,gh-109693-gil::main,0,merged,skip news::,"<!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-109693 --> * Issue: gh-109693 <!-- /gh-issue-number --> ::@vstinner @colesbury https://github.com/python/cpython/blob/982f1b7d6dc2f13b9607ce092e36e32972e3702c/Python/ceval_gil.c#L179 https://github.com/python/cpython/blob/982f1b7d6dc2f13b9607ce092e36e32972e3702c/Python/ceval_gil.c#L194 IIUC, To update `locked` field we need to introduce `_Py_atomic_load/store_int_release/acquire` Do you have better ideas?::It sounds like a good idea, for another API EDIT: Oops, I wrote PEP not API, sorry about that :-D Need more coffee.::",Donghee Na,5110323,401,1,9,9,2,0,fa41125b51c01ed156be2e4e926d534ca87f1907::
https://api.github.com/repos/python/cpython,110604,gh-109693-interp::main,0,merged,skip news::,"<!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-109693 --> * Issue: gh-109693 <!-- /gh-issue-number --> ::",Donghee Na,5110323,401,1,3,4,1,0,5b1c6ec38713b053da9eeba3cdb660b36f7f8055::
https://api.github.com/repos/python/cpython,110603,ruff-pyupgrade-argclinic::main,0,merged,skip news::,"These are more opinionated, lint-style checks than the existing `pyflakes` rules that we currently have enabled on Argument Clinic, following #110559. The full list of pyupgrade rules is at https://docs.astral.sh/ruff/rules/#pyupgrade-up. Thoughts? Is this a useful addition? <!-- gh-issue-number: gh-110558 --> * Issue: gh-110558 <!-- /gh-issue-number --> ::",Alex Waygood,66076021,141,1,20,5,4,0,f943a83f30c395488cf192be98c0f9f982639bda::
https://api.github.com/repos/python/cpython,110602,fix-ci-fuzz-again::main,0,merged,skip issue::skip news::,"Refs https://github.com/python/cpython/pull/110601, https://github.com/python/cpython/pull/110576, https://github.com/python/cpython/pull/107653. My typos are killing me :)::",Nikita Sobolev,4660275,4663,1,1,1,1,0,65027ceceef6088e4b87e1c32350f0d93495a9a1::
https://api.github.com/repos/python/cpython,110601,do-not-run-cifuzz::main,0,closed,DO-NOT-MERGE::,::,Nikita Sobolev,4660275,4663,3,8,4,4,0,da3003c6ce809268fca7ab1e1162228d172260aa::8bd841a32c0e9abb5ea04a2c2dbc08d39c85dfd3::871ea634becda8bcf1eb83ea474d2a7b8f3c778e::
https://api.github.com/repos/python/cpython,110600,backport-d5ec77f-3.11::3.11,0,merged,skip issue::skip news::,(cherry picked from commit d5ec77fafd352b4eb290b86d70e4d0b4673459eb) Co-authored-by: Alex Waygood <Alex.Waygood@Gmail.com>::,Miss Islington (bot),31488909,73,1,5,0,1,0,fa9cda6685137c00ebf7f4e3043aab7fef63fc43::
https://api.github.com/repos/python/cpython,110599,backport-d5ec77f-3.12::3.12,0,merged,skip issue::skip news::,(cherry picked from commit d5ec77fafd352b4eb290b86d70e4d0b4673459eb) Co-authored-by: Alex Waygood <Alex.Waygood@Gmail.com>::,Miss Islington (bot),31488909,73,1,5,0,1,0,3bea3a1b9306b9a28709718846ba3e874a37b95a::
https://api.github.com/repos/python/cpython,110598,backport-110559-312::3.12,0,merged,skip news::,(cherry-picked from commit 7b2764e798e400b8f5fcc199739405e6fbd05c20 ) <!-- gh-issue-number: gh-110558 --> * Issue: gh-110558 <!-- /gh-issue-number --> ::,Alex Waygood,66076021,141,1,21,3,5,0,da73e4c10a3c0ea487093bb554d9b43c4cf49fe9::
https://api.github.com/repos/python/cpython,110597,remove-old-code::main,0,merged,skip issue::skip news::interpreter-core::,::,Brandt Bucher,40968415,377,1,0,3,1,1,87c7ce56bdc2649bcb4c55a255d143d873f37edd::
https://api.github.com/repos/python/cpython,110596,test_capi-Py_BuildValue::main,0,merged,skip news::,"<!-- gh-issue-number: gh-84489 --> * Issue: gh-84489 <!-- /gh-issue-number --> ::These docstrings pollute the test output when run in verbose mode. Please don't add these. Regular comments do not pollute the test output.::`UINT_MAX`? ```suggestion self.assertEqual(buildvalue('I', UINT_MAX), UINT_MAX) ```::",Serhiy Storchaka,3659035,401,5,117,0,2,0,2f0baa6b15c8d8faab6018b1800c594aa37b07d1::e7f7e701a83a67c84f483d06f7cab4f978d3efc7::32f5536f536ad387acb42cfda4d40c02fc3f3296::7da5e9afd7e2eaf4948608665de14118b9269e51::507be2a1df594e5ad6e94910a6e4018d69534866::
https://api.github.com/repos/python/cpython,110595,backport-7426ed0-3.11::3.11,0,merged,skip news::,(cherry picked from commit 7426ed0347d66f7ef61ea7ae6c3163258b8fb128) Co-authored-by: Hugo van Kemenade <hugovk@users.noreply.github.com> Co-authored-by: Alex Waygood <Alex.Waygood@Gmail.com> Co-authored-by: Adam Turner <9087854+AA-Turner@users.noreply.github.com> <!-- gh-issue-number: gh-109408 --> * Issue: gh-109408 <!-- /gh-issue-number --> ::,Miss Islington (bot),31488909,73,1,13,33,2,0,55d67b3d90425793712301346abdbd4f794cccf6::
https://api.github.com/repos/python/cpython,110594,backport-7426ed0-3.12::3.12,0,merged,skip news::,(cherry picked from commit 7426ed0347d66f7ef61ea7ae6c3163258b8fb128) Co-authored-by: Hugo van Kemenade <hugovk@users.noreply.github.com> Co-authored-by: Alex Waygood <Alex.Waygood@Gmail.com> Co-authored-by: Adam Turner <9087854+AA-Turner@users.noreply.github.com> <!-- gh-issue-number: gh-109408 --> * Issue: gh-109408 <!-- /gh-issue-number --> ::,Miss Islington (bot),31488909,73,1,13,33,2,0,0175804b417b8a436cad1fc9940c01f57f179cdc::
https://api.github.com/repos/python/cpython,110593,uops-refleak::main,0,merged,type-bug::interpreter-core::,"This modifies `_PyFunction_LookupByVersion` to return a borrowed reference, which is what the caller assumes (and most internal ""lookup"" functions do, in general). <!-- gh-issue-number: gh-104584 --> * Issue: gh-104584 <!-- /gh-issue-number --> ::",Brandt Bucher,40968415,377,3,2,1,2,1,da57eed349d43d00e0fdb49a5c953c8d4b69f28d::f3a6962e7f6c63f13e566178a00a72ca2632017d::1bbea3b474625f29c1492ae4d4eb4a9d7fada894::
https://api.github.com/repos/python/cpython,110591,issue-110590::main,0,merged,,"`PyLong_AsUnsignedLong` strikes back 😉 <!-- gh-issue-number: gh-110590 --> * Issue: gh-110590 <!-- /gh-issue-number --> ::Could you please add proper Sphinx markup here?::IMO, we should just bail here. That means we can remove the `PyErr_Occurred` check in 1523. What do you think?::I would prefer to keep it as-is, the main reason is that the change is minimal now. I don't want to touch other stuff :)::I'm fine with that :)::```suggestion Fix a bug in :meth:`!_sre.compile` where :exc:`TypeError` would be overwritten by :exc:`OverflowError` when the *code* argument was a list of non-ints. ```::",Nikita Sobolev,4660275,4663,5,9,0,3,0,c829171625ba58e775f3d155da86382bbd36016d::18cd5edc3b1fa8d82717c6d3d6f2d6c74f83630a::dc22745bc89c5fc8075cb212d120a39cba509da1::858fa3f58d57270161af5155d062e2ff030e5734::cfb142e211d1b9fc0cd9c872788b3612efd94ad3::
https://api.github.com/repos/python/cpython,110589,backport-96fed66-3.11::3.11,0,merged,,contextmanager and asynccontextmanager context managers now close an invalid underlying generator object that yields more then one value. (cherry picked from commit 96fed66a65097eac2dc528ce29c9ba676bb07689) Co-authored-by: Serhiy Storchaka <storchaka@gmail.com> <!-- gh-issue-number: gh-110378 --> * Issue: gh-110378 <!-- /gh-issue-number --> ::,Miss Islington (bot),31488909,73,2,37,7,3,0,ad7dcbb48c32bdebfcb02c1e940cb7532ee6a6d2::1a5db70ddcbe62729ae992fe58a9050d3a89bdbd::
https://api.github.com/repos/python/cpython,110588,backport-96fed66-3.12::3.12,0,merged,,contextmanager and asynccontextmanager context managers now close an invalid underlying generator object that yields more then one value. (cherry picked from commit 96fed66a65097eac2dc528ce29c9ba676bb07689) Co-authored-by: Serhiy Storchaka <storchaka@gmail.com> <!-- gh-issue-number: gh-110378 --> * Issue: gh-110378 <!-- /gh-issue-number --> ::,Miss Islington (bot),31488909,73,1,43,7,4,0,f967a633732ddc765784bd62b66562fa580c3344::
https://api.github.com/repos/python/cpython,110587,meta-hooks::main,0,merged,skip issue::skip news::,This adds some 'meta hooks' to our pre-commit config. These hooks check the validity of our pre-commit config file itself. See https://pre-commit.com/#meta-hooks for more details.::,Alex Waygood,66076021,141,1,5,0,1,0,4eaa65f9be9cfa53bc1ac271e3e489889961a3e4::
https://api.github.com/repos/python/cpython,110585,backport-bdbe43c-3.12::3.12,0,merged,type-bug::skip issue::skip news::,Remove unused `SPHINXLINT` var. (cherry picked from commit bdbe43c7d0ad5ebda0232a4ab39689ea79a9733a) Co-authored-by: Ezio Melotti <ezio.melotti@gmail.com> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--110585.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::,Miss Islington (bot),31488909,73,1,0,1,1,0,f15d6b2b553d125b54a412e2d582b4ab1a9e1f3e::
https://api.github.com/repos/python/cpython,110584,backport-bdbe43c-3.11::3.11,0,merged,type-bug::skip issue::skip news::,Remove unused `SPHINXLINT` var. (cherry picked from commit bdbe43c7d0ad5ebda0232a4ab39689ea79a9733a) Co-authored-by: Ezio Melotti <ezio.melotti@gmail.com> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--110584.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::,Miss Islington (bot),31488909,73,1,0,1,1,0,c77ef7b1c53d737e43cf93b622d33b77b09284a9::
https://api.github.com/repos/python/cpython,110581,backport-3b1580a-3.11::3.11,0,merged,skip news::,Add OS version specific macro for Solaris: Py_SUNOS_VERSION. (cherry picked from commit 3b1580af07c0ce90d1c2073ab087772283d7e3b9) Co-authored-by: Jakub Kulík <Kulikjak@gmail.com> <!-- gh-issue-number: gh-78469 --> * Issue: gh-78469 <!-- /gh-issue-number --> ::,Miss Islington (bot),31488909,73,2,25,2,4,0,2d973c1c57833d9ccb73c7ab4b7674eb7a62699a::fd96bbf653301f759121507444f006294b7cd2ec::
https://api.github.com/repos/python/cpython,110580,backport-3b1580a-3.12::3.12,0,merged,skip news::,Add OS version specific macro for Solaris: Py_SUNOS_VERSION. (cherry picked from commit 3b1580af07c0ce90d1c2073ab087772283d7e3b9) Co-authored-by: Jakub Kulík <Kulikjak@gmail.com> <!-- gh-issue-number: gh-78469 --> * Issue: gh-78469 <!-- /gh-issue-number --> ::,Miss Islington (bot),31488909,73,1,23,2,4,0,12f06406b180242293332069518d424044fbd45a::
https://api.github.com/repos/python/cpython,110578,pdb-safe-repr::main,0,merged,type-bug::stdlib::,"Currently in `pdb` we have a couple of explicit/implicit usage of `repr` when the object is arbitrary - which could potentially cause a `pdb` crash when the object is not displayable. Even though it's not super common, we should try out best making `pdb` not crash. Hence `_safe_repr` is introduced to print objects for: * args * display * retval <!-- gh-issue-number: gh-65052 --> * Issue: gh-65052 <!-- /gh-issue-number --> ::I think it would be easier for a user to understand what happened if this printed sometime like what `traceback._safe_string` prints when str or repr fail (the fact that repr failed is more informative in this context than the precise exception. This could be read as ""self is an AttributeError"").::Yeah that makes sense. I added an error message `repr({expr}) failed: ` before the exception. Still think it might be helpful for users to know what actually failed - and now it's less ambiguous with the extra error message (hopefully).::Do we use f-strings or ``%`` in this script? Or a mixture of the two?::I'm using f-strings for all new code. There are plenty of usages with `%` as `pdb` is old. Do you think it would be helpful to have a PR to update all strings to f-strings? It would eliminate the mixture.::Probably not worth the risk of breaking something.::",Tian Gao,13121107,1366,3,62,7,3,1,ce54e8d77869385647ff1dc7346f0766f5afc482::c59459e3225cc19c575a70c93e15a7f88839c887::605d43c452e900cfcc00b6a834fa186fe54be3b6::
https://api.github.com/repos/python/cpython,110576,fix-ci-fuzz-build::main,0,merged,skip issue::skip news::,"When CI job was skipped the job was failing: https://github.com/python/cpython/actions/runs/6459321247/job/17536559744?pr=110573 ``` Error: The template is not valid. .github/workflows/build.yml (Line: 620, Col: 24): Error reading JToken from JsonReader. Path '', line 0, position 0. ``` This happened because `run_cifuzz` was not set. Now we use the same logic as for other tools by setting it to `false` Refs https://github.com/python/cpython/pull/107653 Refs https://github.com/python/cpython/issues/107652::Do I get this logic right? First part: * `[ ""$GITHUB_BASE_REF"" = ""main"" ]` - this is a PR Second part: * `git diff --name-only origin/$GITHUB_BASE_REF..` - lists files changed compared with `main` * `grep -qvE $FUZZ_RELEVANT_FILES` - checks the changed files are NOT of the relevant type * `-eq 1` - error code 1, so true only when the files ARE found --- Instead of checking no match is false: `(...; echo $?)"" -eq 1` Can we check for a match, something along the lines of this? ```suggestion if [ ""$GITHUB_BASE_REF"" = ""main"" ] && [ ""$(git diff --name-only origin/$GITHUB_BASE_REF.. | grep -qE $FUZZ_RELEVANT_FILES)"" ]; then ```::When using `grep -q` in `$()`, we have to rely on exit code, because no output is produced. So: ```bash (.venv) ~/Desktop/cpython  fix-ci-fuzz-build ✔ » echo 'abc' | grep -qE 'b'; echo $? 0 (.venv) ~/Desktop/cpython  fix-ci-fuzz-build ✔ » echo 'abc' | grep -qE 'y'; echo $? 1 ```::",Nikita Sobolev,4660275,4663,3,7,3,1,0,b3a66d31f632f7faeb30a25747887ad1344dd142::0348cbc521eada1c4f4a045ceb588040d97c3992::3a5a4496d0e1bfd461b0169f0bb18d7d778b7fa0::
https://api.github.com/repos/python/cpython,110575,backport-f4cb0d2-3.11::3.11,0,merged,,"(cherry picked from commit f4cb0d27cc08f490c42a22e646eb73cc7072d54a) <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-109191 --> * Issue: gh-109191 <!-- /gh-issue-number --> ::",Bo Anderson,1190754,90,1,36,1,5,0,31b6aa76491e85b569119d0778809afe18c3384e::
https://api.github.com/repos/python/cpython,110574,gettext-plural-deprecate-nonintegers::main,0,merged,,Previously it was only emitted if translation was found. <!-- gh-issue-number: gh-88434 --> * Issue: gh-88434 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--110574.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::,Serhiy Storchaka,3659035,401,1,32,12,4,0,7acacc105e690e1ba7e2e5b2bfc743526807d651::
https://api.github.com/repos/python/cpython,110573,issue-110572::main,0,merged,skip news::,"@erlend-aasland you were suggested by GitHub, would you mind taking a look? :) <!-- gh-issue-number: gh-110572 --> * Issue: gh-110572 <!-- /gh-issue-number --> ::We should check for `value == (unsigned long)-1 && PyErr_Occurred()` here.::Good catch, done!::I don't like that we are repeating the same test with C&P code and slightly different parameters. IMO, it would be better if we factored out a helper function, and simply called that using a different set of params twice. What do you think?::They are quite different for me: <img width=""1464"" alt=""Снимок экрана 2023-10-10 в 16 22 14"" src=""https://github.com/python/cpython/assets/4660275/2b7914c7-32ec-4599-84d3-5535252fde78""> There are some structural similarities, but not exactly 1-to-1. <img width=""1464"" alt=""Снимок экрана 2023-10-10 в 16 23 08"" src=""https://github.com/python/cpython/assets/4660275/2aeb5a47-22af-408c-b2f2-5b2803a17b7a""> I think that creating abstractions for just two functions would make C code harder, not easier. In Python code I would agree to abstract away common parts.::",Nikita Sobolev,4660275,4663,3,57,33,1,0,e0eec0f623aeadcbdfe1532b8818c2c2e25026a1::073b9156563012a43fabc4d3a794b466ab9977e4::b799cb75072ec9e7d9bfad91154a67a69bd8bc8f::
https://api.github.com/repos/python/cpython,110570,rm-sphinxlint-var::main,0,merged,type-bug::docs::skip issue::awaiting core review::skip news::,"This PR removes the `SPHINXLINT` var from `Doc/Makefile`, since it's no longer used. <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--110570.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::",Ezio Melotti,25624924,146,1,0,1,1,0,d9267202c2ed7597bd20ba97d117d51e38f8d4e1::
https://api.github.com/repos/python/cpython,110568,clean-up-channels-module::main,0,merged,skip news::,<!-- gh-issue-number: gh-76785 --> * Issue: gh-76785 <!-- /gh-issue-number --> ::,Eric Snow,1152074,290,19,335,297,3,0,2ab929c01dfea07a5bc265442e24135b616f59d4::7b2a190e2a6e8ed2a3d3cb239986386a56bee6e0::4f7d3ef4ffa8e078d89c18f6f7b4508e1ae0ff98::90a0376c9795072884594f5ec5dc8317f9424d18::4ca411d85f9bd5994e72aa1de96a71f8d5da0825::41a8e829b60158ff22d753fce03cec7b27b9b5ca::33c000749244c53c7b38a657bd5aae8d1a4bd64e::031d7676a41690bcf1118b871050bdab57e04158::6e775431154af9db52d7f9e28bf98fd8d842db3f::d834e1647686630a3ce8ac28528b425e6b5020b2::a416dc0a83cc0b03eb4f09b14950e24c938be6a7::9d4d8d670c8b7a4acdd44939bddaff18e2acbced::23077c2c51faf9d28639d4d98213c98dd1a08603::2e0fc2ac837b1c5c370a4a1840d217c3ef3f6ec9::cff8dcf243cdef93cec85cc7cbcc1bfb39467368::84c43878b9a48e5a9a2c8cda6f375181911524d0::bdb450ecf9c0dd00d24c3abfb855cf6b34717898::b85ea2692c9d1dd49f011685a95170aa1f46ac67::e1ba74c056a173665802ec6dab27cc448710a89d::
https://api.github.com/repos/python/cpython,110567,channel-op-timeouts::main,0,merged,skip news::,<!-- gh-issue-number: gh-84570 --> * Issue: gh-84570 <!-- /gh-issue-number --> ::,Eric Snow,1152074,290,11,202,47,8,0,51b80c72251052ca49588c4bca6c1f5b7c0035c7::4dcf0271b8cb5e5be33d968c0186955619141f21::21d85dd7af6908b65e909a1c0afd371d8d1c4da8::f6df5ea4ee55954457245c9b31d375fd0317a226::1b1f9160f1665343b3229d24089ef55f6288abdb::9131e5dc3f370aadda60fe3e4df524691bca5bfb::b1c2b909318814815ea75815f9d93671abedc388::cdd8bfe65617da6d7d6fd906d15a5ebd03de6c57::84dd5ac7d560c8faada49161c10b22b813e6672e::7ebd50cbb4d1e990abc044d74dd87828002984d5::2191920af9e1b66ec573e42af85c1138dbe96484::
https://api.github.com/repos/python/cpython,110566,fix-win64-build-tools::main,0,merged,skip news::,"gh-106765: Building python 3.11.x installer FAILS, launcher.wixproj cannot detect v143 buildtools - Build documentation updated::",Ashish Shirodkar,31506443,1,4,10,0,2,0,e06b09672f9787a23e2ba261f3cea012bb9df63c::5513cd7668e4b97de8cdfd23145c7ff7a49ae0bb::be2d9f01b1a44c0a9ed09a947cec749b53a5ae70::3aac1c7a0d1400f109187c9ec73cd172147bc251::
https://api.github.com/repos/python/cpython,110565,channel-send-wait-new::main,0,merged,skip news::,We had been faking it (poorly). We will add timeouts separately. <!-- gh-issue-number: gh-84570 --> * Issue: gh-84570 <!-- /gh-issue-number --> ::,Eric Snow,1152074,290,7,182,109,4,0,c61736198c911f50c4771a7ad03f4e7d0cdda017::1701ca022b83658f72685d553c5b92638ac0e286::b5dbf81cfeb2909d4778cf4d6e83aade70bb1d98::d3aefb8486dec63d0d8fe454500f394311f33e18::5b6574e9fcb25d91d30dd91cecf361de0edf462a::fbd79451ef745e2a0341c29989d265ef6595c0ea::b85a681aef97b88fb1fc73ee8180b96be667d5c7::
https://api.github.com/repos/python/cpython,110564,backport-326c6c4-3.11::3.11,0,merged,,"Deprecation warning about non-integer numbers in gettext now always refers to the line in the user code where gettext function or method is used. Previously, it could refer to a line in gettext code. Also, increase test coverage for NullTranslations and domain-aware functions like dngettext(). (cherry picked from commit 326c6c4e07137b43c49b74bd5528619360080469) Co-authored-by: Serhiy Storchaka <storchaka@gmail.com> <!-- gh-issue-number: gh-110519 --> * Issue: gh-110519 <!-- /gh-issue-number --> ::",Miss Islington (bot),31488909,73,1,144,51,3,0,a2c71600a9bd06eb96babaa7b184f858b603613c::
https://api.github.com/repos/python/cpython,110563,backport-326c6c4-3.12::3.12,0,merged,,"Deprecation warning about non-integer numbers in gettext now always refers to the line in the user code where gettext function or method is used. Previously, it could refer to a line in gettext code. Also, increase test coverage for NullTranslations and domain-aware functions like dngettext(). (cherry picked from commit 326c6c4e07137b43c49b74bd5528619360080469) Co-authored-by: Serhiy Storchaka <storchaka@gmail.com> <!-- gh-issue-number: gh-110519 --> * Issue: gh-110519 <!-- /gh-issue-number --> ::",Miss Islington (bot),31488909,73,1,144,51,3,0,5f787d232d9a8e3e9d718eb95d90f88b6e90e619::
https://api.github.com/repos/python/cpython,110562,backport-f4cb0d2-3.12::3.12,0,merged,,(cherry picked from commit f4cb0d27cc08f490c42a22e646eb73cc7072d54a) Co-authored-by: Bo Anderson <mail@boanderson.me> <!-- gh-issue-number: gh-109191 --> * Issue: gh-109191 <!-- /gh-issue-number --> ::,Miss Islington (bot),31488909,73,1,31,1,5,0,0ee50d91df83d9479713a086ae514e3e142bf0d0::
https://api.github.com/repos/python/cpython,110559,ruff-arg-clinic::main,0,merged,skip news::,"<!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-110558 --> * Issue: gh-110558 <!-- /gh-issue-number --> ::Could you add comments for each magic id here? I have no clue what these mean :)::yes, sure!::Added in https://github.com/python/cpython/pull/110559/commits/485c5485df9e8a219b4913eecf996d143c3846e8 -- just went for short one-liners since the full descriptions are pretty easy to find at https://docs.astral.sh/ruff/rules/#pyflakes-f :)::",Alex Waygood,66076021,141,6,21,4,5,1,dec89bc79b53547888db5668cf19ac33a383ab92::b52e2d4f8a88b3b957999cefb5cef04a8c6f4ad9::ead758746e6868ef00876b22fb40c5230a88835d::75c7a56f164d0fc3149e32bc42d7c0e7d2a7debc::485c5485df9e8a219b4913eecf996d143c3846e8::5850844afa3a02901ae1028d8b9699308802b840::
https://api.github.com/repos/python/cpython,110556,backport-12cc679-3.11::3.11,0,merged,,(cherry picked from commit 12cc6792d0ca1d0b72712d77c6efcb0aa0c7e7ba) Co-authored-by: Steve Dower <steve.dower@python.org> <!-- gh-issue-number: gh-110437 --> * Issue: gh-110437 <!-- /gh-issue-number --> ::,Miss Islington (bot),31488909,73,1,6,1,2,0,03c108f0fc6e768ed445f439e1196c415f937102::
https://api.github.com/repos/python/cpython,110555,backport-12cc679-3.12::3.12,0,merged,,(cherry picked from commit 12cc6792d0ca1d0b72712d77c6efcb0aa0c7e7ba) Co-authored-by: Steve Dower <steve.dower@python.org> <!-- gh-issue-number: gh-110437 --> * Issue: gh-110437 <!-- /gh-issue-number --> ::,Miss Islington (bot),31488909,73,1,6,1,2,0,bbc834111eab7d2e7859f5db12a29548814675e9::
https://api.github.com/repos/python/cpython,110554,backport-ea39c87-3.12::3.12,0,merged,skip news::,(cherry picked from commit ea39c877c0a8e7a717f2e4bf7d92a3a8780e67c0) Co-authored-by: Nikita Sobolev <mail@sobolevn.me> <!-- gh-issue-number: gh-110525 --> * Issue: gh-110525 <!-- /gh-issue-number --> ::,Miss Islington (bot),31488909,73,1,37,0,1,0,de6f38f9b9d4328260faa6d6833c3db9868d23ef::
https://api.github.com/repos/python/cpython,110553,backport-89df5b7-3.12::3.12,0,merged,skip news::,(cherry picked from commit 89df5b73d07872d554da60b455b46c98e01a022d) <!-- gh-issue-number: gh-110549 --> * Issue: gh-110549 <!-- /gh-issue-number --> ::,Serhiy Storchaka,3659035,401,1,0,6,3,0,891e276b44f6a5416de7bc1508b125d45cb9630f::
https://api.github.com/repos/python/cpython,110552,issue-110549::main,0,merged,skip news::,<!-- gh-issue-number: gh-110549 --> * Issue: gh-110549 <!-- /gh-issue-number --> ::,Nikita Sobolev,4660275,4663,1,0,6,3,1,e325e37c48bd38633be0345fd3bc36ad62422827::
https://api.github.com/repos/python/cpython,110551,backport-48419a5-3.11::3.11,0,merged,,(cherry picked from commit 48419a50b44a195ad7de958f479a924e7c2d3e1b) Co-authored-by: jtranquilli <76231120+jtranquilli@users.noreply.github.com> <!-- gh-issue-number: gh-109286 --> * Issue: gh-109286 <!-- /gh-issue-number --> ::,Miss Islington (bot),31488909,73,1,4,3,2,0,732fda944cc7d9d12e1cac2ade6087bc4d8f2c0b::
https://api.github.com/repos/python/cpython,110550,backport-48419a5-3.12::3.12,0,merged,,(cherry picked from commit 48419a50b44a195ad7de958f479a924e7c2d3e1b) Co-authored-by: jtranquilli <76231120+jtranquilli@users.noreply.github.com> <!-- gh-issue-number: gh-109286 --> * Issue: gh-109286 <!-- /gh-issue-number --> ::,Miss Islington (bot),31488909,73,1,4,3,2,0,a7eb5f953c2441073e0d09ac6120e6f6a282b138::
https://api.github.com/repos/python/cpython,110547,backport-c49edd7-3.12::3.12,0,merged,skip news::,(cherry picked from commit c49edd7d9c5395a6a6696a4846f56bc8b2b22792) <!-- gh-issue-number: gh-110525 --> * Issue: gh-110525 <!-- /gh-issue-number --> ::,Nikita Sobolev,4660275,4663,1,383,1,6,0,90c2b087e36a9bcd42ca8fddddc7f70ca0bd9dd4::
https://api.github.com/repos/python/cpython,110546,backport-5e7edac-3.12::3.12,0,merged,docs::skip news::,(cherry picked from commit 5e7edac7717bfe5f3c533d83ddd0f564db8de40b) Co-authored-by: Nikita Sobolev <mail@sobolevn.me> <!-- gh-issue-number: gh-110497 --> * Issue: gh-110497 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--110546.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::,Miss Islington (bot),31488909,73,1,11,9,5,0,305631f3a7100954397ea3589f83688a1f3974e0::
https://api.github.com/repos/python/cpython,110545,backport-5e7edac-3.11::3.11,0,merged,docs::skip news::,(cherry picked from commit 5e7edac7717bfe5f3c533d83ddd0f564db8de40b) Co-authored-by: Nikita Sobolev <mail@sobolevn.me> <!-- gh-issue-number: gh-110497 --> * Issue: gh-110497 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--110545.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::,Miss Islington (bot),31488909,73,1,11,9,5,0,5193ff8d450d3dc0bae93f1d90c9e345b8f4ebda::
https://api.github.com/repos/python/cpython,110544,issue-110525-2::main,0,merged,skip news::,"This corner case cannot be covered from Python code, as far as I can tell. But, it is documented: ```rst Also works with :class:`frozenset` instances (like :c:func:`PyTuple_SetItem` it can be used to fill in the values of brand new frozensets before they are exposed to other code). ``` So, I think we need to test it as well in C code. Sorry for missing this in the original PR! <!-- gh-issue-number: gh-110525 --> * Issue: gh-110525 <!-- /gh-issue-number --> ::Leaks `num`.::",Nikita Sobolev,4660275,4663,4,37,0,1,0,588b3e5969a6992666c19fe390664efbb26ee8cf::95f9ec759590660c69ed0430104d26a9e9d0b605::4235ee8879cdb1581f06c63c1929c52bcfcde913::7d9ae7a6628428370781e86ff0149cbd2edb9065::
https://api.github.com/repos/python/cpython,110542,revert-pr-109152::3.12,0,merged,,This reverts commit bc1fe3549b32896ef0cbae3d2220ebeaf111d9b8. <!-- gh-issue-number: gh-109151 --> * Issue: gh-109151 <!-- /gh-issue-number --> ::,Serhiy Storchaka,3659035,401,1,0,5,2,0,a70ae7198f58dbe80c7f81c5c03203e9e96c8916::
https://api.github.com/repos/python/cpython,110541,backport-dd4bb05-3.12::3.12,0,merged,,(cherry picked from commit dd4bb0529e44ac6f75a9ebbfcbf5d73dc251b7a7) Co-authored-by: Tian Gao <gaogaotiantian@hotmail.com> <!-- gh-issue-number: gh-110514 --> * Issue: gh-110514 <!-- /gh-issue-number --> ::,Miss Islington (bot),31488909,73,1,27,1,3,0,2b0f29d9a748f1edd9b9000344a6d37e498f03f2::
https://api.github.com/repos/python/cpython,110539,test_socket-ThreadSafeCleanupTestCase::main,0,merged,tests::skip news::,<!-- gh-issue-number: gh-76106 --> * Issue: gh-76106 <!-- /gh-issue-number --> ::,Serhiy Storchaka,3659035,401,3,2,24,1,0,1d9e32183888b700cafb2f6f34a86dcad94c900a::a3e43c917b5ee2dfbd5c994b43a0ae9564736e11::f5eaadd79853c77f48cb88d7e3bd4c873b2c3b2f::
https://api.github.com/repos/python/cpython,110537,backport-892ee72-3.11::3.11,0,merged,docs::skip news::,(cherry picked from commit 892ee72b3622de30acd12576b59259fc69e2e40a) Co-authored-by: partev <petrosyan@gmail.com> <!-- gh-issue-number: gh-110534 --> * Issue: gh-110534 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--110537.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::,Miss Islington (bot),31488909,73,1,1,1,1,0,7262cf3c0a3fa1d3a101f8b8c979a3e1515fc7cd::
https://api.github.com/repos/python/cpython,110536,backport-892ee72-3.12::3.12,0,merged,docs::skip news::,(cherry picked from commit 892ee72b3622de30acd12576b59259fc69e2e40a) Co-authored-by: partev <petrosyan@gmail.com> <!-- gh-issue-number: gh-110534 --> * Issue: gh-110534 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--110536.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::,Miss Islington (bot),31488909,73,1,1,1,1,0,843645dc0b3b2e2c582cf0f265bf0159f3235e9c::
https://api.github.com/repos/python/cpython,110535,patch-1::main,0,merged,docs::skip news::,"<!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-110534 --> * Issue: gh-110534 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--110535.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::",,23830955,4,1,1,1,1,0,e3218efc19e5f0294aaadf4dfc6cd0498f662b86::
https://api.github.com/repos/python/cpython,110532,sys-monitoring-docs::main,0,merged,docs::skip issue::skip news::,"Polish `sys.monitoring` docs so it looks like other Python docs. * Replaced a lot of raw ``code`` type with the commonly used exception or function links. * Added `monitoring-event` directive for all the events (similart to `dis` instructions and `pdb` commands) * Added `DISABLE`, `MISSING` and `NO_EVENT` constant explanation. * Added `versionadded` * Used `*arg*` for arguments which is the standard for most Python docs. * Unified the display in callback function section * Fixed a couple of grammar issues or vague words. <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--110532.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::",Tian Gao,13121107,1366,1,165,101,2,1,2e1fb465402e054fb10cdefd10064d5aa087eb46::
https://api.github.com/repos/python/cpython,110528,pyset_clear_docs::main,0,merged,docs::skip news::,"Mention that it can return `-1` and raise `SystemError`: https://github.com/python/cpython/blob/7e30821b17b56bb5ed9799f62eb45e448cb52c8e/Objects/setobject.c#L2291-L2298 <!-- gh-issue-number: gh-110527 --> * Issue: gh-110527 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--110528.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::This doc is quite generic and doesn't explain that it cannot fail if you pass a set type or a subtype of the set type. It only fails the argument type is not set.::Done, should be better now!::```suggestion success. If *set* is not an instance of :class:`set` or a :class:`set` subclass, ```::",Nikita Sobolev,4660275,4663,3,3,1,1,0,2ef1f195b94f214a5b6261b60e7f82a06ac6ece7::8888f9288c41118c1862d76030fa368aa1f1653f::e637d7160edb6bc8abe0a967595bd2992d9de69c::
https://api.github.com/repos/python/cpython,110526,issue-110525::main,0,merged,skip news::,"Heavily inspired by https://github.com/python/cpython/blob/main/Modules/_testcapi/dict.c <!-- gh-issue-number: gh-110525 --> * Issue: gh-110525 <!-- /gh-issue-number --> ::`l` is not good name. It looks like `1` or `I`. Why not use `size`?::I would like to suggest a surprising name: set_size.::SystemError? That's a surprising error. Usually, it's used when the C API is misused, like passing NULL or the wrong type. frozenset is a ""wrong type"" here?::Usually I call this a ""subclass"", not a ""child"". I'm more used to parent/child names when it comes to processes.::I would prefer ""set_new"" name here, and ""frozenset_new"" below.::I would prefer ""set_get_size"" or get_size"" name.::Yes, immutable frozenset is a wrong type for mutation-based functions :)::None can conflict with NULL. It is better to use other non-iterable: an integer or `object()`.::`[]` is used as an example of non-set argument in the previous test. I think that it is better to use the same example in both tests. Or both if the behavior is different.::These two do not belong to the loop.::Move comments that do not depend on `instance` outside of the loop.::",Nikita Sobolev,4660275,4663,4,383,1,6,1,bf13ca03a5bb30e2e687c0efc9e93f8e8c73ce5e::314a7b3a93dab007384dc4e187d3bdf372942cdb::9feda284557142ab60d2564b5de0cba042a57025::9b8f7a59a29d35c9547a019a5c37ee36542f8547::
https://api.github.com/repos/python/cpython,110524,sys-profile-throw::main,0,merged,,"`sys.setprofile` suffers the same issue as #106161 - it does not record `PY_THROW` events. So when the generator is garbage collected, the count is wrong. For `profile` module, that means an assertion is raised. This needs backporting. <!-- gh-issue-number: gh-110514 --> * Issue: gh-110514 <!-- /gh-issue-number --> ::",Tian Gao,13121107,1366,2,27,1,3,0,26741579d5af282e5aa6be4836023ffc34b603fa::30f62b12edad30436134866253bf74473868ec19::
https://api.github.com/repos/python/cpython,110520,test_gettext-plural::main,0,merged,,"Deprecation warning about non-integer number in gettext now alwais refers to the line in the user code where gettext function or method is used. Previously it could refer to a line in gettext code. Also, increase test coverage for NullTranslations and domain-aware functions like dngettext(). <!-- gh-issue-number: gh-110519 --> * Issue: gh-110519 <!-- /gh-issue-number --> ::",Serhiy Storchaka,3659035,401,1,144,51,3,0,049bbaeb817c3e14b7d5e143915d57dc6e75cdad::
https://api.github.com/repos/python/cpython,110516,sys-settrace-docs::main,0,merged,docs::skip news::,"In our current docs, we claim that: > The local trace function should return a reference to itself (or to another function for further tracing in that scope), or None to turn off tracing in that scope. That is not the case, and for as far as we know. Returning `None` in the local trace function has no effect and it's already the de facto. There are at least 3 issues about this (#104232, #78980 and #56201) and it should not be that difficult to fix this. Rather than changing the behavior which could potentially break someone's code, we can simply change our docs because we never achieved what we claimed anyway, and people are fine with it. <!-- gh-issue-number: gh-104232 --> * Issue: gh-104232 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--110516.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::",Tian Gao,13121107,1366,1,2,3,1,0,ec745b1e06573919c81c72488403be8a2cf932b8::
https://api.github.com/repos/python/cpython,110515,test_timerfd::main,0,merged,tests::skip news::,"* test_timerfd_TFD_TIMER_ABSTIME() and test_timerfd_ns_TFD_TIMER_ABSTIME() tolerate a difference of 50 us. * test_timerfd_negative() checks if os.TFD_TIMER_CANCEL_ON_SET is defined. <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-108277 --> * Issue: gh-108277 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,1,11,3,1,0,5f17c7c2a6fb92ddfd36436843d65a8722a80661::
https://api.github.com/repos/python/cpython,110513,backport-8e56d55-3.12::3.12,0,merged,docs::skip issue::skip news::,"This commit removes a ':'. I believe the extra colon causes a display error. What I believe to be an error: Above this expression `round(math.pi, ndigits=2) == round(22 / 7, ndigits=2)` the page displays `.. doctest::`. What I observed: After I remove the extra colon, the page does not display `.. doctest::` (cherry picked from commit 8e56d551ceef37a307280bcc5303bf69ccc9f9c1) Co-authored-by: zipperer <47086307+zipperer@users.noreply.github.com> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--110513.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::",Miss Islington (bot),31488909,73,1,1,1,1,1,4a92dc7f60814ea218ab1d032ca1d3a7967f2f0a::
https://api.github.com/repos/python/cpython,110512,backport-dd9d781-3.11::3.11,0,merged,,(cherry picked from commit dd9d781da30aa3740e54c063a40413c542d78c25) Co-authored-by: denballakh <47365157+denballakh@users.noreply.github.com> <!-- gh-issue-number: gh-110237 --> * Issue: gh-110237 <!-- /gh-issue-number --> ::,Miss Islington (bot),31488909,73,1,12,3,2,1,ed0d9bb059c970af7015a7b3c1cf2c5db92deb86::
https://api.github.com/repos/python/cpython,110511,backport-dd9d781-3.12::3.12,0,merged,,(cherry picked from commit dd9d781da30aa3740e54c063a40413c542d78c25) Co-authored-by: denballakh <47365157+denballakh@users.noreply.github.com> <!-- gh-issue-number: gh-110237 --> * Issue: gh-110237 <!-- /gh-issue-number --> ::,Miss Islington (bot),31488909,73,1,12,3,2,1,2b46fee55b5c58988600e2f72aadc6deb74c5cb4::
https://api.github.com/repos/python/cpython,110509,patch-1::main,0,merged,docs::skip issue::skip news::,"This commit removes a ':'. I believe the extra colon causes a display error. What I believe to be an error: Above this expression `round(math.pi, ndigits=2) == round(22 / 7, ndigits=2)` the page displays `.. doctest::`. What I observed: After I remove the extra colon, the page does not display `.. doctest::` <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--110509.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::",,47086307,1,1,1,1,1,1,b1154df8bed458367be3ff5fe7bae4b60ed7f9ea::
https://api.github.com/repos/python/cpython,110508,deprecate-decimal-format-N::main,0,merged,,It was not documented and only supported in the C implementation. <!-- gh-issue-number: gh-89902 --> * Issue: gh-89902 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--110508.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::,Serhiy Storchaka,3659035,401,1,29,0,4,0,be0074f1abd9079e78181ae57a1a68630ef05404::
https://api.github.com/repos/python/cpython,110507,test_tkinter-test_write::main,0,merged,tests::skip news::,<!-- gh-issue-number: gh-107705 --> * Issue: gh-107705 <!-- /gh-issue-number --> ::,Serhiy Storchaka,3659035,401,1,10,5,1,0,183445ef268d03451472d6dd0c7c325cf7830148::
https://api.github.com/repos/python/cpython,110505,backport-b987fdb-3.11::3.11,0,merged,tests::skip news::,(cherry picked from commit b987fdb19b981ef6e7f71b41790b5ed4e2064646) Co-authored-by: Serhiy Storchaka <storchaka@gmail.com> <!-- gh-issue-number: gh-109848 --> * Issue: gh-109848 <!-- /gh-issue-number --> ::,Miss Islington (bot),31488909,73,1,2,1,1,0,5374f4d419ccaf0f11717462b6ec938de9c50c9e::
https://api.github.com/repos/python/cpython,110504,backport-b987fdb-3.12::3.12,0,merged,tests::skip news::,(cherry picked from commit b987fdb19b981ef6e7f71b41790b5ed4e2064646) Co-authored-by: Serhiy Storchaka <storchaka@gmail.com> <!-- gh-issue-number: gh-109848 --> * Issue: gh-109848 <!-- /gh-issue-number --> ::,Miss Islington (bot),31488909,73,1,2,1,1,0,c5bb38395ea8c5091217dce6a7d4b5e1921b1d3c::
https://api.github.com/repos/python/cpython,110503,backport-1aad4fc-3.11::3.11,0,merged,tests::skip news::,(cherry picked from commit 1aad4fc5dba993899621de86ae5955883448d6f6) Co-authored-by: Serhiy Storchaka <storchaka@gmail.com> <!-- gh-issue-number: gh-109864 --> * Issue: gh-109864 <!-- /gh-issue-number --> ::,Miss Islington (bot),31488909,73,1,13,2,1,0,60514d632218ea405850a6e011e5617d52ff6430::
https://api.github.com/repos/python/cpython,110502,backport-1aad4fc-3.12::3.12,0,merged,tests::skip news::,(cherry picked from commit 1aad4fc5dba993899621de86ae5955883448d6f6) Co-authored-by: Serhiy Storchaka <storchaka@gmail.com> <!-- gh-issue-number: gh-109864 --> * Issue: gh-109864 <!-- /gh-issue-number --> ::,Miss Islington (bot),31488909,73,1,13,2,1,0,d78aa9e296a6314dfea4623872e6baf1823f39ab::
https://api.github.com/repos/python/cpython,110500,test_async_gen_propagates_generator_exit::main,0,merged,tests::skip news::,"It now fails if the original bug is not fixed, and no longer produce ResourceWarning with fixed code. <!-- gh-issue-number: gh-110378 --> * Issue: gh-110378 <!-- /gh-issue-number --> ::",Serhiy Storchaka,3659035,401,1,5,9,1,0,f11f46ee4de527df736e85938a7a9c342eca6f23::
https://api.github.com/repos/python/cpython,110499,test_contextmanager_trap_second_yield::main,0,merged,,contextmanager and asynccontextmanager context managers now close an invalid underlying generator object that yields more then one value. <!-- gh-issue-number: gh-110378 --> * Issue: gh-110378 <!-- /gh-issue-number --> ::👍🏻 I sometimes use the `try:finally:` construct around flow breaking instructions as well. Here it nicely chains exceptions if `self.gen.close()` raises.::,Serhiy Storchaka,3659035,401,1,43,7,4,0,347881e161d4c22d55103b08f1b6a5afafbfc21a::
https://api.github.com/repos/python/cpython,110498,issue-110497::main,0,merged,docs::skip news::,<!-- gh-issue-number: gh-110497 --> * Issue: gh-110497 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--110498.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::,Nikita Sobolev,4660275,4663,1,11,9,5,0,7fb38523cd5a1689e8462a78eaba3863a44fdca1::
https://api.github.com/repos/python/cpython,110493,pdb-exception-variable::main,0,merged,,"This is a minor improvement to the newly supported chained exception feature. We have convenience variable `$_exception` which stores the exception object when an exception is being raised. We can reuse that when we are in post mortem mode analyzing exceptions. <!-- gh-issue-number: gh-106670 --> * Issue: gh-106670 <!-- /gh-issue-number --> ::I don't remember- are we sure here that the index is valid?::First of all, yes, we only update `self._chained_exception_index` when there's a traceback with it. However, the thing is, we actually consider the exception ""invalid"" if there's no traceback attached to it - but the exception is still there. So even in this circumstance, the exception will exist and there will be no error.::```suggestion In :mod:`pdb`, set convenience variable ``$_exception`` for post mortem debugging. ```::",Tian Gao,13121107,1366,3,15,0,3,0,4ebf23e7788022df378c502a822a09c9c457254d::16f1c1872949d0f8ac2856281f1945a11822b606::0c9d9d2b669467d3d6ad1f350c15e76b6f88b61c::
https://api.github.com/repos/python/cpython,110492,Agentofchaoss-patch-2::main,0,closed,awaiting review::,"<!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> ::syntax error at line 25::",John Gotti Sr.,109058188,0,5,90,0,1,0,42b6a1384ae26aad37b29b175c4c61cdb16f7c9f::00de4d4e1327130a78bd8f7635fd3930ce1ad5ec::287adac4fc5319107d1fdd19d34ac9d20725c54c::d2cab4c4a0be60d3d2684c998a3feb1049718ba0::468b6c00f7b2e9840e1b0acf283d3be406943812::
https://api.github.com/repos/python/cpython,110491,backport-5fd8821-3.12::3.12,0,merged,,(cherry picked from commit 5fd8821cf8eb1fe2e8575f8c7cc747cf78855a88) Co-authored-by: Brett Cannon <brett@python.org> <!-- gh-issue-number: gh-110455 --> * Issue: gh-110455 <!-- /gh-issue-number --> ::,Miss Islington (bot),31488909,73,1,5,2,2,1,2a19c5b8c0153de18d431c2dae8793cc91fd65c3::
https://api.github.com/repos/python/cpython,110487,issue110455-thread_id-is-zero::main,0,merged,,"<!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-110455 --> * Issue: gh-110455 <!-- /gh-issue-number --> ::",Brett Cannon,54418,1953,2,5,2,2,1,9e85366c5de278e08bf4016584be326d3a6539f6::945132223a8670b793cd2cce5dba0e5af104e5b7::
https://api.github.com/repos/python/cpython,110486,Agentofchaoss-patch-1::main,0,closed,awaiting review::,"<!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> ::",John Gotti Sr.,109058188,0,2,66,0,1,0,57bbc9a79f4ef7b038c5ccb1f957a1b85e6f4753::9efd46501bb6af5f4fa474eb36881cac5d775565::
https://api.github.com/repos/python/cpython,110485,patch-1::main,0,closed,docs::skip issue::awaiting core review::skip news::,"The presence of a double colon is causing `.. doctest::` to display in Tutorial 15, **Floating Point Arithmetic: Issues and Limitations** doc: https://docs.python.org/3/tutorial/floatingpoint.html ![image](https://github.com/python/cpython/assets/9964605/9581df9f-ad66-4642-8bcf-9b79f767db4f) Removing the colon should allow it to parse the directive properly. <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--110485.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::",Galen Rice,9964605,28,1,1,1,1,0,affe4d70612eb5c608f476ad4bf65c10929e6938::
https://api.github.com/repos/python/cpython,110484,Agentofchaoss-patch-1::main,0,closed,awaiting review::invalid::,"<!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> ::",John Gotti Sr.,109058188,0,1,3,0,1,0,1d63ceb85ce14667b2b54c511b604d29dadc20a0::
https://api.github.com/repos/python/cpython,110483,Agentofchaoss-patch-2::main,0,closed,awaiting review::invalid::,"<!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> ::",John Gotti Sr.,109058188,0,2,90,0,1,0,42b6a1384ae26aad37b29b175c4c61cdb16f7c9f::00de4d4e1327130a78bd8f7635fd3930ce1ad5ec::
https://api.github.com/repos/python/cpython,110482,macOS-SQLite-installer-upgrade::main,0,merged,,"This is the pr for the macOS SQLite installer upgrade for 3.43.1, following from pr #110374 where the branch was accidentally deleted. <!-- gh-issue-number: gh-109286 --> * Issue: gh-109286 <!-- /gh-issue-number --> ::Again, please do not include style changes. ```suggestion extra_cflags=('-Os ' ```::```suggestion Update macOS installer to use 3.43.1. ```::```suggestion Update macOS installer to use SQLite 3.43.1. ```::",,76231120,0,10,4,3,2,0,4052bc9647217efa2c61f3c89fa0980db77d563d::ddf8d68e0e882129e5769d1479b0bee89d504b09::c659e4c5af231a0a9b23a37442ecf30d30e3b699::ef003dbcd2e3e89a6bbba47e2dd9964087a6923d::3e9ae8fd4a980bacd707e3c1f810e39c42d0e5f6::19adb5e8360ad448d13b6448708940e3dada63eb::1d37c2e220e592eeed51f22174824556e00981c9::ffbc1012d98b241d0c88d1ec4a49a0640cf0509f::54747347ee9ca9f526be2a5fdc42850b4a473129::f01b20e5291d36549afc92f30f8d3f1c697f2141::
https://api.github.com/repos/python/cpython,110480,gh-109693::main,0,merged,skip news::,"<!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-109693 --> * Issue: gh-109693 <!-- /gh-issue-number --> ::It looks like `func` is always `PyObject*`. It might be cleaner to declare it as such and use `_Py_atomic_load_ptr`/`_Py_atomic_store_ptr` instead of operating on `uintptr_t`.::Makes sense!::@pitrou: I don't get why Handlers tripped uses ""relaxed"" order, whereas is_tripped uses ""sequentially consistent"" order. What's the rationale? Would it be safer to use ""sequentially consistent"" order  for both?::AFAIR, it is because the sequentially consistent `is_tripped` already acts as a barrier and we don't another barrier. But, yes, using ""sequentially consistent"" for both would be at least as safe, so feel free to make the change. cc @gpshead for opinions::I would like to suggest to leave it as relaxed as possible since ""sequentially consistent"" requires more overhead than relaxed.::@corona10: If one memory barrier is enough, can you please just add a comment somewhere in the C file to explain the rationale why one variable is accessed with ""relaxed"" order, and the other ""required"" ""sequentially consistent"" order?::https://github.com/python/cpython/pull/110480#discussion_r1349538339 @vstinner Enough or do you want to explain in other way?::Hum, maybe move this comment at the top of trip_signal(), since it's the function which writes into these two variables.::I'm mostly curious about setting tripped and then set is_tripped. How/why it's ok to use relaxed to set tripped, but why is_tripped requires a memory barrier. I don't get why you mention ""func"" here, since get_handler() and set_handler() don't use relaxed but ""sequentially consistent"" order to get/set it.::> I don't get why you mention ""func"" here, since get_handler() and set_handler() don't use relaxed but ""sequentially consistent"" order to get/set it. Mistake::> I'm mostly curious about setting tripped and then set is_tripped. How/why it's ok to use relaxed to set tripped, but why is_tripped requires a memory barrier. Hmm change my mind, let's change the implementation of the usage. It looks quite an implementation detail, so can make mistakes anytime.::I changed my mind: Depending on specific variables, the memory barrier can be dangerous if someone is not familiar with atomic programming or if we lose the history. To prevent future incidents by human, I changed the implementation to use ""sequentially consistent"" order for the case.::I suggest to remove the comment here, and *maybe* add a comment in set_handler() to mention the relationship with PyErr_SetInterrupt().::In a following PR, it may interesting to also change how 'wakeup' members are accessed. When I modified the code, I used ""volatile"" since I didn't want/couldn't use pycore_atomic API. Now with pyatomic.h, there are enough API to access members of this structure with atomic functions.::Done::+1::Since the `_Py_atomic` types are not used anymore, can you add comments mentioning that these fields must be accessed using atomic ops?::Done!::```suggestion /* Speed up sigcheck() when none tripped. is_tripped should be accessed using atomic ops. */ ```::Nit :-) ```suggestion // tripped and func should be accessed using atomic ops. ```::",Donghee Na,5110323,401,10,26,27,3,0,a7474421bb379e036dd131493bef08cb950a77ed::544fe847140aea1f42a1cd150776ff7baeecdbf5::86b97a5a857bdcbeaddf0edbcedcfd369c238f13::4a8c0b3cec61f36b5358232857c063d20cfafb88::3696f01993c6ced3fa84a7eebeea2ea0aab7451a::e19a4378b4f572458940b65093b2d5e9d96d37e8::bb3dae2003e4569e561814f310b01e62c740d9a2::0750bbbbb6676a225f4037624b2fbd6504549f72::4d6e5ea85b36b123522d444add58cd9d39827c12::3610ae674a5faa88183e31653e7d539891cc5bba::
https://api.github.com/repos/python/cpython,110479,backport-3.11-win-sqlite-3.43.1::3.11,0,merged,,(cherry picked from commit 201dc11aeb4699de3c5ebaea9798796c30087bcc) Co-authored-by: blurb-it[bot] <43283697+blurb-it[bot]@users.noreply.github.com> Co-authored-by: Erlend E. Aasland <erlend@python.org> <!-- gh-issue-number: gh-109286 --> * Issue: gh-109286 <!-- /gh-issue-number --> ::,Erlend E. Aasland,13780613,72,1,4,3,4,0,78fe26b7ce856685379e6bdfa060265f5b303446::
https://api.github.com/repos/python/cpython,110478,backport-201dc11-3.12::3.12,0,merged,,(cherry picked from commit 201dc11aeb4699de3c5ebaea9798796c30087bcc) Co-authored-by: jtranquilli <76231120+jtranquilli@users.noreply.github.com> Co-authored-by: blurb-it[bot] <43283697+blurb-it[bot]@users.noreply.github.com> Co-authored-by: Erlend E. Aasland <erlend@python.org> <!-- gh-issue-number: gh-109286 --> * Issue: gh-109286 <!-- /gh-issue-number --> ::,Miss Islington (bot),31488909,73,1,4,3,4,0,2bb2c0a242462294c0336dd26febaaae3ab4b9ee::
https://api.github.com/repos/python/cpython,110477,gh-109693::main,0,closed,skip news::,"<!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-109693 --> * Issue: gh-109693 <!-- /gh-issue-number --> ::",Donghee Na,5110323,401,2,2,3,1,0,0616eafa2e440ab81065bf966348ad8dc8217e30::ade5b198b778e992f0a2ca40a0e74e3b1ab6532e::
https://api.github.com/repos/python/cpython,110476,curses-form::main,0,closed,awaiting review::,"<!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> ::",Chris Dorsman,39407105,0,4,0,0,0,0,3cab6d867e2fab56fe09afe1be3cd18fb80c3762::00a94108b27c81c904afcd649ebbeba7863e0899::c95e4b0367881f23b0aec51a121be32472bad148::e9c79f54a9a665afa3523ce1cf29a2b64682dbf1::
https://api.github.com/repos/python/cpython,110475,isolate-datetime/part1-establish-global-state::main,0,merged,skip news::,"- Establish global state - Put singletons in global state <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-71587 --> * Issue: gh-71587 <!-- /gh-issue-number --> ::I would prefer a name like get_datetime_state().::I suggest to rename to `datetime_epoch` or even just `epoch`.::I suggest to rename to `timezone_utc` or just `utc`.::```suggestion static datetime_state _global_datetime_state; ```::Yeah, since we're moving these, we could just as well shorten their names.::Why? It's file local.::I suggest `tz_utc`.::Well, timezone is implied, so `utc` is fine.::I prefer to use `GLOBAL_STATE` for now, for the following reasons: - It is a reminder that we're using global state, not module state - It is easy to grep for when we start converting global state to module state::It helps me in gdb when I debug C files with same names :-) I can inspect different variables without having to to go a _datetime frame.::Makes sense; you convinced me :) ::I don't think that ""interned"" is correct or important here. But it would be useful to mention its value: ``` datetime.datetime(1970, 1, 1, tzinfo=datetime.timezone.utc) ``` You may mention that it's also the Unix epoch ;-) https://en.wikipedia.org/wiki/Unix_time::I suppose that you will soon move it somewhere else, not make it ""global"", but maybe ""per interpreter"". I suggest a name which doesn't say ""global"". I suggest: ""get_datetime_state()"". It may make following changes shorter.::Please add `utc = NULL` to make it more explicit that st->utc becomes the new owner the reference.::I deliberately did not alter the comments. I'm not sure it matters to remove ""interned"" or not; as you say, it is not important. Clarifying that ""epoch"" is the ""Unix epoch"" is ok, although I'd expect most C developers to be familiar with that term.::Better to use `Py_SETREF`. ```suggestion Py_SETREF(st->utc, utc); ```::Well, I disagree; I think it is important to communicate that this is not module state. Perhaps the macro can be named `STATIC_STATE` instead. It communicates status quo perfectly: - state is stored in a static global variable - state is fetched using a macro::Oh, of course; that won't work 😆 ::There are multiple ""epochs"" :-) https://en.wikipedia.org/wiki/Epoch_(computing)#Notable_epoch_dates_in_computing::Ok, as you want. It was just a suggestion.::Fixed again.::Apparently, now exec function has two different parts: * First part uses return -1 * Second part initializes the static state and uses goto to make sure that the state always stays in a consistent state: either fully initialized, or cleared I suggest to split the function in two parts (create a subfunction). I don't think that a second PR is needed. Maybe just add a second _datetime_init_state() function?::Sure, we can bake it into this PR. I'll get to it later tonight.::I added some helpers in a9e8d1ab544add7db66e85f31e9dfe9afd736474 (`init_state` and `create_timezone_from_delta`). Initialisation should now be slightly more robust than before, unless I missed something :)::If we want to initialise the state members in the order they are declared, we'll have to move this. However, the following comment will then need to be tweaked. I'm not sure it is worth it.::",Erlend E. Aasland,13780613,72,21,173,145,2,0,cacf1e84f7dd5091159bc6d96dde52c5cc587c2c::c2eba8fcf2be2ae0ca228baa6092c284fda2acfa::8d54ecdc4e71e6f7dcfbb0ee3d5aa9cbc729453a::360397a30f4f77abe01b4233fe88006f6d2b13b1::4f509f9fa586991db27a7d831ed9d552851c7f6d::6b14c8cac3bae3217e30fde5efd49d3e5fcb2cf0::2eb3315327f6d1de711fb8bc8309eb8ec236afeb::f5ede1e9bb477c1618dbb6b16c3a02982c77afc4::f6ac875cb302e90a58c921c3450891b4ba4f7149::713956903195bb798b0c3f58a5d103cb83f173be::26e6454b42c8f2fce1361840eafb65d81bf08d9b::227dd2c442c984899105a7136303b76c8e05732a::beb0977b0e1924f2eaa784fd5efd81b9b2136be2::8525be670cb410802c1a8d6da109e95360c8519e::6863f763c07909fa3e921e933d2ed68091b603a6::0738205d3fadf45b3c835e02614a0cd9fb10bbbf::c56b5e1fa7673705a1806abb8779058f1deca5e2::3ee48d295e8a36cd8f241b38b02dcff3e8c789bb::0a1d770d9e390aeb01e63b90d2b645b2c7db44a9::a9e8d1ab544add7db66e85f31e9dfe9afd736474::c3ba7fec5b5fa5d46d0af8f99a5ffd421d01de65::
https://api.github.com/repos/python/cpython,110474,backport-02cdaef-3.11::3.11,0,merged,docs::skip issue::skip news::,"""One problem with this is algorithm is that [...]"" -> ""One problem with this algorithm is that [...]"" (cherry picked from commit 02cdaefe9a5fe63bfe6584688a23b9a8229d57ac) Co-authored-by: InSync <122007197+InSyncWithFoo@users.noreply.github.com> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--110474.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::",Miss Islington (bot),31488909,73,1,1,1,1,0,22f2a90958bf8a02b5ff61ef75fbab8a9f032408::
https://api.github.com/repos/python/cpython,110473,backport-02cdaef-3.12::3.12,0,merged,docs::skip issue::skip news::,"""One problem with this is algorithm is that [...]"" -> ""One problem with this algorithm is that [...]"" (cherry picked from commit 02cdaefe9a5fe63bfe6584688a23b9a8229d57ac) Co-authored-by: InSync <122007197+InSyncWithFoo@users.noreply.github.com> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--110473.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::",Miss Islington (bot),31488909,73,1,1,1,1,0,92d329f2c87c4d3c64edb3c5931158e4e959c112::
https://api.github.com/repos/python/cpython,110472,backport-d023d41-3.11::3.11,0,merged,tests::skip news::,"For proc.stdin, get the size of the read end of the test pipe. Use subprocess context manager (""with proc:""). (cherry picked from commit d023d4166b255023dac448305270350030101481) Co-authored-by: Victor Stinner <vstinner@python.org> <!-- gh-issue-number: gh-110184 --> * Issue: gh-110184 <!-- /gh-issue-number --> ::",Miss Islington (bot),31488909,73,1,23,18,1,0,f6c2512f268e237ca2a417f967c36217b8b660d7::
https://api.github.com/repos/python/cpython,110471,backport-d023d41-3.12::3.12,0,merged,tests::skip news::,"For proc.stdin, get the size of the read end of the test pipe. Use subprocess context manager (""with proc:""). (cherry picked from commit d023d4166b255023dac448305270350030101481) Co-authored-by: Victor Stinner <vstinner@python.org> <!-- gh-issue-number: gh-110184 --> * Issue: gh-110184 <!-- /gh-issue-number --> ::",Miss Islington (bot),31488909,73,1,23,18,1,0,3257f00d0193aa9ffe3bbdc0104cf91cabaf1354::
https://api.github.com/repos/python/cpython,110470,gh-110437::main,0,merged,OS-windows::,"Related change to our release build is at https://github.com/python/release-tools/pull/63 There's no need for us to always override the DLLs, but it's useful to do it when building installers. <!-- gh-issue-number: gh-110437 --> * Issue: gh-110437 <!-- /gh-issue-number --> ::",Steve Dower,1693688,360,1,6,1,2,0,865a7fe4bfaf2d8e6ea5af26f05b4870f145e763::
https://api.github.com/repos/python/cpython,110465,test_pipesize_default::main,0,merged,tests::skip news::,"For proc.stdin, get the size of the read end of the pipe. Use subprocess context manager (""with proc:""). <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-110184 --> * Issue: gh-110184 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,1,23,18,1,0,f08aa06d4fc336e3af19dd895aa36c8d5f66db25::
https://api.github.com/repos/python/cpython,110464,support_ms_windows11::3.11,0,merged,skip issue::skip news::,"Add support.MS_WINDOWS constant (#110446) (cherry picked from commit e0c44377935de3491b2cbe1e5f87f8b336fdc922) (cherry picked from commit e188534607761af1f8faba483ce0b1e8578c73e5) <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> ::",Victor Stinner,194129,1148,1,27,22,10,0,709cb569de235bbc5b0a146cb56ddf57abbee88c::
https://api.github.com/repos/python/cpython,110461,issue-101100-getpass::main,0,merged,skip news::,"Before: ``` /Users/sobolev/Desktop/cpython/Doc/library/getpass.rst:45: WARNING: 'envvar' reference target not found: LNAME ``` I don't think that we need to document this Linux-specific variable. We don't document any other env vars from this function: ``` ~/Desktop/cpython  main ✗ » ag '.. envvar:: USER' Doc ~/Desktop/cpython  main ✗                                                              1 ⚠️ » ag '.. envvar:: LOG' Doc ``` But, they are pre-defined in Sphinx, I guess. But, not `LNAME`. So, just ignore it. <!-- gh-issue-number: gh-101100 --> * Issue: gh-101100 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--110461.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::",Nikita Sobolev,4660275,4663,1,1,2,2,1,83daea3df2e363ae3f98f6c8abadf20411dba083::
https://api.github.com/repos/python/cpython,110457,backport-a4baa9e-3.11::3.11,0,merged,,"Fix test_tools.test_freeze on FreeBSD: run ""make distclean"" instead of ""make clean"" in the copied source directory to remove also the ""python"" program. Other test_freeze changes: * Log executed commands and directories, and the current directory. * No longer uses make -C option to change the directory, instead use subprocess cwd parameter. (cherry picked from commit a4baa9e8ac62cac3ea6363b15ea585b1998ea1f9) Co-authored-by: Victor Stinner <vstinner@python.org> <!-- gh-issue-number: gh-103053 --> * Issue: gh-103053 <!-- /gh-issue-number --> ::",Miss Islington (bot),31488909,73,1,22,14,2,0,37fa69ae05631a8fd89ebceb701ca33856f7120b::
https://api.github.com/repos/python/cpython,110456,backport-a4baa9e-3.12::3.12,0,merged,,"Fix test_tools.test_freeze on FreeBSD: run ""make distclean"" instead of ""make clean"" in the copied source directory to remove also the ""python"" program. Other test_freeze changes: * Log executed commands and directories, and the current directory. * No longer uses make -C option to change the directory, instead use subprocess cwd parameter. (cherry picked from commit a4baa9e8ac62cac3ea6363b15ea585b1998ea1f9) Co-authored-by: Victor Stinner <vstinner@python.org> <!-- gh-issue-number: gh-103053 --> * Issue: gh-103053 <!-- /gh-issue-number --> ::",Miss Islington (bot),31488909,73,1,22,14,2,0,c13ff4727eb62cc75fff598f52883b795366dab2::
https://api.github.com/repos/python/cpython,110454,backport-a155f9f-3.11::3.11,0,merged,,"""make check-clean-src"" now also checks if the ""python"" program is found in the source directory: fail with an error if it does exist. (cherry picked from commit a155f9f3427578ca5706d27e20bd0576f0395073) Co-authored-by: Victor Stinner <vstinner@python.org> <!-- gh-issue-number: gh-103053 --> * Issue: gh-103053 <!-- /gh-issue-number --> ::",Miss Islington (bot),31488909,73,1,5,1,2,0,1af4cacd5a8d618880e8cad9ab32e57078ffe77c::
https://api.github.com/repos/python/cpython,110453,backport-a155f9f-3.12::3.12,0,merged,,"""make check-clean-src"" now also checks if the ""python"" program is found in the source directory: fail with an error if it does exist. (cherry picked from commit a155f9f3427578ca5706d27e20bd0576f0395073) Co-authored-by: Victor Stinner <vstinner@python.org> <!-- gh-issue-number: gh-103053 --> * Issue: gh-103053 <!-- /gh-issue-number --> ::",Miss Islington (bot),31488909,73,1,5,1,2,0,4131880b654272bc69aa80851d22a130c271f833::
https://api.github.com/repos/python/cpython,110452,support_ms_windows::3.12,0,merged,skip issue::skip news::,"(cherry picked from commit e0c44377935de3491b2cbe1e5f87f8b336fdc922) <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> ::",Victor Stinner,194129,1148,1,27,23,10,1,6ae21f90b66c162ca8c34ffdf2523c2d6585f59e::
https://api.github.com/repos/python/cpython,110451,fix_test_freeze::main,0,merged,,"Fix test_tools.test_freeze on FreeBSD: run ""make distclean"" instead of ""make clean"" in the copied source directory to remove also the ""python"" program. Other test_freeze changes: * Log executed commands and directories, and the current directory. * No longer uses make -C option to change the directory, instead use subprocess cwd parameter. <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-103053 --> * Issue: gh-103053 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,1,22,14,2,0,3a62cdbe040088509e4ce419bbc5954e28d2ef10::
https://api.github.com/repos/python/cpython,110449,makefile2::main,0,merged,,"""make check-clean-src"" now also checks if the ""python"" program is found in the source directory: fail with an error if it does exist. <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-103053 --> * Issue: gh-103053 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,1,5,1,2,0,fed2a24e7abc5705f55f14342bd33eba2179c628::
https://api.github.com/repos/python/cpython,110448,makefile::main,0,closed,needs backport to 3.11::needs backport to 3.12::,"On FreeBSD when Python is built out of tree, the ""python"" program was created in the source directory instead of build directory. Fix the Makefile to write the ""python"" program in the build directory. <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-103053 --> * Issue: gh-103053 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,1,8,1,2,0,d985a7113ed54f114c80d511c3876101ade70c7c::
https://api.github.com/repos/python/cpython,110447,freeze_buildbot2::main,0,closed,,"* No longer skip test_tools.test_freeze on buildbots. * test_freeze.py now logs executed commands and directories, and the current directory. * test_freeze.py no longer uses -C options make to change the directory. Use cwd parameter of subprocess instead. <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-103053 --> * Issue: gh-103053 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,1,18,13,2,0,b04d3fcdaafb5f6901945311633874f29a3f2904::
https://api.github.com/repos/python/cpython,110446,support_ms_windows::main,0,merged,skip issue::skip news::,"<!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> ::",Victor Stinner,194129,1148,1,22,33,15,1,9a9a0981dadf4b555998da20c0ec069ce11c40be::
https://api.github.com/repos/python/cpython,110445,backport-1328fa3-3.12::3.12,0,merged,tests::skip news::,test_builtin and test_socketserver no longer use signal.alarm() to implement a watchdog with a hardcoded timeout (2 and 60 seconds). Python test runner regrtest has two watchdogs: faulthandler and timeout on running worker processes. Tests using short hardcoded timeout can fail on slowest buildbots just because the timeout is too short. (cherry picked from commit 1328fa31fe9c72748fc6fd11d017c82aafd48a49) Co-authored-by: Victor Stinner <vstinner@python.org> <!-- gh-issue-number: gh-110393 --> * Issue: gh-110393 <!-- /gh-issue-number --> ::,Miss Islington (bot),31488909,73,1,0,9,2,0,f6efa000781228f4c289bfafeb87952807def8dc::
https://api.github.com/repos/python/cpython,110444,backport-1328fa3-3.11::3.11,0,merged,tests::skip news::,test_builtin and test_socketserver no longer use signal.alarm() to implement a watchdog with a hardcoded timeout (2 and 60 seconds). Python test runner regrtest has two watchdogs: faulthandler and timeout on running worker processes. Tests using short hardcoded timeout can fail on slowest buildbots just because the timeout is too short. (cherry picked from commit 1328fa31fe9c72748fc6fd11d017c82aafd48a49) Co-authored-by: Victor Stinner <vstinner@python.org> <!-- gh-issue-number: gh-110393 --> * Issue: gh-110393 <!-- /gh-issue-number --> ::,Miss Islington (bot),31488909,73,1,0,9,2,0,c4fcfcc40eea96aca71c3acae999968e92ed38ce::
https://api.github.com/repos/python/cpython,110443,backport-aaf297c-3.11::3.11,0,merged,tests::skip news::,"Replace os.kill() with proc.kill() which catchs PermissionError. Rewrite _kill_with_event(): * Use subprocess context manager (""with proc:""). * Use sleeping_retry() to wait until the child process is ready. * Replace SIGINT with proc.kill() on error. * Replace 10 seconds with SHORT_TIMEOUT to wait until the process is ready. * Replace 0.5 seconds with SHORT_TIMEOUT to wait for the process exit. (cherry picked from commit aaf297c048694cd9652790f8b74e69f7ddadfbde) Co-authored-by: Victor Stinner <vstinner@python.org> <!-- gh-issue-number: gh-109888 --> * Issue: gh-109888 <!-- /gh-issue-number --> ::",Miss Islington (bot),31488909,73,1,27,23,1,0,7058932787e843e2a30ea9ea7869d3ffb925494a::
https://api.github.com/repos/python/cpython,110442,backport-aaf297c-3.12::3.12,0,merged,tests::skip news::,"Replace os.kill() with proc.kill() which catchs PermissionError. Rewrite _kill_with_event(): * Use subprocess context manager (""with proc:""). * Use sleeping_retry() to wait until the child process is ready. * Replace SIGINT with proc.kill() on error. * Replace 10 seconds with SHORT_TIMEOUT to wait until the process is ready. * Replace 0.5 seconds with SHORT_TIMEOUT to wait for the process exit. (cherry picked from commit aaf297c048694cd9652790f8b74e69f7ddadfbde) Co-authored-by: Victor Stinner <vstinner@python.org> <!-- gh-issue-number: gh-109888 --> * Issue: gh-109888 <!-- /gh-issue-number --> ::",Miss Islington (bot),31488909,73,1,27,23,1,0,da3ed8028ec99606dd6c9f6aac2bf26c6b434fec::
https://api.github.com/repos/python/cpython,110441,is_finalizing_stable_abi::main,0,merged,skip news::,"<!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-110397 --> * Issue: gh-110397 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--110441.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::",Victor Stinner,194129,1148,1,9,2,6,0,f40994922e161a58e6eabf353a617e3d8d9550bc::
https://api.github.com/repos/python/cpython,110440,backport-350d89b-3.11::3.11,0,merged,skip news::,"gh-110167: Increase support.LOOPBACK_TIMEOUT to 10 seconds (GH-110413) Increase support.LOOPBACK_TIMEOUT from 5 to 10 seconds. Also increase the timeout depending on the --timeout option. For example, for a test timeout of 40 minutes (ARM Raspbian 3.x), use LOOPBACK_TIMEOUT of 20 seconds instead of 5 seconds before. (cherry picked from commit 350d89b79588ebd140c3987cc05e3719ca17a973) Co-authored-by: Victor Stinner <vstinner@python.org> (cherry picked from commit 0db2f1475e6539e1954e1f8bd53e005c3ecd6a26)::",Miss Islington (bot),31488909,73,1,11,14,2,0,649add4b1472851fb8535703864b7ebb1852206e::
https://api.github.com/repos/python/cpython,110439,backport-fb6c4ed-3.11::3.11,0,merged,skip news::,"""make regen-pegen"" now creates a temporary file called ""parser.c.new"" instead of ""parser.new.c"". Previously, if ""make clinic"" was run in parallel with ""make regen-all"", clinic may try but fail to open ""parser.new.c"" if the temporay file was removed in the meanwhile. (cherry picked from commit fb6c4ed2bbb2a867d5f0b9a94656e4714be5d9c2) Co-authored-by: Victor Stinner <vstinner@python.org> <!-- gh-issue-number: gh-110429 --> * Issue: gh-110429 <!-- /gh-issue-number --> ::",Miss Islington (bot),31488909,73,1,2,2,1,0,f72f3c2bdc1b62d7cf87cc7868c14ab339d3fe43::
https://api.github.com/repos/python/cpython,110438,backport-fb6c4ed-3.12::3.12,0,merged,skip news::,"""make regen-pegen"" now creates a temporary file called ""parser.c.new"" instead of ""parser.new.c"". Previously, if ""make clinic"" was run in parallel with ""make regen-all"", clinic may try but fail to open ""parser.new.c"" if the temporay file was removed in the meanwhile. (cherry picked from commit fb6c4ed2bbb2a867d5f0b9a94656e4714be5d9c2) Co-authored-by: Victor Stinner <vstinner@python.org> <!-- gh-issue-number: gh-110429 --> * Issue: gh-110429 <!-- /gh-issue-number --> ::",Miss Islington (bot),31488909,73,1,2,2,1,0,73825041d65fa5fabc849612dcdede4676452776::
https://api.github.com/repos/python/cpython,110436,backport-d257479-3.11::3.11,0,merged,docs::skip news::,(cherry picked from commit d257479c2f6cbf3b69ed90062f00635832e4bf91) Co-authored-by: Bradley Reynolds <bradley.reynolds@darbia.dev> <!-- gh-issue-number: gh-110383 --> * Issue: gh-110383 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--110436.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::,Miss Islington (bot),31488909,73,1,1,1,1,0,95fe0babb4f7e105ce60aa50f094a0e3f7aa3c0e::
https://api.github.com/repos/python/cpython,110435,backport-d257479-3.12::3.12,0,merged,docs::skip news::,(cherry picked from commit d257479c2f6cbf3b69ed90062f00635832e4bf91) Co-authored-by: Bradley Reynolds <bradley.reynolds@darbia.dev> <!-- gh-issue-number: gh-110383 --> * Issue: gh-110383 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--110435.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::,Miss Islington (bot),31488909,73,1,1,1,1,0,5834e66e22ea50005bcd318cb9b62d1ca70b701b::
https://api.github.com/repos/python/cpython,110434,patch-1::main,0,merged,docs::skip news::,"Continues #110383, swaps 'the all' -> 'all the' in socket docs Reported in https://mail.python.org/archives/list/docs@python.org/thread/T7BAG3ROH3YT3YTAWCUE7CMZ2FI6VO72/ <!-- gh-issue-number: gh-110383 --> * Issue: gh-110383 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--110434.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::",Bradley Reynolds,54628770,24,1,1,1,1,0,45909898421e545161f328a9dca402b8438397cf::
https://api.github.com/repos/python/cpython,110433,fix_regen_pegen::main,0,merged,skip news::,"""make regen-pegen"" now creates a temporary file called ""parser.c.new"" instead of ""parser.new.c"". Previously, if ""make clinic"" was run in parallel with ""make regen-all"", clinic may try but fail to open ""parser.new.c"" if the temporay file was removed in the meanwhile. <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-110429 --> * Issue: gh-110429 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,1,2,2,1,0,4d3810b62dd11d19719adfa0f667b44fabff4d00::
https://api.github.com/repos/python/cpython,110431,backport-5eae8dc-3.11::3.11,0,merged,skip news::,Don't measure the CI performance: don't fail if cond.wait_for() takes longer than 1 second on a slow CI. (cherry picked from commit 5eae8dc2cb832af6ae1ee340fb0194107fe3bd6e) Co-authored-by: Victor Stinner <vstinner@python.org> <!-- gh-issue-number: gh-109840 --> * Issue: gh-109840 <!-- /gh-issue-number --> ::,Miss Islington (bot),31488909,73,1,3,3,1,0,1d8c6fb5714cc21b98891e9b5810cab85feb9672::
https://api.github.com/repos/python/cpython,110430,backport-5eae8dc-3.12::3.12,0,merged,skip news::,Don't measure the CI performance: don't fail if cond.wait_for() takes longer than 1 second on a slow CI. (cherry picked from commit 5eae8dc2cb832af6ae1ee340fb0194107fe3bd6e) Co-authored-by: Victor Stinner <vstinner@python.org> <!-- gh-issue-number: gh-109840 --> * Issue: gh-109840 <!-- /gh-issue-number --> ::,Miss Islington (bot),31488909,73,1,3,3,1,0,ad0be9b5daf7af90ba61976aa087113a543bc84c::
https://api.github.com/repos/python/cpython,110428,test_waitfor_timeout::main,0,merged,tests::skip news::,"Don't measure the CI performance: don't fail if cond.wait_for() takes longer than 1 second on a slow CI. <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-109840 --> * Issue: gh-109840 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,1,3,3,1,0,544be59b1cb3ea23ccf3489be8f4a9b856941722::
https://api.github.com/repos/python/cpython,110427,loopback_timeout12::3.12,0,merged,skip news::,"Increase support.LOOPBACK_TIMEOUT from 5 to 10 seconds. Also increase the timeout depending on the --timeout option. For example, for a test timeout of 40 minutes (ARM Raspbian 3.x), use LOOPBACK_TIMEOUT of 20 seconds instead of 5 seconds before. (cherry picked from commit 0db2f1475e6539e1954e1f8bd53e005c3ecd6a26) <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-110167 --> * Issue: gh-110167 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,1,11,14,2,0,d401794e7413ac25e0e7d26737a2191279d524b4::
https://api.github.com/repos/python/cpython,110424,backport-318f5df-3.11::3.11,0,merged,tests::,"Fix a deadlock in test_socket when server fails with a timeout but the client is still running in its thread. Don't hold a lock to call cleanup functions in doCleanups(). One of the cleanup function waits until the client completes, whereas the client could deadlock if it called addCleanup() in such situation. doCleanups() is called when the server completed, but the client can still be running in its thread especially if the server failed with a timeout. Don't put a lock on doCleanups() to prevent deadlock between addCleanup() called in the client and doCleanups() waiting for self.done.wait of ThreadableTest._setUp(). (cherry picked from commit 318f5df27109ff8d2519edefa771920a0ec62b92) Co-authored-by: Victor Stinner <vstinner@python.org> <!-- gh-issue-number: gh-110167 --> * Issue: gh-110167 <!-- /gh-issue-number --> ::",Miss Islington (bot),31488909,73,1,12,5,2,0,1eb2ceda9642d35180a2ff4e1bc825686c848142::
https://api.github.com/repos/python/cpython,110423,backport-318f5df-3.12::3.12,0,merged,tests::,"Fix a deadlock in test_socket when server fails with a timeout but the client is still running in its thread. Don't hold a lock to call cleanup functions in doCleanups(). One of the cleanup function waits until the client completes, whereas the client could deadlock if it called addCleanup() in such situation. doCleanups() is called when the server completed, but the client can still be running in its thread especially if the server failed with a timeout. Don't put a lock on doCleanups() to prevent deadlock between addCleanup() called in the client and doCleanups() waiting for self.done.wait of ThreadableTest._setUp(). (cherry picked from commit 318f5df27109ff8d2519edefa771920a0ec62b92) Co-authored-by: Victor Stinner <vstinner@python.org> <!-- gh-issue-number: gh-110167 --> * Issue: gh-110167 <!-- /gh-issue-number --> ::",Miss Islington (bot),31488909,73,1,12,5,2,0,4877266377ed541581a7e8932e21ff06f8c061c2::
https://api.github.com/repos/python/cpython,110422,disable_gil_win::main,0,merged,tests::skip news::,"Use ""t"" in the expected tag for `--disable-gil` builds in test_tagged_suffix. <!-- gh-issue-number: gh-110119 --> * Issue: gh-110119 <!-- /gh-issue-number --> ::This code looks too complicated for what it is. I suggest: ```py abi_flags = ""t"" if sysconfig.get_config_var(""Py_NOGIL"") else """" ver = sys.version_info platform = re.sub('[^a-zA-Z0-9]', '_', get_platform()) expected_tag = f"".cp{ver.major}{ver.minor}{abi_flags}-{platform}.pyd"" ```::Now I'm confused. On Windows, `sys.abiflags` doesn't exist? It doesn't look practical that `sys.abiflags` doesn't exist to look for PYD files :-( Maybe we should now add this flag?::The awkward bit is that debug libraries are indicated as a `_d` prefix like, `foo_d.cp313t-win_amd64.pyd` instead of as part of the abiflags. Still might be useful.::We can maybe change that in Python 3.13 to make it consistent.::",Sam Gross,655866,1625,2,5,2,1,0,2ebec1f9c86eefc24ee8268b1508772c327eda75::c6b791baa59672704bce5832f56121713d016f1b::
https://api.github.com/repos/python/cpython,110421,test_os_kill_event::main,0,merged,tests::skip news::,"Replace os.kill() with proc.kill() which catchs PermissionError. Rewrite _kill_with_event(): * Use subprocess context manager (""with proc:""). * Use sleeping_retry() to wait until the child process is ready. * Replace SIGINT with proc.kill() on error. * Replace 0.5 seconds with SHORT_TIMEOUT. <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-109888 --> * Issue: gh-109888 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,1,27,23,1,0,5808d46f8520f6457c69a9658e281414fc13963b::
https://api.github.com/repos/python/cpython,110420,costas--py3.12-datetime::3.12,0,closed,awaiting review::,"datetime has types and various singletons defined as static global variables. `_datetime_exec()` has an initialisation step that writes into those structs on module import. If the module is imported by the main interpreter and a sub-interpreter, or by two sub-interpreters, then the process crashes. This is a first draft MR that: - Moves the global bits of state into a DateTimeState struct / _PyModule_GetState - Changes module initialisation to use PyModuleDef_Init with Py_MOD_PER_INTERPRETER_GIL_SUPPORTED - Changes the type definitions to use the more modern slots style <!-- gh-issue-number: gh-110415 --> * Issue: gh-110415 <!-- /gh-issue-number --> ::",,10870080,0,9,602,544,3,0,c82d32aacf8665ecafb9c78aa998de38b0fd0397::89cbd783dd8e4e25a141e8d0ea399202714515d3::e1603ff2ef0bd002a0017bb4ab06f83373ac9622::1b4c96a907eccd0e62a8edf1b87dc0dbe5e81cd9::94b3788693153b10106860e221ed1146f1e1849f::681d7c86c8f5786b420db749d05fcb0107b8580f::68c7ec1b0988e8207f281eedf902d93940176091::2093f8a70e22df650a7f2d5ce3a4bb723ca898b8::3f9fd1eb00c4b212d6a67be8ffcf8421400d131b::
https://api.github.com/repos/python/cpython,110419,override::main,0,merged,skip news::,"The fix here is based on fully buying into the idea that `inst` is just syntactic sugar for an `op` and `macro`, and the principle that one does not ever override a macro, one overrides only the definition of an op; `override inst` is equivalent to `override op`. One can freely override an op (whether originally defined via `op` or implicitly via `inst`) that may be part of one or several macros (explicit or implicit), and the override will be reflected in the generated contents of each macro. I think this approach makes sense; since explicitly-defined macros have never supported overrides, it's not clear why we should try to special-case some concept of overriding implicitly-defined macros. I also _think_ this approach should meet all our actual override needs; if we discover that I'm wrong, we can propose a later PR to generally add support for macro overrides. This also implies some behavioral changes. The idea of a ""placeholder comment"" for overrides, or trying to emit the override contents later in the output, no longer makes much sense, since ops do not directly appear in the output, only macros do, and the macro itself is not overridden. We could add an ""// override"" comment in some form; I didn't do that here and don't think it's needed. If you are trying to debug why your generated cases look the way they do, you should be enabling `#line` directives, which will give you much clearer provenance details. <!-- gh-issue-number: gh-109287 --> * Issue: gh-109287 <!-- /gh-issue-number --> ::",Carl Meyer,61586,824,1,37,31,4,0,bb406f038d75d896107c62032a6e722e2d0e260d::
https://api.github.com/repos/python/cpython,110416,test_socket_deadlock::main,0,merged,tests::,"Fix a deadlock in test_socket when server fails with a timeout but the client is still running in its timeout. Don't hold a lock to call cleanup functions in doCleanups(). One of the cleanup function waits until the client completes, whereas the client could deadlock if it called addCleanup() in such situation. doCleanups() is called when the server completed, but the client can still be running in its thread especially if the server failed with a timeout. Don't put a lock on doCleanups() to prevent deadlock between addCleanup() called in the client and doCleanups() waiting for self.done.wait of ThreadableTest._setUp(). <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-110167 --> * Issue: gh-110167 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,1,12,5,2,0,98ac8981de7b1818f0d1d7042878399a7d966754::
https://api.github.com/repos/python/cpython,110414,backport-a136206-3.12::3.12,0,merged,docs::skip issue::skip news::,Fix typo in docs (cherry picked from commit a13620685f68957c965fca89343a0e91f95f1bab) Co-authored-by: Harmen Stoppels <harmenstoppels@gmail.com> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--110414.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::,Miss Islington (bot),31488909,73,1,1,2,1,0,2a3ce31f287b9df52c48257beb2b6c8035707242::
https://api.github.com/repos/python/cpython,110413,loopback_timeout::main,0,merged,skip news::,"Increase support.LOOPBACK_TIMEOUT from 5 to 10 seconds. Also increase the timeout depending on the --timeout option. For example, for a test timeout of 40 minutes (ARM Raspbian 3.x), use LOOPBACK_TIMEOUT of 20 seconds instead of 5 seconds before. <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-110167 --> * Issue: gh-110167 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,1,3,7,2,1,11ce425ebd37cad957c39df9b0183107b8639537::
https://api.github.com/repos/python/cpython,110410,backport-a973bf0-3.11::3.11,0,merged,docs::skip news::,Make 0.2 second plural (cherry picked from commit a973bf0f97e55ace9eab100f9eb95d7eedcb28ac) Co-authored-by: Towster15 <105541074+Towster15@users.noreply.github.com> <!-- gh-issue-number: gh-110383 --> * Issue: gh-110383 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--110410.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::,Miss Islington (bot),31488909,73,1,1,1,1,0,836fafc964cfa9290c4dbcb7a8cf09fdfdb34c1e::
https://api.github.com/repos/python/cpython,110409,backport-a973bf0-3.12::3.12,0,merged,docs::skip news::,Make 0.2 second plural (cherry picked from commit a973bf0f97e55ace9eab100f9eb95d7eedcb28ac) Co-authored-by: Towster15 <105541074+Towster15@users.noreply.github.com> <!-- gh-issue-number: gh-110383 --> * Issue: gh-110383 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--110409.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::,Miss Islington (bot),31488909,73,1,1,1,1,0,ea696410dc85e79a8a95941e46dee84e6f8e3aad::
https://api.github.com/repos/python/cpython,110407,fix-#110383-timeit-spelling::main,0,merged,docs::skip news::,"<!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> https://mail.python.org/archives/list/docs@python.org/thread/CQON3MGDEN6CY5KFXXBY4FTCG2FIIDTM/ In the docs, https://docs.python.org/3/library/timeit.html#timeit.Timer.autorange, the last line of the first paragraph read: > until the time taken is at least 0.2 second. This pull request changes that to read: > until the time taken is at least 0.2 seconds. Mentioned as the second-to-last issue in #110383 <!-- gh-issue-number: gh-110383 --> * Issue: gh-110383 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--110407.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::",,105541074,0,2,1,1,1,0,c6c02adaa98dc9d5178fd248daf5bf7e9919aa55::3b8b36cd8ab9d2f744e253e7f88f65bb9daada0e::
https://api.github.com/repos/python/cpython,110406,backport-e37d455-3.11::3.11,0,merged,tests::skip news::,"NetworkConnectionAttributesTest of test_socket now always declare the 'cli' attribute, so clientTearDown() cannot fail with AttributeError. (cherry picked from commit e37d4557c3de0476e76ca4b8a1cc8d2566b86c79) Co-authored-by: Victor Stinner <vstinner@python.org> <!-- gh-issue-number: gh-110391 --> * Issue: gh-110391 <!-- /gh-issue-number --> ::",Miss Islington (bot),31488909,73,1,3,1,1,0,b3979e71ec3274de5d93fee20d144e9c53adeb87::
https://api.github.com/repos/python/cpython,110405,backport-e37d455-3.12::3.12,0,merged,tests::skip news::,"NetworkConnectionAttributesTest of test_socket now always declare the 'cli' attribute, so clientTearDown() cannot fail with AttributeError. (cherry picked from commit e37d4557c3de0476e76ca4b8a1cc8d2566b86c79) Co-authored-by: Victor Stinner <vstinner@python.org> <!-- gh-issue-number: gh-110391 --> * Issue: gh-110391 <!-- /gh-issue-number --> ::",Miss Islington (bot),31488909,73,1,3,1,1,0,59913fca32ca3959383c37737fcef02fa14f0867::
https://api.github.com/repos/python/cpython,110404,patch-2::main,0,merged,docs::skip issue::skip news::,<!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--110404.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::,Harmen Stoppels,194764,141,1,1,2,1,1,f54343952db852b82df1227d0dfec9b86d3ef331::
https://api.github.com/repos/python/cpython,110403,update-Windows-SQLite::main,0,merged,,Separated update for macOS and Windows as requested. Only the files implicated in the update for the Windows system have been changed here. <!-- gh-issue-number: gh-109286 --> * Issue: gh-109286 <!-- /gh-issue-number --> ::```suggestion Update Windows installer to use SQLite 3.43.1. ```::,,76231120,0,4,4,3,4,1,cee0220b06f7d40fe38b0b79fcc5a685336bca6d::9a452c966bcd155819fa3c72a92a463a8bda7148::9a5e592a447bf9008add0c8e7b3a7d6a74f1dccc::243f3a1f842fa70fa8e6fe0f7955a22a531a739f::
https://api.github.com/repos/python/cpython,110402,tier2-trace-too-short::main,0,merged,skip news::,Adds a simple counter for when the trace is too short. <!-- gh-issue-number: gh-109329 --> * Issue: gh-109329 <!-- /gh-issue-number --> ::,Michael Droettboom,38294,409,1,5,0,4,0,74f013c5f61bb411e41b76bb2be0a830ffd0bf9c::
https://api.github.com/repos/python/cpython,110401,test_socket_cli::main,0,merged,tests::skip news::,"NetworkConnectionAttributesTest of test_socket now always declare the 'cli' attribute, so clientTearDown() cannot fail with AttributeError. <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-110391 --> * Issue: gh-110391 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,1,3,1,1,0,1402a1ffde10ab0713290bc7215b1b5134d3a3aa::
https://api.github.com/repos/python/cpython,110400,remove_hardcoded_timeout::main,0,merged,tests::skip news::,"test_builtin and test_socketserver no longer use signal.alarm() to implement a watchdog with a hardcoded timeout (2 and 60 seconds). Python test runner regrtest has two watchdogs: faulthandler and timeout on running worker processes. Tests using short hardcoded timeout can fail on slowest buildbots just because the timeout is too short. <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-110393 --> * Issue: gh-110393 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,1,0,9,2,0,b91a7f90b810f529869055d671d1cd2bf4cf54f1::
https://api.github.com/repos/python/cpython,110399,update-Windows-SQLite-installer::main,0,closed,awaiting review::,Separated update for macOS and Windows as requested. <!-- gh-issue-number: gh-109286 --> * Issue: gh-109286 <!-- /gh-issue-number --> ::,,76231120,0,6,14,13,5,0,4052bc9647217efa2c61f3c89fa0980db77d563d::ddf8d68e0e882129e5769d1479b0bee89d504b09::c659e4c5af231a0a9b23a37442ecf30d30e3b699::ef003dbcd2e3e89a6bbba47e2dd9964087a6923d::3e9ae8fd4a980bacd707e3c1f810e39c42d0e5f6::9ec3ded32fcb922c2b2f12748fb014b0df2d9e9f::
https://api.github.com/repos/python/cpython,110396,backport-cc389ef-3.12::3.12,0,merged,,(cherry picked from commit cc389ef627b2a486ab89d9a11245bef48224efb1) Co-authored-by: Pablo Galindo Salgado <Pablogsal@gmail.com> Signed-off-by: Pablo Galindo <pablogsal@gmail.com> <!-- gh-issue-number: gh-110259 --> * Issue: gh-110259 <!-- /gh-issue-number --> ::,Miss Islington (bot),31488909,73,1,128,10,5,0,9238088adca19ac4e9501d5a23712244f9ea2c44::
https://api.github.com/repos/python/cpython,110394,test_tty::main,0,merged,tests::,<!-- gh-issue-number: gh-110388 --> * Issue: gh-110388 <!-- /gh-issue-number --> ::,Serhiy Storchaka,3659035,401,4,81,0,2,0,bb70322bf5ae5cf9ed7b5cf41ec0e0b92b66d643::80b3f21c38d2ac6b9bae22fb453453ac4d6104bf::99858f0e307895da17386187df6dd8610a6df7a5::b18ef0510336e4d0c46adfa2a937ed5ded255a9d::
https://api.github.com/repos/python/cpython,110390,backport-2bbbab2-3.11::3.11,0,merged,,(cherry picked from commit 2bbbab212fb10b3aeaded188fb5d6c001fb4bf74) Co-authored-by: Nikita Sobolev <mail@sobolevn.me> Co-authored-by: Erlend E. Aasland <erlend@python.org> <!-- gh-issue-number: gh-110365 --> * Issue: gh-110365 <!-- /gh-issue-number --> ::,Miss Islington (bot),31488909,73,1,28,13,2,0,9904cdcd82b7cccf652c2d42a4add16445c328ee::
https://api.github.com/repos/python/cpython,110389,backport-2bbbab2-3.12::3.12,0,merged,,(cherry picked from commit 2bbbab212fb10b3aeaded188fb5d6c001fb4bf74) Co-authored-by: Nikita Sobolev <mail@sobolevn.me> Co-authored-by: Erlend E. Aasland <erlend@python.org> <!-- gh-issue-number: gh-110365 --> * Issue: gh-110365 <!-- /gh-issue-number --> ::,Miss Islington (bot),31488909,73,1,28,13,2,0,2ffcffaac7911c7e66290c077e804576a21705ff::
https://api.github.com/repos/python/cpython,110387,regrtest_asan::main,0,merged,skip news::,"Set ASAN_OPTIONS=""handle_segv=0"" env var to run the test. <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-110367 --> * Issue: gh-110367 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,1,20,9,3,0,a82277282097e3451d03444a6ded33539cd6857e::
https://api.github.com/repos/python/cpython,110386,test_termios::main,0,merged,tests::,"<!-- gh-issue-number: gh-81002 --> * Issue: gh-81002 <!-- /gh-issue-number --> ::You use `setUp` in `test_tty`. Is it intentional?::Some systems might not have it: `.. availability:: Unix, not Emscripten, not WASI.` Other tests use something like `@unittest.skipUnless(hasattr(os, 'openpty'), 'need os.openpty()')`::It has less tests. Actually, I am not sure what is better.::Are there platforms that have termios, but not os.open? I'll add the guard, but first I want to run tests on buildbots to see what other issues can be here.::This test crashed before #110366.::There is one such platform: WebAssembly.::",Serhiy Storchaka,3659035,401,13,221,0,2,0,b83449935c1dcec2eddc375d480ee5809b1f8339::01fc9b58b3230b65ce668adc8dd264f7f5689783::cfa146f47dc7f106861042e46660411008d2dd29::80f1310a28f28851bab5e5d31f35ed1e0434d47f::46c54761a2957a605d5c4e3e115206cc65130a22::d40ce386d88a0149af3f1e01f4d9a28a8c84dac4::8cf5e005ce231290c71bc082914c8823089a3e58::d616a93c01a82acec6f4957749dcd1b5d3a78ecf::41df652ab7a1e1477de7718e2ba06770428dddd2::22b71da352576895f56e1e5d23ada5f51d25bf88::55d373548f2f872c7169455e61af115ad88bd496::8d15feae53311e2bb8c5c1ac5e240f29e8e2aa1e::ed89bbf968b2608d999942732b553a3fe0d44ceb::
https://api.github.com/repos/python/cpython,110379,issue-110378::main,0,merged,tests::skip news::,After the change: ``` ~/Desktop/cpython  main ✗ » ./python.exe -m test test_contextlib_async Using random seed 451969388 0:00:00 load avg: 1.34 Run 1 test sequentially 0:00:00 load avg: 1.34 [1/1] test_contextlib_async == Tests result: SUCCESS == 1 test OK. Total duration: 99 ms Total tests: run=58 Total test files: run=1/1 Result: SUCCESS ``` ``` ~/Desktop/cpython  main ✗ » ./python.exe Lib/test/test_contextlib_async.py .......................................................... ---------------------------------------------------------------------- Ran 58 tests in 0.063s OK ``` <!-- gh-issue-number: gh-110378 --> * Issue: gh-110378 <!-- /gh-issue-number --> ::,Nikita Sobolev,4660275,4663,1,5,51,1,0,cccdac24b67541d22c8364d913e1cb7c8f3b46cd::
https://api.github.com/repos/python/cpython,110377,backport-313aa86-3.12::3.12,0,merged,docs::skip issue::skip news::,(cherry picked from commit 313aa861ce23e83ca64284d97c1dac234c9def7c) Co-authored-by: Benjamin Peterson <benjamin@python.org> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--110377.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::,Miss Islington (bot),31488909,73,1,1,1,1,0,1fdd653f7f349361f03312c5a61ced21561eee30::
https://api.github.com/repos/python/cpython,110376,duplicate-word::main,0,merged,docs::skip issue::skip news::,"<!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--110376.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::",Benjamin Peterson,219470,506,1,1,1,1,0,9361161650d7c6e557d43f53a0bb230a58ad953f::
https://api.github.com/repos/python/cpython,110374,macOS-SQLite-installer-upgrade::main,0,closed,awaiting core review::needs backport to 3.11::needs backport to 3.12::,"I updated the macOS SQLite installer, all changes were made in the build-installer.py file. I'll be doing the Windows installer next in a separate PR as requested. <!-- gh-issue-number: gh-109286 --> * Issue: gh-109286 <!-- /gh-issue-number --> ::Please revert these style changes. _Only change line 362, 363, and 364._ See the following PRs for earlier SQLite version bumps; **your PR should look very similar to these**: - gh-104624 - gh-102998 - gh-98639::```suggestion Update macOS installer to use SQLite 3.43.1. ```::```suggestion extra_cflags=('-Os ' '-DSQLITE_ENABLE_FTS5 ' '-DSQLITE_ENABLE_FTS4 ' '-DSQLITE_ENABLE_FTS3_PARENTHESIS ' '-DSQLITE_ENABLE_RTREE ' '-DSQLITE_OMIT_AUTOINIT ' '-DSQLITE_TCL=0 ' ```::",,76231120,0,8,4,3,2,0,4052bc9647217efa2c61f3c89fa0980db77d563d::ddf8d68e0e882129e5769d1479b0bee89d504b09::c659e4c5af231a0a9b23a37442ecf30d30e3b699::ef003dbcd2e3e89a6bbba47e2dd9964087a6923d::3e9ae8fd4a980bacd707e3c1f810e39c42d0e5f6::ee7cf756422c41156e30e4946733c7f15d9c75d0::aaa2d52ee7b763b7232256e9ee08312f5cc9f6b7::a5b31ace51091a5d53d243d29b30bc612395f362::
https://api.github.com/repos/python/cpython,110372,backport-f786029-3.12::3.12,0,merged,docs::skip issue::skip news::,To avoid breaking downstream intersphinx via numpydoc (cherry picked from commit f7860295b16a402621e209871c8eaeeea16f464e) Co-authored-by: P. L. Lim <2090236+pllim@users.noreply.github.com> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--110372.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::,Miss Islington (bot),31488909,73,1,1,0,1,0,e87de289cae29abf2f58fc08d0a68db2b98d2cb2::
https://api.github.com/repos/python/cpython,110371,patch-1::main,0,merged,docs::skip issue::skip news::,"gh-103487: Reuse old `bltin-boolean-values` ref tag to avoid breaking downstream intersphinx via numpydoc The PR is opened as suggested in https://github.com/python/cpython/pull/103487/files#r1346336728 by @hauntsaninja close https://github.com/astropy/astropy/issues/15428 close https://github.com/numpy/numpydoc/issues/509 <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--110371.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::This might break people who've already adapted to the new link anchor. You can have them both, like this: ```suggestion .. _bltin-boolean-values: .. _typebool: ``` That would also mean that you wouldn't have to update `functions.rst`, you'd only have to update this file::Are people already using the new anchor only 2 days after release? But okay, I can try it your way. Thanks!::> Are people already using the new anchor only 2 days after release? No idea, but it seems possible! And this way means a smaller diff ;)::",P. L. Lim,2090236,98,4,1,0,1,0,558f91aee8a83235ede8bd432d4791d847896e1e::fcc23d874b9f77182f0f2b1334e7bbe3d98d55d8::f5d5aa68ed6ef0bb1efcbd8f009d2f01e4e73535::c855c70e90eaf735c132973df230feae2bdb798e::
https://api.github.com/repos/python/cpython,110368,regrtest_verbose3::main,0,merged,,"When using worker processes (-jN) with --verbose3 option, regrtest can now display the worker output even if a worker process does crash.  Previously, sys.stdout and sys.stderr were replaced and so the worker output was lost on a crash. <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-110367 --> * Issue: gh-110367 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,1,52,3,4,0,06c3e3108a249832a7634db6ab757a233f504124::
https://api.github.com/repos/python/cpython,110366,issue-110365::main,0,merged,,"@erlend-aasland we fixed several similar errors before, would you mind to take a look? <!-- gh-issue-number: gh-110365 --> * Issue: gh-110365 <!-- /gh-issue-number --> ::Common pattern is: ```suggestion if (item == -1 && PyErr_Occurred()) { \ ```::This never happens, isn't?::```suggestion during parsing integers from ``term`` list. ```::```suggestion } else { ```::I would consider to specialise the macro even more: ```suggestion #define SET_FROM_LIST(TYPE, VAR, LIST, N) do {  \ PyObject *item = PyList_GET_ITEM(LIST, N);  \ long num = PyLong_AsLong(item);             \ if (num == -1 && PyErr_Occurred()) {        \ return NULL;                            \ }                                           \ VAR = (TYPE)num;                            \ } while (0) SET_FROM_LIST(tcflag_t, mode.c_iflag, term, 0); SET_FROM_LIST(tcflag_t, mode.c_oflag, term, 1); SET_FROM_LIST(tcflag_t, mode.c_cflag, term, 2); SET_FROM_LIST(tcflag_t, mode.c_lflag, term, 3); SET_FROM_LIST(speed_t, ispeed, term, 4); SET_FROM_LIST(speed_t, ospeed, term, 5); #undef SET_FROM_LIST ```::I had a similar thought, but then my Rust background didn't allow me to overuse macros :)::I wish I had a Rust background!::My suggestion had bugs! 😆::I will fix them shortly. > I wish I had a Rust background! https://github.com/RustPython/RustPython 👀 ::A simple fix can be to simply declare the variables above the macro definition.::Nit: in general I try to avoid `l` as a variable name, since it can look very similar to `1` and `I`, depending the font.::I think you need to change this too: ```suggestion mode.c_cc[i] = (cc_t) lng; ``` Also, you can declare the variable in this inner scope. It does not have to be outside the for loop.::",Nikita Sobolev,4660275,4663,10,28,13,2,0,4d5ae6663203ff4ab646933d11a3aa57b772f3ed::d1d9d2a63c3901c3631ed8e51f919dca4e8031b0::693f95107ef92160feda8369fdac7ee0ef641075::33d86b2309f9d68ce114123f626dbc649fcba080::9f7c57d98a7b99d76c555cfd91370d69ea841145::b04ba927ed4fcd8d5a92bd256373f3ad8f2bbf84::100b15f556cd70aa1a037b0fb596527d5353d263::2a1a340e71a44af6411807e24045f6e4e5cd6035::914291afd076a968b0922203986f39b489623029::34e437bb73d698ccf0e47875e05ae3c24628d42f::
https://api.github.com/repos/python/cpython,110363,fix_ci_testopts::main,0,merged,tests::skip issue::skip news::,This allows individual resources to be disabled without having to explicitly re-enable all others. ::,Zachary Ware,6275069,117,1,11,7,2,0,b210bba9f134897d41ced23b3bebb9a4c29acd09::
https://api.github.com/repos/python/cpython,110361,ruff-rm-failed-to-parse-3.11::3.11,0,merged,skip issue::skip news::,"<!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> Backport of https://github.com/python/cpython/pull/110356. ::",Hugo van Kemenade,1324225,628,1,0,2,1,0,9e058eb8ac74880346ddc536669d0d648d228a96::
https://api.github.com/repos/python/cpython,110360,ruff-rm-failed-to-parse-3.12::3.12,0,merged,skip issue::skip news::,"<!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> Backport of https://github.com/python/cpython/pull/110356. ::",Hugo van Kemenade,1324225,628,1,0,2,1,0,5921ad10673be7d3cf94ca10e19e8bba2223ebed::
https://api.github.com/repos/python/cpython,110358,tier2-deopt::main,0,closed,awaiting review::skip news::,"This PR just provides the machinery; we still need to add support to the executors and to make the necessary calls when instrumenting. The implementation uses a [bloom filter](https://en.wikipedia.org/wiki/Bloom_filter). The advantage of a bloom filter is that it requires no coupling between the executors and the objects they depend on, plus it is simpler to implement and uses less memory than a precise mapping. I've chosen k = 6 and m = 256. This should give a low enough false positive rate for most cases. We want to keep the false positive rate very low, as spurious de-optimizations could be expensive. <!-- gh-issue-number: gh-109369 --> * Issue: gh-109369 <!-- /gh-issue-number --> ::",Mark Shannon,9448417,435,6,339,0,12,0,dd606ae1965e320a80e95dea46ca4fbb8b18284b::45c30d369ea9c96e33aa3d288a34782f662094f0::30844bbff782fa34c82365e8f7c5b748eeb18b88::79bda49a5bc2534bed6b2fd7e59161ebcddb6f12::76dad942cdfaf3baa224048517dc56053e4405e0::02201f277bdd0bfc79399b29e2ded4b4672f390f::
https://api.github.com/repos/python/cpython,110356,ruff-rm-failed-to-parse::main,0,merged,skip issue::skip news::,"<!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> Following the release of Ruff 0.0.292 with support for Python 3.12's PEP 701 f-strings, these files no longer fail to parse, and we can include them in the check. * https://github.com/astral-sh/ruff/releases/tag/v0.0.292 * https://github.com/astral-sh/ruff/pull/7376 * https://github.com/python/cpython/pull/110179 Also remove `test_unittest/testmock/testpatch.py`, it didn't need to be in the list in the first place. I'll do manual backports to 3.12 and 3.11 as they're slightly different.::",Hugo van Kemenade,1324225,628,1,0,4,1,0,056d63cc08887add88bc7b88ff931ff5b4bf74ba::
https://api.github.com/repos/python/cpython,110355,fix_lock_tests11::3.11,0,merged,skip news::,"…(#110346) * gh-109974: Fix threading lock_tests race conditions (#110057) Fix race conditions in test_threading lock tests. Wait until a condition is met rather than using time.sleep() with a hardcoded number of seconds. * Replace sleeping loops with support.sleeping_retry() which raises an exception on timeout. * Add wait_threads_blocked(nthread) which computes a sleep depending on the number of threads. Remove _wait() function. * test_set_and_clear(): use a way longer Event.wait() timeout. * BarrierTests.test_repr(): wait until the 2 threads are waiting for the barrier. Use a way longer timeout for Barrier.wait() timeout. * test_thread_leak() no longer needs to count len(threading.enumerate()): Bunch uses threading_helper.wait_threads_exit() internally which does it in wait_for_finished(). * Add BaseLockTests.wait_phase() which implements a timeout. test_reacquire() and test_recursion_count() use wait_phase(). (cherry picked from commit 4e356ad183eeb567783f4a87fd092573da1e9252) * gh-109974: Fix more threading lock_tests race conditions (#110089) * Add context manager on Bunch class. * Bunch now catchs exceptions on executed functions and re-raise them at __exit__() as an ExceptionGroup. * Rewrite BarrierProxy.test_default_timeout(). Use a single thread. Only check that barrier.wait() blocks for at least default timeout seconds. * test_with(): inline _with() function. (cherry picked from commit 743e3572ee940a6cf88fd518e5f4a447905ba5eb) (cherry picked from commit 1d032ea3d67e9725b63322f896d9aa727fd75521) <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> ::",Victor Stinner,194129,1148,1,378,251,3,0,906cbdc54c1be876aa5e6a2dcd530f3e8d2c026d::
https://api.github.com/repos/python/cpython,110354,backport-bbce8bd-3.11::3.11,0,merged,skip news::,"* gh-109972: Enhance test_gdb (GH-110026) * Split test_pycfunction.py: add test_cfunction_full.py. Split the function into the following 6 functions. In verbose mode, these ""pycfunction"" tests now log each tested call. * test_pycfunction_noargs() * test_pycfunction_o() * test_pycfunction_varargs() * test_pycfunction_varargs_keywords() * test_pycfunction_fastcall() * test_pycfunction_fastcall_keywords() * Move get_gdb_repr() to PrettyPrintTests. * Replace DebuggerTests.get_sample_script() with SAMPLE_SCRIPT. * Rename checkout_hook_path to CHECKOUT_HOOK_PATH. * Rename gdb_version to GDB_VERSION_TEXT. * Replace (gdb_major_version, gdb_minor_version) with GDB_VERSION. * run_gdb() uses ""backslashreplace"" error handler instead of ""replace"". * Add check_gdb() function to util.py. * Enhance support.check_cflags_pgo(): check also for sysconfig PGO_PROF_USE_FLAG (if available) in compiler flags. * Move some SkipTest checks to test_gdb/__init__.py. * Elaborate why gdb cannot be tested on Windows: gdb doesn't support PDB debug symbol files. (cherry picked from commit 757cbd4f29c9e89b38b975e0463dc8ed331b2515) * gh-104736: Fix test_gdb tests on ppc64le with clang (GH-109360) Fix test_gdb on Python built with LLVM clang 16 on Linux ppc64le (ex: Fedora 38). Search patterns in gdb ""bt"" command output to detect when gdb fails to retrieve the traceback. For example, skip a test if ""Backtrace stopped: frame did not save the PC"" is found. (cherry picked from commit 44d9a71ea246e7c3fb478d9be62c16914be6c545) * gh-110166: Fix gdb CFunctionFullTests on ppc64le clang build (GH-110331) CFunctionFullTests now also runs ""bt"" command before ""py-bt-full"", similar to CFunctionTests which also runs ""bt"" command before ""py-bt"". So test_gdb can skip the test if patterns like ""?? ()"" are found in the gdb output. (cherry picked from commit bbce8bd05dd25c6e74487940fa1977485b52baf4) Co-authored-by: Victor Stinner <vstinner@python.org> (cherry picked from commit 1de9406f9136e3952b849487f0151be3c669a3ea)::",Miss Islington (bot),31488909,73,1,303,218,9,0,50ec4bb74e6332d65619754b816ea4dd88167600::
https://api.github.com/repos/python/cpython,110352,backport-254e30c-3.12::3.12,0,merged,,(cherry picked from commit 254e30c487908a52a7545cea205aeaef5fbfeea4) Co-authored-by: Serhiy Storchaka <storchaka@gmail.com> <!-- gh-issue-number: gh-109151 --> * Issue: gh-109151 <!-- /gh-issue-number --> ::,Miss Islington (bot),31488909,73,1,5,0,2,0,507c7d52007f8dca66ed9015301149a3ed92e956::
https://api.github.com/repos/python/cpython,110351,test_gdb_clang12::3.12,0,merged,skip news::,"<!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-109972 --> * Issue: gh-109972 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,3,303,218,9,0,b660dcbb07369498634b5dbeb69964a2888bb6f2::5ead95a81fac4112659de4c79b08d97444541147::8a305efd5b0f2c25ba3c9d126bd1adce9f0c88ca::
https://api.github.com/repos/python/cpython,110349,backport-e9f2352-3.12::3.12,0,merged,tests::skip news::,(cherry picked from commit e9f2352b7b7503519790ee6f51c2e298cf390e75) Co-authored-by: Nikita Sobolev <mail@sobolevn.me> <!-- gh-issue-number: gh-110332 --> * Issue: gh-110332 <!-- /gh-issue-number --> ::,Miss Islington (bot),31488909,73,1,1,12,1,0,142c112f50c8419589684b4d465a4d9c821ee457::
https://api.github.com/repos/python/cpython,110348,backport-e9f2352-3.11::3.11,0,merged,tests::skip news::,(cherry picked from commit e9f2352b7b7503519790ee6f51c2e298cf390e75) Co-authored-by: Nikita Sobolev <mail@sobolevn.me> <!-- gh-issue-number: gh-110332 --> * Issue: gh-110332 <!-- /gh-issue-number --> ::,Miss Islington (bot),31488909,73,1,1,12,1,0,b49710b8212a8a681353d345fb0d4469ee3dc1c0::
https://api.github.com/repos/python/cpython,110347,backport-3f89b25-3.11::3.11,0,merged,tests::skip news::,(cherry picked from commit 3f89b257639dd817a32079da2ae2c4436b8e82eb) Co-authored-by: Nikita Sobolev <mail@sobolevn.me> <!-- gh-issue-number: gh-108927 --> * Issue: gh-108927 <!-- /gh-issue-number --> ::,Miss Islington (bot),31488909,73,1,3,2,1,0,727e134cd2b9d835025d092e6401f6770f034a8a::
https://api.github.com/repos/python/cpython,110346,fix_lock_tests12::3.12,0,merged,skip news::,"<!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-109974 --> * Issue: gh-109974 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,2,378,249,3,1,f72c92698280a77720e3a4b04e031980c6b93cd1::8a4668a997de44b898d1c7ecd49fab6fe5cccd60::
https://api.github.com/repos/python/cpython,110344,backport-4e356ad-3.12::3.12,0,closed,awaiting review::,Fix race conditions in test_threading lock tests. Wait until a condition is met rather than using time.sleep() with a hardcoded number of seconds. * Replace sleeping loops with support.sleeping_retry() which raises an exception on timeout. * Add wait_threads_blocked(nthread) which computes a sleep depending on the number of threads. Remove _wait() function. * test_set_and_clear(): use a way longer Event.wait() timeout. * BarrierTests.test_repr(): wait until the 2 threads are waiting for the barrier. Use a way longer timeout for Barrier.wait() timeout. * test_thread_leak() no longer needs to count len(threading.enumerate()): Bunch uses threading_helper.wait_threads_exit() internally which does it in wait_for_finished(). * Add BaseLockTests.wait_phase() which implements a timeout. test_reacquire() and test_recursion_count() use wait_phase(). (cherry picked from commit 4e356ad183eeb567783f4a87fd092573da1e9252) Co-authored-by: Victor Stinner <vstinner@python.org> <!-- gh-issue-number: gh-109974 --> * Issue: gh-109974 <!-- /gh-issue-number --> ::,Miss Islington (bot),31488909,73,1,226,124,2,0,73035871c792f7c4bb5ea24fe8e083d604762f42::
https://api.github.com/repos/python/cpython,110343,split_gdb11::3.11,0,merged,skip news::,"…#110339) gh-109972: Split test_gdb.py into test_gdb package (#109977) Split test_gdb.py file into a test_gdb package made of multiple tests, so tests can now be run in parallel. * Create Lib/test/test_gdb/ directory. * Split test_gdb.py into multiple files in Lib/test/test_gdb/ directory. * Move Lib/test/gdb_sample.py to Lib/test/test_gdb/ directory. Update get_sample_script(): use __file__ to locate gdb_sample.py. * Move gdb_has_frame_select() and HAS_PYUP_PYDOWN to test_misc.py. * Explicitly skip test_gdb on Windows. Previously, test_gdb was skipped even if gdb was available because of gdb_has_frame_select(). (cherry picked from commit 8f324b7ecd2df3036fab098c4c8ac185ac07b277) (cherry picked from commit e7a61d34b7897ac6cff53add2ec03309a5ff8350) <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> ::",Victor Stinner,194129,1148,1,1124,1067,11,0,8dbf9c05544baeee67362ead4fa93b23a3c0cdce::
https://api.github.com/repos/python/cpython,110342,start_new_thread12::3.12,0,merged,,"Fix _thread.start_new_thread() race condition. If a thread is created during Python finalization, the newly spawned thread now exits immediately instead of trying to access freed memory and lead to a crash. thread_run() calls PyEval_AcquireThread() which checks if the thread must exit. The problem was that tstate was dereferenced earlier in _PyThreadState_Bind() which leads to a crash most of the time. Move _PyThreadState_CheckConsistency() from thread_run() to _PyThreadState_Bind(). (cherry picked from commit 517cd82ea7d01b344804413ef05610934a43a241) <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-108987 --> * Issue: gh-108987 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,2,75,44,5,0,9806f2e6e697dd544dbdbbe7b332cbc96b1e02f1::b4da60296798e6f05c7710cd42af1b100d845696::
https://api.github.com/repos/python/cpython,110341,busy_retry11::3.11,0,merged,skip issue::skip news::,"Add busy_retry() and sleeping_retry() functions to test.support. (cherry picked from commit 7e9eaad864349d2cfd4c9ffc4453aba03b2cbc16) <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--110341.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::",Victor Stinner,194129,1148,1,185,99,12,0,dbb622ccc441f03cd31182eade0c689ebd6b0ad8::
https://api.github.com/repos/python/cpython,110340,copy_src32::3.12,0,merged,skip news::,"<!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-109615 --> * Issue: gh-109615 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,4,49,12,7,0,b24ecb7639a9f558240d4d69df0e4094eba6a51b::c310ecb0534aeed2373993eaca32222cdf809e27::4f4c799e83721c1a2c2c7fe1068c2496242ecc8d::a3340576a25462ef4acec6b74cbdf188e35bfe6d::
https://api.github.com/repos/python/cpython,110339,split_gdb12::3.12,0,merged,tests::skip news::,"Split test_gdb.py file into a test_gdb package made of multiple tests, so tests can now be run in parallel. * Create Lib/test/test_gdb/ directory. * Split test_gdb.py into multiple files in Lib/test/test_gdb/ directory. * Move Lib/test/gdb_sample.py to Lib/test/test_gdb/ directory. Update get_sample_script(): use __file__ to locate gdb_sample.py. * Move gdb_has_frame_select() and HAS_PYUP_PYDOWN to test_misc.py. * Explicitly skip test_gdb on Windows. Previously, test_gdb was skipped even if gdb was available because of gdb_has_frame_select(). (cherry picked from commit 8f324b7ecd2df3036fab098c4c8ac185ac07b277) <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-109972 --> * Issue: gh-109972 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,1,1124,1067,11,1,3ee646f85e84ba8bf9259d51922c4a4a5b7bd03e::
https://api.github.com/repos/python/cpython,110338,backport-1337765-3.12::3.12,0,merged,tests::skip news::,test_unix_events tests using the multiprocessing module now call multiprocessing.util._cleanup_tests(). (cherry picked from commit 1337765225d7d593169205672e004f97e15237ec) Co-authored-by: Victor Stinner <vstinner@python.org> <!-- gh-issue-number: gh-110335 --> * Issue: gh-110335 <!-- /gh-issue-number --> ::,Miss Islington (bot),31488909,73,1,8,0,1,0,7104a5b9ff1e70c2e9522dfef59ca7e7c61e20b7::
https://api.github.com/repos/python/cpython,110336,asyncio_clean_multiprocessing::main,0,merged,tests::skip news::needs backport to 3.11::,"test_unix_events tests using the multiprocessing module now call multiprocessing.util._cleanup_tests(). <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-110335 --> * Issue: gh-110335 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,1,8,0,1,1,d9a9365816de324e5e4e1f07974626f74632871b::
https://api.github.com/repos/python/cpython,110334,issue-110332::main,0,merged,tests::skip news::,"Related to https://github.com/python/cpython/issues/110171, I am looking through other usages of `Random.seed` <!-- gh-issue-number: gh-110332 --> * Issue: gh-110332 <!-- /gh-issue-number --> ::Instead of generating random bytes at each run, would it make sense to install Python 2.3, generate these 17 KiB, save them in a file, and use the file in this test?::It will take about 500 lines for hex-encoded or base64-encoded data (more if use the bytes literal). Generating 17KB of random data takes less than 0.0001 sec.::@vstinner I've recently checked that it is not possible to install anything below python3.7 on m2 https://github.com/python/cpython/pull/110013#issuecomment-1739485985::",Nikita Sobolev,4660275,4663,1,1,12,1,0,04a8df26c431ad9b1206e960e023aa9b4e59b6d8::
https://api.github.com/repos/python/cpython,110331,test_gdb::main,0,merged,skip news::,"CFunctionFullTests now also runs ""bt"" command before ""py-bt-full"", similar than CFunctionTests which also runs ""bt"" command before ""py-bt"". So test_gdb can skip the test if patterns like ""?? ()"" are found in the output. <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-110166 --> * Issue: gh-110166 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,1,1,1,1,1,377b930f24dd114db9d143cfc2148d0ae80ac712::
https://api.github.com/repos/python/cpython,110328,patch-1::main,0,merged,docs::skip issue::skip news::,From [`textwrap` &sect; `TextWrapper.fix_sentence_endings`](https://docs.python.org/3/library/textwrap.html#textwrap.TextWrapper.fix_sentence_endings): > One problem with this is algorithm is that it is unable to [...] The line should have read as follows: > One problem with this algorithm is that it is unable to [...] <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--110328.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::,InSync,122007197,0,1,1,1,1,0,3390c30412fcb2f23a3c60e88fbfbb049b29e69e::
https://api.github.com/repos/python/cpython,110326,regrtest_resources::main,0,merged,skip news::,"<!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-109276 --> * Issue: gh-109276 <!-- /gh-issue-number --> ::Use `sorted()` for deterministic result.::```suggestion relative_all.append(name) ```::Oh right. Sadly, I saw your comment after the change was merged. I make try to include it in my next regrtest change ;-)::",Victor Stinner,194129,1148,2,63,17,3,0,68f2ade434cec9e49b03d1fe9b89e844203a7e85::63e0afec8045248b76da1658a8f294d3c8f56c7e::
https://api.github.com/repos/python/cpython,110324,backport-f02f26e-3.12::3.12,0,merged,docs::skip news::,(cherry picked from commit f02f26e29366513b097578fbc6b25e02d0eba7c0) Co-authored-by: Jelle Zijlstra <jelle.zijlstra@gmail.com> <!-- gh-issue-number: gh-85984 --> * Issue: gh-85984 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--110324.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::,Miss Islington (bot),31488909,73,1,6,0,1,0,c59cd3b19b0dd6bb2ba47cfa18168918f626d571::
https://api.github.com/repos/python/cpython,110322,interpreters-module-preserve-traceback-str::main,0,merged,skip news::,This is a temporary fix. The full fix may involve serializing the traceback in some form. <!-- gh-issue-number: gh-76785 --> * Issue: gh-76785 <!-- /gh-issue-number --> ::,Eric Snow,1152074,290,2,7,1,1,0,556bee45e1b4e31f1097d90099f2056f315d2e19::cdb517d5ee1d9355f5de39a3f5c9c42f2e07bbab::
https://api.github.com/repos/python/cpython,110320,gh-110309::main,0,merged,,"close #110309 <!-- gh-issue-number: gh-110309 --> * Issue: gh-110309 <!-- /gh-issue-number --> ::I think it would be cleaner (and anecdotally faster) to do one pass first to count the elements (no allocations), allocate just once and then do a second pass setting the elements::makes sense::There is no more resized arrays so this name is now a bit odd.::This can be done where `resized_spec` is defined and wee can skip the `else`.::I got it simplified.::",,59365878,58,4,79,10,3,0,59c372a486bc18d04da01cbac627759291264034::19d1301664d806ef958b778d16b721fa0fbf0825::60b4666d7b43ba13a477d4d0fe6ddb1314f31775::19c68e2372870226446f7a493458d8e3768f2374::
https://api.github.com/repos/python/cpython,110318,fix-refleaks::main,0,merged,skip news::,<!-- gh-issue-number: gh-110300 --> * Issue: gh-110300 <!-- /gh-issue-number --> ::,Eric Snow,1152074,290,7,30,10,3,0,fbbebfde84332d90a2839364c49a2b556ee5279d::8bfdf89e44ceaa9f7b43846e5d241efdab18c5c3::47a2bf68c63ba8757580bf2c79feae6d2020059a::b2919311defe8e2ff29cac14e54d0d3bf49f0121::009aa91bb275ca9a0d647c6893b379a3bd0f15fb::bb7e4e01490bbf5f57537e623e69132013964aaf::2462033222ad658ac244a1a1e8107600b7dd391a::
https://api.github.com/repos/python/cpython,110317,split-uops::main,0,merged,skip news::,Split the following `LOAD_ATTR` specializations: - `LOAD_ATTR_NONDESCRIPTOR_NO_DICT` - `LOAD_ATTR_METHOD_LAZY_DICT` - `LOAD_ATTR_NONDESCRIPTOR_WITH_VALUES` - `LOAD_ATTR_CLASS` - `LOAD_ATTR_WITH_HINT` - `LOAD_ATTR_MODULE` This also contains a cosmetic fix regarding the indentation of `DEOPT_IF()` macros. The following two are the only `LOAD_ATTR` specialization that aren't split up yet: - `LOAD_ATTR_PROPERTY` (looks complicated) - `LOAD_ATTR_GETATTRIBUTE_OVERRIDDEN` (not used in the benchmark) <!-- gh-issue-number: gh-104909 --> * Issue: gh-104909 <!-- /gh-issue-number --> ::,Guido van Rossum,2894642,21056,10,598,219,6,0,416cc0110bb08c813c3cb53ac1b034932d899617::c96a6da166389ac9a5beab80bbdc1d641668f56b::de86f0c7c1dede0c4a48eb0332f02a0c5e863cb2::a45d86148b027c922ea18d709f8103906f34db54::74c917b2125c7ca53dd5bb66e1c9b6c75996d0d6::0f9fa7f3f20dc6ea61bf7921bdcd95c6c9d1933c::ea0e772875c761edd0c66f93b88ec3e2487db9dc::b3e16a45b002e4627d1c1e0f8202abe229fa3c1a::6e8718e22f01b919e039b4530ecc5329766ba54d::8ab398d3aa185d304dfb3d5dfee1611317d7222b::
https://api.github.com/repos/python/cpython,110316,backport-a376a72-3.11::3.11,0,merged,tests::skip issue::skip news::,The test had an instability issue due to the ordering of the dummy queue operation and the real wakeup pipe operations. Both primitives are thread safe but not done atomically as a single update and may interleave arbitrarily. With the old order of operations this can lead to an incorrect state where the dummy queue is full but the wakeup pipe is empty. By swapping the order in clear() I think this can no longer happen in any possible operation interleaving (famous last words). (cherry picked from commit a376a72bd92cd7c9930467dd1aba40045fb75e3b) Co-authored-by: elfstrom <elfstrom@users.noreply.github.com> <!-- gh-issue-number: gh-109917 --> * Issue: gh-109917 <!-- /gh-issue-number --> ::,Miss Islington (bot),31488909,73,1,2,1,1,0,43f846e10de6a1c20f1e1648187d996cbaeba14c::
https://api.github.com/repos/python/cpython,110315,backport-a376a72-3.12::3.12,0,merged,tests::skip issue::skip news::,The test had an instability issue due to the ordering of the dummy queue operation and the real wakeup pipe operations. Both primitives are thread safe but not done atomically as a single update and may interleave arbitrarily. With the old order of operations this can lead to an incorrect state where the dummy queue is full but the wakeup pipe is empty. By swapping the order in clear() I think this can no longer happen in any possible operation interleaving (famous last words). (cherry picked from commit a376a72bd92cd7c9930467dd1aba40045fb75e3b) Co-authored-by: elfstrom <elfstrom@users.noreply.github.com> <!-- gh-issue-number: gh-109917 --> * Issue: gh-109917 <!-- /gh-issue-number --> ::,Miss Islington (bot),31488909,73,1,2,1,1,0,0597c305aa162eb1e7ad5452d5a5363ab9fe7802::
https://api.github.com/repos/python/cpython,110314,revert-traceback::main,0,merged,skip news::,That commit is causing some buildbot failures.::,Eric Snow,1152074,290,1,0,4,1,0,244924efbed9aef664e41618102d73d68e282ed7::
https://api.github.com/repos/python/cpython,110311,fix-xid-registry::main,0,merged,skip news::,"We do the following: * add a per-interpreter XID registry (`PyInterpreterState.xidregistry`) * put heap types there (keep static types in `_PyRuntimeState.xidregistry`) * clear the registries during interpreter/runtime finalization * avoid duplicate entries in the registry (when `_PyCrossInterpreterData_RegisterClass()` is called more than once for a type) * use `Py_TYPE()` instead of `PyObject_Type()` in `_PyCrossInterpreterData_Lookup()` The per-interpreter registry helps preserve isolation between interpreters.  This is important when heap types are registered, which is something we haven't been doing yet but I will likely do soon. <!-- gh-issue-number: gh-110310 --> * Issue: gh-110310 <!-- /gh-issue-number --> ::",Eric Snow,1152074,290,5,148,58,3,0,4881760ae849a7ad5651bfaae12b338cf0d73871::df4c217195eccebf04b99bc9121e78eaf90979c7::3cbb996e068316d0ac1fbdb739eb17582e11c3f7::92fad3f5df3d56016a1cece412fbe5e289a270ce::c985d77cda4869b8f9106dc2b77a79f2e38ebb65::
https://api.github.com/repos/python/cpython,110308,gh-110109-simplify-test-setup::main,0,merged,tests::skip news::topic-pathlib::,"Use the class under test to create files, directories and symlinks. <!-- gh-issue-number: gh-110109 --> * Issue: gh-110109 <!-- /gh-issue-number --> ::",Barney Gale,960340,86,5,42,76,1,0,957e1bb117047f3eded7b2951e3ce6c999568f27::840308513eba2e17bdeb1961e08c6e2911f5461e::d0068cc22e78df19af9f8a7aa2f96b2cc64641d8::eb0298c041bf848fd662675c9dd9aec42d58610e::ab5057af3191bd2af605a6e8a1ae0b2608e87c32::
https://api.github.com/repos/python/cpython,110306,fix-gh-109917::main,0,merged,tests::skip issue::skip news::3.11::3.12::3.13::,"The test had an instability issue due to the ordering of the dummy queue operation and the real wakeup pipe operations. Both primitives are thread safe but not done atomically as a single update and may interleave arbitrarily. With the old order of operations this can lead to an incorrect state where the dummy queue is full but the wakeup pipe is empty. By swapping the order in clear() I think this can no longer happen in any possible operation interleaving (famous last words). This is a minimal update to fix the issue. Long term it might be better to rewrite the test along the lines of https://github.com/python/cpython/pull/110129 where we make it possible to override the wakeup message and cause the blocking behaviour that way instead of the small dummy queue used now. Less mocking is usually better and the test can be faster as well. It does require a minor modification to the implementation and there were other issues in https://github.com/python/cpython/pull/110129 but the general test idea seems better than the current solution. <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-109917 --> * Issue: gh-109917 <!-- /gh-issue-number --> ::",,13905184,0,1,2,1,1,0,35227479acb73f23b77e9e081b4f505e3208bd32::
https://api.github.com/repos/python/cpython,110303,backport-77e9aae-3.11::3.11,0,merged,docs::skip issue::skip news::,(cherry picked from commit 77e9aae3837d9f0cf87461d023896f2c4aeb282f) <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--110303.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::,Adam Turner,9087854,89,1,195,195,17,0,e9563f2165297e2b8a15680ebefbdb58a7f4439e::
https://api.github.com/repos/python/cpython,110302,backport-77e9aae-3.12::3.12,0,merged,docs::skip issue::skip news::,(cherry picked from commit 77e9aae3837d9f0cf87461d023896f2c4aeb282f) <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--110302.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::,Adam Turner,9087854,89,1,203,203,18,0,d6b3a874c3cc6ef215cf80be05aa7385d9188013::
https://api.github.com/repos/python/cpython,110301,unify-guard::main,0,merged,skip news::,This is possible now the target for `DEOPT_IF()` is auto-filled. <!-- gh-issue-number: gh-109979 --> * Issue: gh-109979 <!-- /gh-issue-number -->::,Guido van Rossum,2894642,21056,1,36,63,5,0,faf099e0358a83345533f21a1dbe0fed019fb304::
https://api.github.com/repos/python/cpython,110298,gh-82367-use-findfirstfile-in-nt-realpath::main,0,merged,,"`ntpath.realpath()` breaks out of traversing a series of paths where a (handled) ERROR_ACCESS_DENIED or ERROR_SHARING_VIOLATION occurs. Using `FindFirstFile` Win32 API, we can query their real name to correct the case and also resolve MS-DOS (also called 8.3) style file names such as `C:\\LONGFI~1.TXT`. <!-- gh-issue-number: gh-82367 --> * Issue: gh-82367 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--110298.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::This is generally the issue number rather than the PR number, so `82367` rather than `110298`.::The first line here isn't necessary.::I'm not sure this belongs within the 'note' block here.  It might go better in the first paragraph? It might be good to include an example of what `C:\\LONGFI~1.TXT` could expand into (ideally using a filename that actually exists in a standard installation, but that may be asking too much :)). Also, it's generally ""On Windows"" rather than ""In Windows"".::removed the line.::changed it to the issue number.::Moved to the first paragraph and applied suggestion. However... I was unable to find a suitable filename that is short enough and actually exists in a standard installation, so I used  ``C:\\PROGRA~1\\LONGFI~1.TXT`` and ``C:\\Program Files\\LongFile.txt``. ::Actually, `LongFile.txt` is equal to 8.3 so it won't be shortened. Also, writing both C:\\PROGRA~1\\LONGFI~1.TXT and C:\\Program Files\\LongFile.txt seems to be needlessly long :(::Changed the example with``C:\\PROGRA~1`` to ``C:\\Program Files``.::The following cases should also be included for `FindFirstFileW()` name normalization. * The filesystem doesn't support WinAPI `GetFinalPathNameByHandleW()`. * 1: `ERROR_INVALID_FUNCTION` * 50: `ERROR_NOT_SUPPORTED` * 87: `ERROR_INVALID_PARAMETER` * The type of reparse point is not supported (e.g. appexec links). * 1920: `ERROR_CANT_ACCESS_FILE` * A reparse point can't be resolved, and `_readlink_deep()` fails. * 1921: `ERROR_CANT_RESOLVE_FILENAME` Note that `_readlink_deep()` does nothing to ensure that the result is a final, normalized pathname. It just tries to keep reading symlinks until the target isn't a symlink or access/reading fails in a manner that's allowed. If it succeeds, the resulting pathname may include any number of symlinks, mount points, and short names. `_getfinalpathname_nonstrict()` should instead pass both the pathname and the `seen` set into `_readlink_deep()`. If it succeeds, then add the resulting pathname to the set, and continue the loop to try to get a final, normalized pathname.::Will it be fine if I add  `1, 50, 87, 1920, 1921` to the error tuple in line 691? Also, do you think the fix to address your note about `_readlink_deep()` should also be included in this pr?::Do you want to work on a new issue to ensure that the deep readlink result gets resolved to a final, normalized pathname?::Yes, I won't mind it. I've added the errors to the error tuple.::Automatic generation of short names may be disabled on NTFS volumes for the sake of performance. (They're not supported at all on ReFS and exFAT.) Try to set the short name using the following command line: ```python subprocess.run(['fsutil.exe', 'file', 'setShortName', test_file, 'LONGFI~1.TXT'], creationflags=subprocess.DETACHED_PROCESS) ```::These needs to be a real path for the comparison to be reliable. ```suggestion ABSTFN = ntpath.realpath(os_helper.TESTFN) ```::You're right! Do you think I should check the drive filesystem also? ::Right. Fixed.::Try to run the above command to set the short name, without worry about whether it succeeds. Then if `ntpath.realpath(test_file_short)` isn't the same as `test_file`, skip the test with the message that the filesystem lacks the required support for short filenames.::Ah, thus `run()` instead of `check_call()`. OK, wilco.::This should be executed right after creating the file. Use `subprocess.run()` without checking the result.::OK, fixed.::You can't consume the assertion from the second `assertPathEqual()` call. That's the actual test. Everything else is setup and checking whether the test is supported. ```suggestion try: self.assertPathEqual(test_file, ntpath.realpath(test_file_short)) except AssertionError: raise unittest.SkipTest('the filesystem seems to lack support for short filenames') # Deny the right to [S]YNCHRONIZE on the file to all users (SDDL # alias ""BU"") to make opening it fail with ERROR_ACCESS_DENIED. p = subprocess.run(['icacls.exe', test_file, '/deny', '*BU:(S)'], creationflags=subprocess.DETACHED_PROCESS) if p.returncode: raise unittest.SkipTest('failed to deny access to the test file') self.assertPathEqual(test_file, ntpath.realpath(test_file_short)) ```::Right. Fixed.::This flag was added as `subprocess.DETACHED_PROCESS` way back in 3.7. There's no need to hard code it anymore.::Right. Removed.::Change the name used here to `_getfinalpathname`. The API call is `GetFinalPathNameByHandleW()`, but what we're actually trying to make fail is opening the handle via `CreateFileW()` in the implementation of `nt._getfinalpathname()`. ::Right. Fixed.::",Moonsik Park,47686265,9,1,132,8,8,0,2b5a29ee1f0424eee3c03929ddff557739d162e7::
https://api.github.com/repos/python/cpython,110297,capi-PyUnicode_EqualToString::main,0,merged,,"<!-- gh-issue-number: gh-110289 --> * Issue: gh-110289 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--110297.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::Can you please document the behavior if *string* is not UTF-8 encoded but encoded to Latin1 or something else? What happens? Crash? Undefined behavior?::I would prefer to test the length first, to make the code  more readable. Like: ``` if (strlen(str) == len) { return 1; } return memcmp(...); ``` Same below.::It returns false.::It is the same in `_PyUnicode_EqualToASCIIString()`. How ```c if (!a) { return 0; } return b; ``` is more readable than simple `return a && b;`? It is what the `&&` operator for.::```suggestion the C string is not encoded to UTF-8 return 0. ```::```suggestion Compare a Unicode object with a UTF-8 encoded C string and return non-zero if they are equal or 0 otherwise. ```::```suggestion a :c:expr:`const char*` UTF-8 encoded bytes string and return non-zero if they are equal or 0 otherwise. ```::I suggest an ""introduction"" such as: ""Surrogate characters are always treated as not equal"".::```suggestion self.assertEqual(equaltoutf8('\udcfe', '\udcfe'.encode(""utf8"", ""surrogateescape"")), 0) ```::```suggestion self.assertEqual(equaltoutf8('\udcfe', '\udcfe'.encode(""utf8"", ""surrogatepass"")), 0) ```::Can you please test different encodings on purpose? Example: ```py def check_not_equal_encoding(text, encoding): self.assertEqual(equaltoutf8(text, text.encode(encoding)), 0) self.assertNotEqual(text.encode(encoding), text.encode(""utf8"")) # Strings encoded to other encodings are not equal to expected UTF8-encoding string check_not_equal_encoding('Stéphane', 'latin1') check_not_equal_encoding('Stéphane', 'utf-16-le')  # embedded null characters check_not_equal_encoding('北京市', 'gbk') ```::Good, it's a sane behavior.::Can you say something to repeat that passing ASCII strings are perfectly fine?::``` unsigned char byte1 = (0xc0 | (ch >> 6)); unsigned char byte2 = (0x80 | (ch & 0x3f)); if (str[0] != byte1 || str[1] != byte2) return 0; ``` And declare a *str* variable as ``unsigned char*`` once to avoid casting str at each byte comparison.::I might be mistaken, but I think the _return 0_ part warrants a comma: _""If [...] or [...], return 0.""_ cc. @AA-Turner ::It was actually how I wrote it initially. But it was too long.::I do not think it makes sense. If the string is equal to one bytes sequence, it cannot be equal to different bytes sequence. Even if there is a bug, the chance to catch it with testing against arbitrary bytes sequence of length 8 is one to `2**64`.::If the first comparison fails, you do not need to calculate the second byte. The code looks more compact and uniform in the way it is written right now. All expressions I copied from the UTF-8 encoder which I wrote 11 years ago, so no need to recheck them. Casting to unsigned char is not a large burden, but if you prefer, I can introduce a new `unsigned char*` variable.::Do we have something similar in other functions that take `const char*` argument?::It looks to me, that ""return true"" is more often used than ""return non-zero"". In this case it is more accurate, because it always returns 1, not other non-zero value. Perhaps other functions which return non-zero was a macro that returned not 1 (something like `(arg->flags & FLAG)`)?::I don't think that documentation of other functions say something about ""C string is not encoded to UTF-8"". Hum. I propose to replace: ``` the C string is not encoded to UTF-8 return false. ``` with: ``` the C string is not encoded to UTF-8 nor to ASCII return false. ``` I'm not sure that all users are aware that UTF-8 is a superset of ASCII.::```suggestion Compare a Unicode object with a UTF-8 encoded or ASCII encoding C string and return true (``1``) ```::> is more readable than simple return a && b;? For me, it's easier to reason about a single test per line when I review code. Keep ``a && b`` if you prefer.::It's a functional test of the API contract which says ""return false if the string is not encoded to UTF-8"".::```suggestion if (!PyArg_ParseTuple(args, ""O|y#"", &left, &right, &right_len)) { return NULL; } ```::The readability problem as I see it, is that your `&&` use has side effects; it is not a pure logic expression.::Maybe ""ASCII encoded""?::> For me, it's easier to reason about a single test per line when I review code. Fortunately, every condition here is already on a separate line. > The readability problem as I see it, is that your `&&` use has side effects; it is not a pure logic expression. It is how `&&` works in C. There is a lot of code like `arg != NULL and PyDict_Check(arg) && PyDict_GET_SIZE(arg) > count`. I do not think rewriting it in three `if`s with `goto`s can improve readability. ::Should not we add ""or ASCII"" to every ""UTF-8"" in the C API documentation.::OK. I still do not see sense in this, but if you insist...::I only have concerns about this function because there are variants which are for ""ASCII-only"", a variant for ""Latin1"". So it can be misleading. I prefer to be more explicit than usual in this function documentation.::```suggestion # CRASHES equaltoutf8('abc', NULL) ```::I suggest adding tests on *embedded* null chars/bytes: ```suggestion # embedded null chars/bytes self.assertEqual(equaltoutf8('abc', b'abc\0def\0'), 1) self.assertEqual(equaltoutf8('a\0bc', b'abc'), 0) self.assertEqual(equaltoutf8('abc', b'a\0bc'), 0) ```::Apparently, the function crash if right is NULL, so for now, it's safer to always require 2 arguments: ```suggestion PyObject *left; const char *right; Py_ssize_t right_len; int result; if (!PyArg_ParseTuple(args, ""Oy#"", &left, &right, &right_len)) { return NULL; } ```::Maybe test also MAX_UNICODE explicitly: ```suggestion '\U0001f600\U0001f601\U0001f602', '\U0010ffff', ```::```suggestion a :c:expr:`const char*` UTF-8 encoded bytes string and return true (``1``) if they are equal, or false (``0``) otherwise. ```::```suggestion and return true (``1``) if they are equal, or false (``0``) otherwise. ```::```suggestion the C string is not encoded to UTF-8 or ASCII, return false (``0``) . ```::No, it does not work so. NULL is defined as None, and `equaltoutf8('abc', None)` is a TypeError. If `equaltoutf8()` is called with only one argument, it sets the second argument for `PyUnicode_EqualToUTF8()` to NULL, so we can test it and ensure that it indeed crashes. It is a common approach used in other tests in this file for `const char *` argument. Some functions do not crash, but raise exception or return successfully for NULL, but this function simply crashes in debug build. ::It is intentionally, so we can check it for NULL.::```suggestion /* Compare a Unicode object with UTF-8 encoded C string. Return 1 if they are equal, or 0 otherwise. This function does not raise exceptions. */ ```::Oh ok, I thought that they were just pseudo-code as comments. Sure, you can leave ``# NULL`` if you prefer.::In that case, please initialize right_len. Otherwise, it's uninitialized if the function is called with a single argument.::But it is not used in any case.::Hmm, I copied this pattern from the test for `PyUnicode_CompareWithASCIIString()` which was one of the first written tests. In newer tests I use ""z#"" which allows to pass None for NULL. Or perhaps I changed this everywhere except the test for `PyUnicode_CompareWithASCIIString()`. So perhaps I can change this too.::In any case I am going to change ""|y#"" to ""z#"". The argument will be mandatory and the variable always initialized, as you requested!::```suggestion the C string is not valid UTF-8, false (``0``) is returned. ```::```suggestion a :c:expr:`const char*` UTF-8 encoded string and return true (``1``) ```::This is... annoying to say the least. Can `PyUnicode_EqualToUTF8` instead take a third argument `Py_ssize_t len` argument?::Note that ""UTF-8 encoded bytes string"" is used at least in 17 other places in the C API documentation and 3 times outside of it. If it is incorrect, we should fix them first.::It is inconvenient and errorprone to specify a size of literal strings.::that's why I suggest a pair of APIs, one primarily intended for literals (I wish C could enforce that), one with the size.::I asked Serhiy to write ""UTF-8 or ASCII"", since I expect that most developers don't know that UTF-8 is a superset of ASCII. Also, because Python C API has a complicated set of functions with strange rules about encodings: see previous comments on this PR.::> If it is incorrect, we should fix them first. I don't get this rationale. If the change makes sense, it should be used for new doc. For me, fixing old doc is a separated concern. I don't see how it should be a pre-requirement to write correct doc.::Adding PyUnicode_EqualToUTF8Size() (or PyUnicode_EqualToUTF8WithSize() if you love old habits and long names) would make sense. I like PyUnicode_EqualToUTF8(). For me truncating the second argument at the first NUL byte is the classic way to handle strings in C. All ""str"" functions of the libc API are based on this format, only ""mem"" functions take a size/length parameters.::> I asked Serhiy to write ""UTF-8 or ASCII"", since I expect that most developers don't know that UTF-8 is a superset of ASCII. Hmm... why not, but someone _not_ knowing that UTF8 is a superset of ASCII should perhaps not deal with encodings at all :-) (also, how often are you sure that a string is pure ASCII these days? even Python identifiers are now Unicode)::> For me truncating the second argument at the first NUL byte is the classic way to handle strings in C It's certainly classic, but it's a bad kind of classic :-)::> (also, how often are you sure that a string is pure ASCII these days? even Python identifiers are now Unicode) Basically all Python identifiers are ASCII in the Python code base.::Yeah, so what? ::I suppose that if we return true at this point then we know that `str` is the utf8 representation of `unicode`, does it make sense to copy the contents into `unicode->utf8` so that future operations can fast-path without needing to encode again?::It needs a separate research and discussion. The disadvantage is that it increases the consumed memory size, also it consumes some CPU time, so the benefit will be only if the UTF-8 cache is used in future. If the idea turned out to be good, it can simply be implemented in the future.::Makes total sense. I guess this also sits in an awkward place where it's likely that the user is best suited to know whether or not they want the utf-8 cache populated, but it's also an implementation detail that we don't really want to expose to users. ~~For now I'll just mark this comment as resolved.~~ Edit I can't, probably lack permissions I guess.::PyUnicode_EqualToUTF8() doesn't raise exception and cannot fail. Trying to allocate memory should not raise memory, but it sounds like a non-trivial side effect. Worst case: 1 GB string, you call PyUnicode_EqualToUTF8() and *suddenly*, Python allocates 1 GB more. I would be *surprised* by this behavior.::Maybe it's worth it to add a comment explaining why we don't cache the UTF-8 encoded string.::Since both arguments are string, I suggest to use italic to show that you're talking about the second argument :-) ```suggestion Similar to :c:func:`PyUnicode_EqualToUTF8AndSize`, but compute *string* ``` or: ``` the *string* string ```::What do you think about renaming `string` to `utf8_str`? The `utf8_` would be another way to document that it's expected to be encoded to UTF-8 and also it's easier (for me) to distinguish that the second argument is a bytes string, since `string` name is quite generic.::Would you mind to explicit the behavior on null characters and null bytes?::Hum, the API is different, so I suggest other tests: ```suggestion self.assertEqual(equaltoutf8andsize('abc\0def', b'abc\0def', 7), 1) self.assertEqual(equaltoutf8andsize('abc\0def\0', b'abc\0def\0', 8), 1) ```::I prefer to add parenthesis to make the operator priority more obvious: ```suggestion if ((ends - s) < 2 || ``` Same remark for other `ends - s` comparisons below.::It is a part of the bigger issue. See #62897.::What should be added?::The explicit third argument is redundant, because by default it is the length of the second argument.::I prefer to use less parentheses if it is non-ambiguous, because extra parentheses can make the code less readable (does this parenthesis matches this parenthesis or that?). But if you insist...::I'm not sure :-( I propose: ``` While :c:func:`PyUnicode_EqualToUTF8` returns false if the Unicode object contains null characters, :c:func:`PyUnicode_EqualToUTF8AndSize` does not treat null characters/bytes differently than other characters/bytes: *unicode* can contain null characters and *string* can contain null bytes. ```::Is it the first C API that we have which treat null characters/bytes differently between the null-terminated flavor and the WithSize() flavor?::Some C API which returns C strings, treat them differently -- if it can return size, embedded null characters/bytes are allowed, it it cannot, the returned string is null-terminated, and embedded nulls are forbidden. It was not always so, it is a latter fix for security. C API which takes C strings, usually do not treat null characters/bytes specially, unless the underlying layer has limitations. And `PyUnicode_EqualToUTF8()` also do not treat them specially. It is just that the first null in the C string is terminating, so null in the Unicode object cannot match.::You're right. Maybe just ignore my point and leave the doc as it is. I mark this discusssion as resolved.::```suggestion ```::```suggestion ```::@erlend-aasland: why do you want to remove these docs? they are displayed when tests are run in verbose mode.::yes, they clutter the verbose mode run, and they do not add any information; it is just a repetition of the test method name, just with a slightly different formatting. The test method name is already shown when run in verbose mode; I do not need to read it twice.::If the test method name is not understandable, the solution is to choose a better test method name. In this case, test method names like `test_pyunicode_equaltoutf8()` or `test_PyUnicode_EqualToUTF8()` are better solutions to the problem.::Nit, but is it worth testing with an empty unicode string as well?::Same question here.::Unrelated question, but is there a plan to generate this file from `Doc/data/stable_abi.dat` or the reverse?::I think that `Doc/data/stable_abi.dat` is generated from `Misc/stable_abi.toml`.::Ah, ok, thank you! ::",Serhiy Storchaka,3659035,401,19,280,0,11,0,d39945ec55aaa14d62c90fac3f7541034c5597be::4793161fcb730e2d09794a2b7cf91460b2d48a87::8b24911134f2125acec1ad684a07fb6bccc49d05::c55f9ac784a417bc615f2335c813c0e39437e0fd::bdf2f1e27cdc42ec976a7a23b83f0aade13a56ad::7223c14e3f9629d777fd27b477ad39d516472d80::b2713274d26af3460d60f60b7189a3eeef823b9b::6f26ad6ccf4726073c912a7b2cb8e9bc469dfb38::dd124b87e00aa51f54e1da9adccb7b46c0aa16f5::76b9177c4158e5b6f9afc898cf0cce8167c48ee4::ee5781d223e3bf55dc0a3de59e3eb81a9726b40a::1a4eb7bb149cd1b3dcdde7e822119f80ece85cd6::b1243770a7bb5d8234708d8070320fd256a8b5df::029f1a06efd2e41139d2ce9842e6a5511163c74a::be2ffe844a5f274168f2f7e554f8e1f745e83cb9::29b26f7477dae03c46921676dd36ff93bfe6a0a9::78de49d5f40466abfa88640eb251d956e6ebb855::fc79d5ef306f7c7aca4c207f5baf4c0ca7bf135f::19ad12633077bc6122a2a1340d6843f8da241574::
https://api.github.com/repos/python/cpython,110295,profile_task::main,0,merged,,"<!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-110276 --> * Issue: gh-110276 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--110295.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::",Victor Stinner,194129,1148,1,7,2,3,0,a26ba58ff442e7aeb97e04461a4d97b8fc5b808d::
https://api.github.com/repos/python/cpython,110294,backport-4227bfa-3.12::3.12,0,merged,docs::skip news::,(cherry picked from commit 4227bfa8b273207a2b882f7d69c8ac49c3d2b57d) Co-authored-by: Lincoln <71312724+Lincoln-developer@users.noreply.github.com> Co-authored-by: blurb-it[bot] <43283697+blurb-it[bot]@users.noreply.github.com> Co-authored-by: Erlend E. Aasland <erlend@python.org> <!-- gh-issue-number: gh-109234 --> * Issue: gh-109234 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--110294.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::,Miss Islington (bot),31488909,73,1,2,2,1,0,992652d52f8b0dff64dae41a6f7919562ae9fc87::
https://api.github.com/repos/python/cpython,110293,backport-4227bfa-3.11::3.11,0,merged,docs::skip news::,(cherry picked from commit 4227bfa8b273207a2b882f7d69c8ac49c3d2b57d) Co-authored-by: Lincoln <71312724+Lincoln-developer@users.noreply.github.com> Co-authored-by: blurb-it[bot] <43283697+blurb-it[bot]@users.noreply.github.com> Co-authored-by: Erlend E. Aasland <erlend@python.org> <!-- gh-issue-number: gh-109234 --> * Issue: gh-109234 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--110293.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::,Miss Islington (bot),31488909,73,1,2,2,1,0,5a1ff89dd432d75e7471fbef063ad804e4044eda::
https://api.github.com/repos/python/cpython,110292,docs/cmdoption::main,0,merged,docs::skip issue::awaiting core review::skip news::,``cmdoption`` has been [deprecated](https://www.sphinx-doc.org/en/master/usage/domains/standard.html#directive-option) since Sphinx 1.0. A <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--110292.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::,Adam Turner,9087854,89,3,243,243,18,1,8ebd8085aaebeb43450460ab13cde4ea206346b0::99cd45a5dd2ddb6e3e46063bbeb74b38f5e1676a::9bacef04e73addff88a9df38c99076924c2e5785::
https://api.github.com/repos/python/cpython,110291,managed_dict_compat::main,0,merged,docs::skip news::,"<!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-107073 --> * Issue: gh-107073 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--110291.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::",Victor Stinner,194129,1148,1,3,1,1,0,6eb6cd5f7f6d0ece92b766c19fbb22125137ea64::
https://api.github.com/repos/python/cpython,110290,backport-110179-311::3.11,0,merged,skip issue::skip news::,(cherry-picked from commit https://github.com/python/cpython/commit/014aacda6239f0e33b3ad5ece343df66701804b2)::,Alex Waygood,66076021,141,1,41,42,3,1,cf904bafc7c9fb5b499c84523d19dc3a8424a8b5::
https://api.github.com/repos/python/cpython,110288,backport-110179-312::3.12,0,merged,skip issue::skip news::,(cherry-picked from commit 014aacda6239f0e33b3ad5ece343df66701804b2)::,Alex Waygood,66076021,141,1,53,54,3,1,8807e71582204d54f4ad8d1a0dc23c564b7a36e9::
https://api.github.com/repos/python/cpython,110286,lazy-warnings-imports::main,0,merged,performance::,"`warnings` is a pretty cheap import, so the import-time saving from deferring it is usually pretty minimal. However, it's also a textbook example of an import that should be deferred wherever reasonable. Most of the time, it's only imported so that a `DeprecationWarning` can be emitted, and we should try to make it so that users only have to pay the (small) performance penalty from it being imported if they actually hit the specific code path that's deprecated. Nonetheless, since the performance impact of importing `warnings` is so small, I've tried to avoid modules that make multiple uses of `warnings` -- it's not particularly DRY to have import warnings repeated several times in the same module. The one exception I made here is `argparse`: `argparse` really should be importing the absolute minimum set of modules given that it's a CLI framework (see #74338 for previous discussion). <!-- gh-issue-number: gh-109653 --> * Issue: gh-109653 <!-- /gh-issue-number --> ::",Alex Waygood,66076021,141,2,10,6,6,0,0229f59cb30277e056a243ec6ad237fc9ce94832::653d1faf729fc46b8b57f0551019e86d079aae66::
https://api.github.com/repos/python/cpython,110285,backport-2d4865d-3.12::3.12,0,merged,tests::,(cherry picked from commit 2d4865d775123e8889c7a79fc49b4bf627176c4b) Co-authored-by: Xuehai Pan <XuehaiPan@pku.edu.cn> <!-- gh-issue-number: gh-110267 --> * Issue: gh-110267 <!-- /gh-issue-number --> ::,Miss Islington (bot),31488909,73,1,75,2,2,0,d0893dcea2935c21d6053c248ee3d51f739a0e2f::
https://api.github.com/repos/python/cpython,110284,backport-2d4865d-3.11::3.11,0,merged,tests::,(cherry picked from commit 2d4865d775123e8889c7a79fc49b4bf627176c4b) Co-authored-by: Xuehai Pan <XuehaiPan@pku.edu.cn> <!-- gh-issue-number: gh-110267 --> * Issue: gh-110267 <!-- /gh-issue-number --> ::,Miss Islington (bot),31488909,73,1,75,2,2,0,dbab1b0ee0b894b355ec3d379422ee6835788707::
https://api.github.com/repos/python/cpython,110281,backport-f1663a4-3.11::3.11,0,merged,skip issue::skip news::,This resolves a Dependabot security alert on the repository for urllib3==2.0.4. (cherry picked from commit f1663a492e14c80c30cb9741fdc36fa221d5e30a) Co-authored-by: Alex Waygood <Alex.Waygood@Gmail.com> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--110281.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::,Miss Islington (bot),31488909,73,1,7,7,1,1,27e0339ff640fa1aa28e36090bc126cb40e23b3a::
https://api.github.com/repos/python/cpython,110280,backport-f1663a4-3.12::3.12,0,merged,skip issue::skip news::,This resolves a Dependabot security alert on the repository for urllib3==2.0.4. (cherry picked from commit f1663a492e14c80c30cb9741fdc36fa221d5e30a) Co-authored-by: Alex Waygood <Alex.Waygood@Gmail.com> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--110280.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::,Miss Islington (bot),31488909,73,1,7,7,1,1,dc2ce73f76e2cf5e42ed133f2996b9040cc559d9::
https://api.github.com/repos/python/cpython,110278,docs-security::main,0,merged,skip issue::skip news::,"This resolves a [Dependabot security alert](https://github.com/python/cpython/security/dependabot/3) on the repository for `urllib3==2.0.4`. I followed the instructions here for regenerating the dependencies, which resulted in several other bumps as well: https://github.com/python/cpython/blob/bb2e96f6f4d6c397c4eb5775a09262a207675577/Doc/requirements-oldest-sphinx.txt#L9-L13 The only one that's required to resolve the security alert is the `urllib3` bump, though; we could stick to just that if it's preferred. <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--110278.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::",Alex Waygood,66076021,141,1,7,7,1,0,0f7af0e870388dd83bd3107fa4983d342b74d234::
https://api.github.com/repos/python/cpython,110277,no-more-test-unicode::main,0,merged,skip news::,`test_unicode` does not exist <!-- gh-issue-number: gh-110276 --> * Issue: gh-110276 <!-- /gh-issue-number --> ::,Alex Waygood,66076021,141,1,1,1,1,0,3b615022ee791ab508bd03efb3575f6d8d41bb42::
https://api.github.com/repos/python/cpython,110274,dataclasses-replace-invalid-keyword::main,0,merged,,dataclasses.replace() now raises TypeError instead of ValueError if specify keyword argument for a field declared with init=False or miss keyword argument for required InitVar field. <!-- gh-issue-number: gh-110273 --> * Issue: gh-110273 <!-- /gh-issue-number --> ::,Serhiy Storchaka,3659035,401,1,14,11,3,0,ed10ae712b49c39ef5260aa002fe79aff22b208b::
https://api.github.com/repos/python/cpython,110272,test-structseq-pickle-copy::main,0,merged,tests::,"<!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> Resolves #110267 <!-- gh-issue-number: gh-110267 --> * Issue: gh-110267 <!-- /gh-issue-number --> ::Nitpick: usually the left argument of `assertEqual()` is the actual value, and the right argument is the expected value. It is not always consistent in old tests, and it does not affect the correctness of tests, but it is easier to read if it is in such order. In this case it should be `self.assertEqual(t2.__class__, t.__class__)` (and similarly in other tests).::This test is no longer needed.::",Xuehai Pan,16078332,443,4,75,2,2,0,e94b7e9c93d646af2300f885ad28847840ec660d::a64af6ccece2494f393aa86c263426c1d955b064::e682580a55f403b8173bebf865d621da572d982d::15b72bce6f514a497cd306bade7c6fd5f1a2ee4e::
https://api.github.com/repos/python/cpython,110271,gh-110259::main,0,merged,,<!-- gh-issue-number: gh-110259 --> * Issue: gh-110259 <!-- /gh-issue-number --> ::,Pablo Galindo Salgado,11718525,847,2,128,10,5,0,2c2c980b9af58b43dba23c64c4002c76be041b4c::492e0ad03a7db2bc6fbd958d5bfc645b125de96d::
https://api.github.com/repos/python/cpython,110269,issue-110266::main,0,closed,awaiting review::skip news::,"Fixes this warning that happens on all PRs: <img width=""563"" alt=""Снимок экрана 2023-10-03 в 12 52 15"" src=""https://github.com/python/cpython/assets/4660275/451f7ffd-66d5-4c2f-aa54-8603b303a5c0""> <!-- gh-issue-number: gh-110266 --> * Issue: gh-110266 <!-- /gh-issue-number --> ::",Nikita Sobolev,4660275,4663,1,5,10,2,0,3c46ef77a34eb5ff0f40f3cdfa9ec0c7e6d3676c::
https://api.github.com/repos/python/cpython,110268,'test-msvcrt-process'::main,0,merged,tests::skip news::,"<!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-110147 --> * Issue: gh-110147 <!-- /gh-issue-number --> ::Does creating a new process separate the console between the parent and child process? Do you think that passing CREATE_NEW_CONSOLE could make the test more reliable? https://learn.microsoft.com/en-us/windows/win32/procthread/process-creation-flags > The new process has a new console, **instead of inheriting its parent's console (the default)**. For more information, see [Creation of a Console](https://learn.microsoft.com/en-us/windows/console/creation-of-a-console). >  This flag cannot be used with DETACHED_PROCESS. I suggest you creating a helper function for ``subprocess.run(cmd, check=True, capture_output=True)`` and add CREATE_NEW_CONSOLE flag. Something like: ```py startupinfo = subprocess.STARTUPINFO(dwflags=subprocess.CREATE_NEW_CONSOLE) subprocess.run(..., startupinfo=startupinfo) ```::Can you use textwrap.dedent() to make the code more readable? ```py code = textwrap.dedent("""""" ... your code ... ... on multiple lines ... """""") ```::Done.::Updated, the `CREATE_NEW_CONSOLE` should be passwd as `creationflags`.::flush_console_input_buffer() was only used in that test. If you don't need it anymore, please remove also the associated C code write_input(): is it used somewhere else?::Ok, I'll remove it after current tests finished to see if this change is stable. The `write_input` is used in `test_winconsoleio` so we should keep it.::Removed.::```suggestion write_input(stdin, {ascii(c_encoded)}) ``` Same remark for test_getwche().::it's surprising to open a file to ""read"" and then ""write"" into it. does it work with ""wb"" or ""w+b""?::test_getwche() looks like a copy/paste, you just replaced getwch() with getwche(). Can you rename the function to check_getwch(func), so test_getwch() would call check_getwch(""getwch"") and test_getwch() would call check_getwch(""getwche"")?::It's not C or C++ :-) ```suggestion import msvcrt ``` You can also move ``if sys.platform != ""win32"":`` test before ""from test..."" imports.::It may be safer to run this test in a subprocess with a new console, no?::Yes it would, but it's annoying. We might want to put it behind a resource marker, as the new console will pop up new GUI when it runs.::No, stdin must be opened as read-only in Python, so there is a `write_input` to do the magic. And this usage is copied from: https://github.com/python/cpython/blob/main/Lib/test/test_winconsoleio.py#L163-L164::Would CREATE_NO_WINDOW flag prevent popups? > The process is a console application that  is being run without a console window. Therefore, the console handle for  the application is not set. This flag is ignored if the application is not a console application, or if it is used with either CREATE_NEW_CONSOLE or DETACHED_PROCESS. says: https://learn.microsoft.com/en-us/windows/win32/procthread/process-creation-flags::Seems it should work, I'll try it.::Ok::> the console handle for the application is not set Means no console and the test is irrelevant. > ignored if ... used with either CREATE_NEW_CONSOLE This is the flag that you'd use to make the test more reliable, and it's incompatible with `CREATE_NO_WINDOW`.::The imports behind the  `if sys.platform != ...` test are modules that can't be used on non Windows platforms. The `test.support` can be used in these non Windows platforms, so I think we should group them like current codes?::Ok, and added the `@requires_resource('gui')` marker to avoid the console pop-up. For the tests `test_getche` and `test_getch`, they uses `msvcrt.ungetch` instead of the magic `write_input`, I think this stuff is stable enough, this test file is added and disabled days ago, so I fixed it serveral times, and never saw them failed once. So I think we should keep it (`test_getche` / `test_getch`) as current.::I suggest moving the decorator to run_in_separated_process() and explain why you require GUI resource. For example, say that CREATE_NEW_CONSOLE creates a ""popup"" window.::Done.::```suggestion # CREATE_NEW_CONSOLE creates a ""popup"" window. @requires_resource('gui') ```::> For the tests test_getche and test_getch, they uses msvcrt.ungetch instead of the magic write_input, I think this stuff is stable enough Hum, ok. Let's see if CI will agree with you :-) I'm fine with keeping them in the same process for now.::",AN Long,699636,487,13,31,107,3,0,c88252ee9c1096d92a0993289d305c89667d0c24::32f0209aec07de1048f5a7a9e397a0957572f5a7::db2b10b12d9308d35f8e62d5767a620beab9b3dd::7ee4a1f1918806d427cb1fa3fe2b5c76a24405df::1f6e6ca5b4d3dfd8ed0721ac330709d0e18ccc13::4ecbd84fd0905cc3cd4c5185718510bad0bef4de::93ca64896906bad00081b5aedfb3ace9a449f325::2e7cd6d45763b83ee8fab543762d3265593f13c9::a469eae6a59aecaf101bc810040cdf540876b606::a0d2972ceafabfc14b3aa1779e68f1c15ca3e39b::44ef80a950b6b0f1186f9cfb81ad04eed4ba641a::f222132877b7050c3080de2900e26e081facaf03::a3d0008e3d75a8eee725cd4336c4d849fd1c7a9d::
https://api.github.com/repos/python/cpython,110265,issue-110264::main,0,closed,awaiting review::skip news::,"As I said, I am sorry! 😆 <!-- gh-issue-number: gh-110262 --> * Issue: gh-110262 <!-- /gh-issue-number --> <!-- gh-issue-number: gh-110264 --> * Issue: gh-110264 <!-- /gh-issue-number --> ::Add `PyErr_WriteUnraisable()`.::",Nikita Sobolev,4660275,4663,1,6,2,1,0,7b213cde91bd51e7807de77368702e7414705c62::
https://api.github.com/repos/python/cpython,110263,issue-110262::main,0,closed,awaiting review::skip news::,"Sorry for the PRs spam, @JelleZijlstra! <!-- gh-issue-number: gh-110262 --> * Issue: gh-110262 <!-- /gh-issue-number --> ::",Nikita Sobolev,4660275,4663,1,3,1,1,0,3640877b532eef418aaed3c9700bbdce3fff6066::
https://api.github.com/repos/python/cpython,110261,issue-110260::main,0,merged,skip news::,"<!-- gh-issue-number: gh-110260 --> * Issue: gh-110260 <!-- /gh-issue-number --> ::```suggestion } ```::`v` is leaked here.::This can be replaced with `PyList_SET_ITEM`; we know that `cc` is a list.::This can be replaced with `PyList_SET_ITEM`; we know that `cc` is a list.::But what if VMIN or VTIME are out of range? We do not know this, their definition is out of our control.::Ah, good catch. Disregard my comment.::See https://github.com/python/cpython/pull/110261#discussion_r1345477502::",Nikita Sobolev,4660275,4663,2,32,17,1,0,b905115f5dbf570cf8c2fc4bccab84a2ae6c4e4b::2f4d14444d6c0e878e87a85ff37d0271c0a7c339::
https://api.github.com/repos/python/cpython,110258,structseq-new::main,0,merged,,"<!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> Fixes #110235 In this PR, we iterate over `dict` keys and check if there are duplicate fields provided by `sequence` or there are any unexpected field names. <!-- gh-issue-number: gh-110235 --> * Issue: gh-110235 <!-- /gh-issue-number --> ::Here we have a set rather than a list in the error message: ```python TypeError: somestructseq() got unexpected field name(s): {'a', 'b', 'c'} ``` vs. ```python TypeError: somestructseq() got unexpected field name(s): ['a', 'b', 'c'] ``` Should we use a list instead?::Usually we do not have tests for `__reduce__()`. Instead we have tests for pickling and copying. I opened a separate issue for this: #110267.::These tests do not actually test duplicate fields, so it is better to move them to `test_constructor`. There is a test for positional first argument and keyword ""dict"" argument. I think that it is better to pass both arguments as positional for most tests, but add also a case for both passed by keyword.::I reverted and moved these changes to another PR: - #110272::I add this guard check before the for-loop to avoid unnecessary dictionary lookup for empty `dict`.::",Xuehai Pan,16078332,443,19,84,7,3,0,da93f2f18d37c415e5f9d5bafdfa6e6cab36ded2::9632370867ada1a87a670e599735017bbd9765b9::464cbaf579cacdf2289ab319a37f8a04254e98ad::11a8435f7ca60f30f8ba7c2f78174373eaa46149::9fc15015b2714931cd75a0a72f94ee457cf97e43::981e40371a20f153abe34137b02211e90414eb42::67954db973d0a5d5f18de9cbee66ca5b18c2214f::06c5d447156c1757217e45b2f0d8f9185712ea1d::9c3f7d2bddc2cab978d4ed4513e68b029548e1b7::c927e1ee85923d69487bd1358404c3bb56cbc338::c173451172b29ba81c188c35b6c3a68422916631::704ccaa89089168ba33677d0a3ef64ea714b8749::8f216b85d3a82ad3a06e1e8ede783ab132c14093::04a19ccd20484ff8f01f1db8e747bde3e3d1ab65::782fa4a2625fde48d81c15ea8ce083acce376e8f::297459efb6254e2546d37c52b3f5df8e47dc6e95::bd2782c3ef97db2194b0a2bd40b533e9a6eb3807::04a554d2682846e10b0733f1c8b55be0a7283728::41e4d0b7f8380c198efcc523abcf0d9e1f2f92b0::
https://api.github.com/repos/python/cpython,110257,backport-8c07137-3.12::3.12,0,merged,docs::skip issue::skip news::,(cherry picked from commit 8c071373f12f325c54591fe990ec026184e48f8f) Co-authored-by: Lele Gaifax <lele@metapensiero.it> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--110257.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::,Miss Islington (bot),31488909,73,1,1,1,1,1,f366403461c6b0afe61217579bafb11ab718400c::
https://api.github.com/repos/python/cpython,110255,wn312-typo::main,0,merged,docs::skip issue::skip news::,<!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--110255.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::,Lele Gaifax,412797,28,1,1,1,1,0,dc5456511e7878d872f35a3f05bd9729e7a2402b::
https://api.github.com/repos/python/cpython,110254,backport-1001233-3.11::3.11,0,merged,skip issue::skip news::,(cherry picked from commit 1001233fe16a02f70ca9bccf66b018cc63fe784c) Co-authored-by: Hugo van Kemenade <hugovk@users.noreply.github.com>::,Miss Islington (bot),31488909,73,1,0,1,1,0,f6efc2f80f0939b1da8b286b071c17a36dcefacc::
https://api.github.com/repos/python/cpython,110253,backport-1001233-3.12::3.12,0,merged,skip issue::skip news::,(cherry picked from commit 1001233fe16a02f70ca9bccf66b018cc63fe784c) Co-authored-by: Hugo van Kemenade <hugovk@users.noreply.github.com>::,Miss Islington (bot),31488909,73,1,0,1,1,0,cb875edc5216007f0942067ef02957a98444ea39::
https://api.github.com/repos/python/cpython,110252,main::main,0,closed,awaiting core review::,"Updated macOS and Windows installers to SQLite 3.43.1 ``` I made changes to 4 files following the templated structure for this kind of update which was outlined in previous issues. The files that were changed are Mac/BuildScript/build-installer.py PCbuild/get_externals.bat PCbuild/python.props PCbuild/readme.txt ``` The issue is  gh-109286 ::Please revert this unrelated indentation change.::Is there a reason why you removed `url`?::This should be a md5 checksum of `https://sqlite.org/2023/sqlite-autoconf-3430100.tar.gz`.::Now fixed on my end, will push soon.::Sorry about that, fixed on my end now, will push after I address the other issues here.::Fixed on my end, will be pushing soon.::Please remove this and add two NEWS items; one for macOS, and one for Windows. Also note that it is _macOS_, not _MacOS_.::",,76231120,0,0,0,0,0,0,
https://api.github.com/repos/python/cpython,110251,run-func-in-interpreter::main,0,merged,skip news::,<!-- gh-issue-number: gh-76785 --> * Issue: gh-76785 <!-- /gh-issue-number --> ::,Eric Snow,1152074,290,13,439,26,3,0,c3a669edb6d84ebd725fb02f6f96acf96156cc4f::5cf8df62b2b87c20b198b300d8e3e48a77b2330e::7a39e9f320e15a856b774d55bda534ddd29a8764::a25c7c763ba98ad7ee207b24d668d748c3809e15::5b3f4e8e4cb4acf79a4dab4584a5e0dca3fab771::eece6f97d2ed452e070619c47c05db6917a5ccdd::ed70ffc67a8a5befd1301910ccd4e27ce20f9037::0c443ad0575798c31d75bd6a3ff5bb4a95bf848c::b8e32fefb862c243d8051b5088ed425686940a4b::7e8320c903a6eb36c7c094b5a6a59953dfd14743::f5589e00680bec8a3a54d517a4d04ddf07e26ac0::8dc6609a8c2b5c53f76cad67c21d36c5412c85d2::e12d3a234b7448847c7163f18a7488f4a1030d0d::
https://api.github.com/repos/python/cpython,110249,dis-show-caches::main,0,merged,skip issue::,The `dis` command line is undocumented (apart from https://docs.python.org/3.13/library/cmdline.html) but darn handy. I've wanted to be able to to pass the `inline_caches=True` flag many times. This PR fulfills my wish. I will merge this once CI passes.::,Guido van Rossum,2894642,21056,4,4,1,2,0,54ebc24c2212962c1929b458fde18c7b6233e2e7::3b0afd1673428dc38e11f877f4a7f8dcd07ff56a::41f9e669c5682a912282eebc7534550af8c51ec7::0fc96fce2ed7bd83136171ab6fd9cf543c3ea2ac::
https://api.github.com/repos/python/cpython,110248,interpreters-module-preserve-traceback-str::main,0,merged,skip news::,This is a temporary fix.  The full fix may involve serializing the traceback in some form. <!-- gh-issue-number: gh-76785 --> * Issue: gh-76785 <!-- /gh-issue-number --> ::,Eric Snow,1152074,290,1,4,0,1,0,198ad760257a3ef6b9733e1be8d94ee21e8bec54::
https://api.github.com/repos/python/cpython,110247,backport-21a6263-3.12::3.12,0,merged,,(cherry picked from commit 21a6263020db17020b2886f996bc23aa8cb7fbdf) Co-authored-by: Alex Waygood <Alex.Waygood@Gmail.com> <!-- gh-issue-number: gh-109653 --> * Issue: gh-109653 <!-- /gh-issue-number --> ::,Miss Islington (bot),31488909,73,1,3,1,2,1,6277f18c2f552607d171290357a77c40c523f428::
https://api.github.com/repos/python/cpython,110246,channel-send-buffer::main,0,merged,skip news::,This is still a test module. <!-- gh-issue-number: gh-76785 --> * Issue: gh-76785 <!-- /gh-issue-number --> ::,Eric Snow,1152074,290,20,467,67,13,0,ab2aa3ba491f5d69dd703c0150a12fcf5a1d9f3d::4d103dd4e5bbad54d3a34b349070248da1b39438::faf77787b172c9e24e781ed8784a83c35b1803b0::5c5662dd9f2dd78ad80cd760c33406d98bd168d7::573abef2ae87f2eaf8dc0b4faf9532f98e8694f9::be7e9279b56499887f9ae21aa5242f2274b541d7::955989db18b56c9917523e3fd00036a523e04091::05d13f51e11f5e9091feefc828a7953ffdbaea81::3e4e97799e6c45a93f039a697b07c725e483a401::16994950ecb04f88d1881e34061f35eaff859642::0c216ff82efb431bd17241b675c567d5239a3af7::0ad6f4190330e84018d7df74ef7e17b2cb90cf9e::56e3774fb9db88e618b76c17014aaf505794eed4::272488a8683b3639c3704f76671e03e708d4e7ad::ceb3dae6ad1e1df025f891369d4220f1f9fcabe7::873eec23c996d0d23a09d6d3109430b2e996635c::da9779fe12fba29d89e5ec62ab16adbd89a4c0a8::dea173a1c9c4b3ee118d5e8115be153322f4f9b2::0271b4a642ce682cfd3d12569623cbdc7886ba52::fc15f77681f819b5c195673f9ced76fa8fae7fc9::
https://api.github.com/repos/python/cpython,110245,fix-using-wrong-tstate::main,0,merged,skip news::,"In a few places we switch to another interpreter without knowing if it has a thread state associated with the current thread.  For the main interpreter there wasn't much of a problem, but for subinterpreters we were mostly okay re-using the tstate created with the interpreter (located via `PyInterpreterState_ThreadHead()`).  There was a good chance that tstate wasn't actually in use by another thread. However, there are no guarantees of that.  Furthermore, re-using an already used tstate is currently fragile.  To address this, now we create a new thread state in each of those places and use it. One consequence of this change is that `PyInterpreterState_ThreadHead()` may not return `NULL` (though that won't happen for the main interpreter). <!-- gh-issue-number: gh-109860 --> * Issue: gh-109860 <!-- /gh-issue-number --> ::",Eric Snow,1152074,290,13,151,68,8,1,2117772f65a3b749702655ffc3261565091e2102::23828a342f3a3a3ef02fa79bea077742005a0252::b807906be130ae2b9c525815badc604e9be11413::3e10a5c08d84277ccbbf9b960bbac7962b8c129e::15e978a68b545e6e01f88f8b5c3840570b03e76b::0b60d6dd568b89b18dcbd73c5b3dd8affe6b929d::781cb53c186965b6e3af868bf2803db8149d490d::cd288b5ff3e4c68f3fc8970c22d5726de88d55aa::4afdf7b57f090e8e00150723928aeb642370200e::aba79e38e5694010498e875b2c6219b01e51e4f0::2c185543540c3e20dac5fc540d2eaca900bb0554::845c2bd36c1bdf96dba060329b07a6f05f0225bd::fec49b2d301d0bb5d2a3166a5b310ca16d4f051d::
https://api.github.com/repos/python/cpython,110244,backport-4596c76-3.12::3.12,0,merged,skip news::,(cherry picked from commit 4596c76d1a7650fd4650c814dc1d40d664cd8fb4) Co-authored-by: Nikita Sobolev <mail@sobolevn.me> <!-- gh-issue-number: gh-110241 --> * Issue: gh-110241 <!-- /gh-issue-number --> ::,Miss Islington (bot),31488909,73,1,5,1,1,0,4431a5875032a69ecf42ae88c467e8a8825b1327::
https://api.github.com/repos/python/cpython,110242,issue-110241::main,0,merged,skip news::,<!-- gh-issue-number: gh-110241 --> * Issue: gh-110241 <!-- /gh-issue-number --> ::,Nikita Sobolev,4660275,4663,1,5,1,1,1,4b0b2dbfbb44b0d672c0a3cc1c022e697fa31f74::
https://api.github.com/repos/python/cpython,110240,rm-requirements-test.txt::main,0,merged,skip issue::skip news::,"<!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> In 2020, PR https://github.com/python/cpython/pull/19909 added `Misc/requirements-test.txt` and installed it as part of `.github/workflows/coverage.yml` and `.travis.yml`. In 2021, however, PRs https://github.com/python/cpython/pull/25679 and https://github.com/python/cpython/pull/30257 removed those CI files, so `Misc/requirements-test.txt` is unused. Let's remove it. ::",Hugo van Kemenade,1324225,628,1,0,1,1,0,2269ab30ec59494c28f2f6ec3f83908130060848::
https://api.github.com/repos/python/cpython,110239,rl_compdisp_func_t::main,0,merged,,"Fixes compile with BSD libedit versions since April 2023. Requires backport to 3.12 (should cleanly apply). Requires backport to 3.11 and 3.10 using this manual cherry-pick: https://github.com/Bo98/cpython/commit/b0c571f6ad0f233ba9d0f24e32fc8db1081be247 I believe 3.9 and older don't technically support libedit except Apple's 2012 version, but a similar cherry-pick could be made if desired. <!-- gh-issue-number: gh-109191 --> * Issue: gh-109191 <!-- /gh-issue-number --> ::Style nit; please follow the [GNU Autoconf style guide](https://www.gnu.org/savannah-checkouts/gnu/autoconf/manual/autoconf-2.71/html_node/Coding-Style.html). ```suggestion AC_CHECK_TYPE([rl_compdisp_func_t], [AC_DEFINE([HAVE_RL_COMPDISP_FUNC_T], [1], [Define if readline supports rl_compdisp_func_t])], [], [readline_includes]) ``` Even though configure.ac is coloured with a variety of styles, I prefer to stick with a clean style for all new code.::Sorry, fixed now! I indeed just copy-pasted the exact style of the readline checks before it.::```suggestion Fix compile error when building with recent versions of libedit. ```::",Bo Anderson,1190754,90,5,31,1,5,1,e2e2cf2e57127f793db1e4fe7959ac5b3e7038cb::b56fd6164dbaa5ccaa7e17624d0ad6e16a1f1233::8da562c3bc1d9f62becfda144d427dd645fd6a81::19e59506b87d1e315b89453d02ef1d59c617688b::3ef8145d3476ae3a252297ea9ffde1f015da0ba9::
https://api.github.com/repos/python/cpython,110238,fix-issue-110237::main,0,merged,,"fix #110237 <!-- gh-issue-number: gh-110237 --> * Issue: gh-110237 <!-- /gh-issue-number --> ::```suggestion Fix missing error checks for calls to ``PyList_Append`` in ``_PyEval_MatchClass``. ```::```suggestion if (PyList_Append(attrs, subject) < 0) { ``` I think this is more idiomatic::Never mind, either is fine.::",,47365157,11,3,12,3,2,0,600883f645aa287f8d96900acef5459d58797811::794c5dffec3a5432eed04a2f34c177b505459bd3::57ff2b395aed69faabf8f384c7ae0414bd08f2b9::
https://api.github.com/repos/python/cpython,110236,channel-fix-module::main,0,merged,skip news::,* add `RecvChannel.close()` and `SendChannel.close()` * make `RecvChannel` and `SendChannel` shareable * expose `ChannelEmptyError` and `ChannelNotEmptyError` <!-- gh-issue-number: gh-76785 --> * Issue: gh-76785 <!-- /gh-issue-number --> ::,Eric Snow,1152074,290,9,206,25,3,0,e958fbc8cb638b9b405b87446222fa837575b779::74b3003f0a666e74e277b3d705d8ba57990c3775::e424ab556ef40ed12007fbe158e76077f916e404::90d024d399d5a66b7184b3c300984abbc7406d86::996596ba9fe0902703a47c0f91151608aa69f616::56fec100f8402b4efc9f65bfe9d60c07ccb6fb7d::b3f29ceaa82074e3fba6c3e77e14520ced7921b6::cac4a7686ffffe5b877391ce5470eb09129863a5::a8f6e5e63856a9eac1f6f7ccd3adff90bd26ed13::
https://api.github.com/repos/python/cpython,110233,backport-109790-312::3.12,0,merged,,"(cherry-picked from commit 7df8b16d28d2418161cef49814b6aca9fb70788d) <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-109782 --> * Issue: gh-109782 <!-- /gh-issue-number --> ::",Alex Waygood,66076021,141,1,15,13,3,0,1ca2a2fa170feaab996dde741642420f33b13c72::
https://api.github.com/repos/python/cpython,110232,doc_pcbuild_add_project11::3.11,0,merged,skip news::,"(cherry picked from commit 6387b5313c60c1403785b2245db33372476ac304) <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-108494 --> * Issue: gh-108494 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,1,28,0,1,0,0948cda64d602ff16c64d630c5ca12a8f035ef8c::
https://api.github.com/repos/python/cpython,110231,cleaner_factor::3.12,0,merged,docs::skip issue::skip news::,Fix a missed backport. <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--110231.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::,Raymond Hettinger,1623689,3560,2,1,3,1,0,1bbedc9659c82794e417f1eb72887bcde4b905ca::a2d13a6a2b99d5d1e9d12ff897725817260215c9::
https://api.github.com/repos/python/cpython,110230,backport-6387b53-3.12::3.12,0,merged,skip news::,(cherry picked from commit 6387b5313c60c1403785b2245db33372476ac304) Co-authored-by: Victor Stinner <vstinner@python.org> <!-- gh-issue-number: gh-108494 --> * Issue: gh-108494 <!-- /gh-issue-number --> ::,Miss Islington (bot),31488909,73,1,28,0,1,0,562dc615f855490e006dc271f0f38451389d8c06::
https://api.github.com/repos/python/cpython,110228,main::main,0,closed,docs::awaiting review::skip news::,"install in venv.rst <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--110228.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::```suggestion .. code-block:: bash ```::",,146452704,0,1,10,0,1,0,2d6336b4b85abcfef8d49f3a5a1bd51a67497461::
https://api.github.com/repos/python/cpython,110226,backport-5245b97-3.11::3.11,0,merged,tests::docs::skip news::,* gh-109649: Enhance os.cpu_count() documentation * Doc: Specify that os.cpu_count() counts *logicial* CPUs. * Doc: Specify that os.sched_getaffinity(0) is related to the calling thread. * Fix test_posix.test_sched_getaffinity(): restore the old CPU mask when the test completes! * Restore removed text (cherry picked from commit 5245b97e132ae071e2b574224e0788cab62fdcc9) Co-authored-by: Victor Stinner <vstinner@python.org> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--110226.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::,Miss Islington (bot),31488909,73,1,10,7,2,0,cfc236c1caf74010647b7d74e0477f7a58eeaa19::
https://api.github.com/repos/python/cpython,110225,backport-f194165-3.12::3.12,0,merged,skip issue::skip news::,(cherry picked from commit f19416534a546460fdf6a0739b70e44d1950a073) Co-authored-by: Hugo van Kemenade <hugovk@users.noreply.github.com>::,Miss Islington (bot),31488909,73,1,4,4,4,0,fc999eb49633932b6e0a751fe1cca2db377cc90d::
https://api.github.com/repos/python/cpython,110224,backport-732ad44-3.12::3.12,0,merged,tests::skip news::,"Confirmed that without the C changes from GH-108517, this test still segfaults with only 10 weakrefs. (cherry picked from commit 732ad44cec971be5255b1accbac6555d3615c2bf) Co-authored-by: Jelle Zijlstra <jelle.zijlstra@gmail.com> <!-- gh-issue-number: gh-110178 --> * Issue: gh-110178 <!-- /gh-issue-number --> ::",Miss Islington (bot),31488909,73,1,1,1,1,1,6c82b0ba5cb217c310cce496aa5c8e686254f6d5::
https://api.github.com/repos/python/cpython,110223,copy-replace-structseq::main,0,merged,,"<!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> Resolves #110222 ~~The implementation in this PR is roughly equivalent to:~~ ```python class SomeStructSeq: def __replace__(self, /, **kwargs): if self.n_unamed_fields > 0: raise TypeError(f'__replace__() is not supported for {self.__class__} ' 'because it has unnamed field(s)') field_names = self._get_field_names() _, (tup, dct) = self.__reduce__() seq = list(tup) for i, name in field_names[:self.n_sequence_fields]: if name in kwargs: seq[i] = kwargs.pop(name) for name in field_names[self.n_sequence_fields:]: if name in kwargs: dct[name] = kwargs.pop(name) if kwargs: raise TypeError(f'Got unexpected field name(s): {list(kwargs)!r}') return self.__class__(seq, dct) ``` Refactored: ```python class SomeStructSeq: def __replace__(self, /, **kwargs): if self.n_unamed_fields > 0: raise TypeError(f'__replace__() is not supported for {self.__class__} ' 'because it has unnamed field(s)') clone = self._clone() field_names = self._get_field_names() if kwargs: for i, name in enumerate(field_names): if name in kwargs: clone[i] = kwargs.pop(name) if kwargs: raise TypeError(f'Got unexpected field name(s): {list(kwargs)!r}') return clone ``` <!-- gh-issue-number: gh-110222 --> * Issue: gh-110222 <!-- /gh-issue-number --> ::I think that it is better to test it in `test_structseq` module. Most `__replace__` implementations are tested together with other methods of their class. Only exceptions are `namedtuple` and `dataclass` because they are fabrics to create new classes. It may be worth to split the test on two tests: with and without unnamed fields.::I think that TypeError is more appropriate exception. Yes, `namedtuple` raises ValueError, but it is unusual. Perhaps it should be changed.::> `namedtuple` raises ValueError `dataclass.__replace__` also raises `ValueError`. https://github.com/python/cpython/blob/6387b5313c60c1403785b2245db33372476ac304/Lib/dataclasses.py#L1555-L1586::It is only for InitVar fields. TypeError is raised for unknown names.::Thanks for the clarification. I update the exception type to `TypeError` for both `PyStructSequence` and `collections.namedtuple`.::Please revert this change and open a new issue for it. It is a breaking change and should be discussed and separately documented.::It is not related change.::I am not sure it is related here.::Few suggestions: * Test that the result has the correct type, not simple tuple. * Use float values. Currently there are no restrictions, but normally they are floats. * Use subscription and slices to get original field values. ```suggestion self.assertEqual(copy.replace(t), t) self.assertIsInstance(copy.replace(t), os.times_result) self.assertEqual(copy.replace(t, user=1.5), (1.5, *t[1:])) self.assertEqual(copy.replace(t, system=2.5), (t[0], 2.5, *t[2:])) self.assertEqual(copy.replace(t, user=1.5, system=2.5), (1.5, 2.5, *t[2:])) ```::You can simply use `os.times()`. It guarantees that the result is correct.::Please test also the type and ""invisible"" attributes of the result. ```suggestion t2 = copy.replace(t) self.assertEqual(t2, (1970, 1, 1, 0, 0, 0, 3, 1, 0)) self.assertIsInstance(t2, time.struct_time) self.assertEqual(t2.tm_zone, 'GMT') ```::It can be simply `return NULL`.::It is not borrowed.::```suggestion assert os.times_result.n_unnamed_fields == 0 assert os.times_result.n_sequence_fields == os.times_result.n_fields ```::```suggestion assert time.struct_time.n_unnamed_fields == 0 assert time.struct_time.n_sequence_fields < time.struct_time.n_fields ```::",Xuehai Pan,16078332,443,30,156,1,3,0,6af4757e133933c3909635608b2da8a54edb8b6a::1960d8dea412f1ce1433b8edcee2fbc5541f71da::5ee97a8d6173db5afe6473c03f7267fe43b11a13::e8e6be484d29124c4fa75ea91cca6a7b260ba247::43324a4bcbccc9d4a9d7e48bdbddfab5c54c7907::9e6cd98d428981b485127ca0e1fe4a0bc43b9bfe::350a3d04fa62f27f053c0d06944cb7ef6e416185::c4655cabb32533a2bf382433de860eb3a811663c::a9dba93357e583b4c9bcc2832a73683b7c31b417::83fd01b1fd6cce307eaa711fad11e3b536494f15::73e5e65cf801460508bf787770a0d95dc68aa809::7abaf649deef9372d3a5f98afe86b2643f41647e::26eedbc8518d7e0faad5cb4ae2172817e8c1b735::d74b44984c4253c6ea4771893ffba314704360b7::5186c35d1a6b638c5d9718d958d2ea87d24c7e52::0f74efaad22897726026587b348065335dc70ae9::43a81b0417b28ccdb73f54b5c1ae02e1d58621f8::d90e5ae22b9fbf1d0d6221533680eae708f65268::287f8b0395182b2d9e8d3354af70801a0789e316::57227732e2d74aef339cccf31ea9841e91898bcf::c23165b9c72255f9351334f64010a635a01c7103::38f331b86fda80054a15d606a95ee4d426f9df3c::30758ba80f65a73e2c56b392991463b603e5f933::2a6259c171c23f0659387d8df0f1994a6ef18cfb::a6b029266f8b57790677228dcd74ad392217a9a4::d76bb4e1b044cf4be0bf618e336e735e6523f88a::3ae391f35ab7691e9a2ac10697fcb744a08451b8::3664109594a75140ea2f262a646d4b4a7da984bf::4a606ade1dcb5a2a35c9870aa07bb56101fe60ed::85043450024a0392db8d16f8f9f73195506471d4::
https://api.github.com/repos/python/cpython,110221,random-import-time::main,0,merged,performance::stdlib::,"As an optimisation to reduce the import time of the module, `random` first tries to import `sha512` from the internal `_sha512` module before falling back to `hashlib`. The problem, however, is that Python no longer has a `_sha512` module! It was removed in https://github.com/python/cpython/commit/0b13575e74ff3321364a3389eda6b4e92792afe1, by @gpshead. That means we're currently always falling back to the slow path in `random.py`, leading to the import time of `random` being far slower than it should be. Importing `sha512` from the correct module in the fast path cuts 60% off the import time of `random`. <!-- gh-issue-number: gh-109653 --> * Issue: gh-109653 <!-- /gh-issue-number --> ::This could perhaps be ```suggestion Fix a Python 3.12 regression in the import time of :mod:`random`. Patch by Alex Waygood. ```::This code is technically awkward... It tried to speed up import time and did so by circumventing hashlib which means that it is loading and using the slowest possible sha512 implementation by default (hashlib will pick up openssl 3's accelerated sha512 support by default on most platforms and not use our builtin).  so faster startup time for a slower runtime computation?  thankfully this is only ever used by seed() which is a single/constant number of calls for most programs on tiny data so there is zero reason to care about sha512 performance for its purposes. The slower implementation may still be faster on small seed data anyways due to less setup overhead. Nothing to do here. This works for random's purposes & thanks for the fixup.  But this being a regression in the first place demonstrates how fragile direct use of internal details can be.  _(and indirectly how much in need of an overhaul hashlib.py could use)_ I'd file an issue rather than leaving this comment in the merged PR void if there were anything concrete to describe and tackle, there isn't. :)::",Alex Waygood,66076021,141,2,3,1,2,0,a9e31948424127e4ce7af551a54fd47f0b2839bb::e39e4dd4d873f6137a873b23cd0bce8b186bd8fd::
https://api.github.com/repos/python/cpython,110220,backport-8d92b6e-3.12::3.12,0,merged,docs::skip issue::skip news::,(cherry picked from commit 8d92b6eff3bac45e7d4871c46c4511218b9b685a) Co-authored-by: numbermaniac <5206120+numbermaniac@users.noreply.github.com> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--110220.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::,Miss Islington (bot),31488909,73,1,1,1,1,1,dd7d817a710a54eabbbeafc7223eece059e9ab6b::
https://api.github.com/repos/python/cpython,110219,patch-1::main,0,merged,docs::skip issue::skip news::,"<!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> I spotted a typo while reading the What's New page that said ""producing tokens via the tokenize module is **up to up to** 64% faster."" This PR removes one of the ""up to""s. <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--110219.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::",,5206120,6,1,1,1,1,0,053a880d74dca1eb2f0c393e435740b8f401c856::
https://api.github.com/repos/python/cpython,110217,remove_timeout_max::main,0,merged,,"If the timeout is greater than PY_TIMEOUT_MAX, PyThread_acquire_lock_timed() uses a timeout of PY_TIMEOUT_MAX microseconds, which is around 280.6 years. This case is unlikely and limiting a timeout to 280.6 years sounds like a reasonable trade-off. The constant PY_TIMEOUT_MAX is not used in PyPI top 5,000 projects. <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--110217.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end --> <!-- gh-issue-number: gh-110014 --> * Issue: gh-110014 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,2,17,20,8,0,f590f2c908249bd09b53426483295464c2df70c9::238835814584568832177ebf6bb09e189d3e0dfd::
https://api.github.com/repos/python/cpython,110216,test_sys_intern12::3.12,0,merged,tests::skip news::,"…(#109491) (cherry picked from commit 44b1e4ea4842c6cdc1bedba7aaeb93f236b3ec08) <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-108963 --> * Issue: gh-108963 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,1,2,7,1,0,52c001d42acaf827dfb186a0f39a6f18691e00f2::
https://api.github.com/repos/python/cpython,110215,backport-6139bf5-3.12::3.12,0,merged,docs::skip news::,Prepare What's New in Python 3.12 for final release (cherry picked from commit 6139bf5e0c755ed22bdfb027a5299493f0c71be9) Co-authored-by: Adam Turner <9087854+AA-Turner@users.noreply.github.com> <!-- gh-issue-number: gh-109190 --> * Issue: gh-109190 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--110215.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::,Miss Islington (bot),31488909,73,1,1,1,1,0,709440c343f4d41f21a87b09eb3c78ce39cd9d36::
https://api.github.com/repos/python/cpython,110213,backport-f16e81f-3.12::3.12,0,merged,docs::skip news::,"* Add new installation path functions subsection * Add content from install/index to sysconfig * Fix table * Update note about installers * Clean up the list of schemes, remove references to Distutils (cherry picked from commit f16e81f368d08891e28dc1f038c1826ea80d7801) Co-authored-by: Adam Turner <9087854+AA-Turner@users.noreply.github.com> <!-- gh-issue-number: gh-92584 --> * Issue: gh-92584 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--110213.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::",Miss Islington (bot),31488909,73,1,167,18,3,0,1d46452320a6b9ef79441e4edb2b026116236a13::
https://api.github.com/repos/python/cpython,110211,backport-9cb8927-3.11::3.11,0,merged,skip issue::skip news::,(cherry picked from commit 9cb8927bfc73b66e7c36ab02ca2a3077172ea0ac) Co-authored-by: Hugo van Kemenade <hugovk@users.noreply.github.com> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--110211.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::,Miss Islington (bot),31488909,73,1,1,2,1,0,293481ba12344d9d0680aa659ec0357b00aaebdc::
https://api.github.com/repos/python/cpython,110210,backport-9cb8927-3.12::3.12,0,merged,skip issue::skip news::,(cherry picked from commit 9cb8927bfc73b66e7c36ab02ca2a3077172ea0ac) Co-authored-by: Hugo van Kemenade <hugovk@users.noreply.github.com> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--110210.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::,Miss Islington (bot),31488909,73,1,1,2,1,1,1ca7be46a6065435bf9db5360b2363096928ceb4::
https://api.github.com/repos/python/cpython,110208,bump-pygments::main,0,merged,docs::skip issue::skip news::,"<!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> Already updated in [`Doc/requirements-oldest-sphinx.txt`](https://github.com/python/cpython/blob/29b875bb93099171aeb7a60cd18d4e1f4ea3c1db/Doc/requirements-oldest-sphinx.txt#L26), used for testing on the CI. Let's also allow it for the real docs, so we can include the dark mode contrast fixed by https://github.com/pygments/pygments/pull/2448 in Pygments 2.16. For example: # Before <img width=""815"" alt=""image"" src=""https://github.com/pygments/pygments/assets/1324225/0bbd0790-9994-469b-8713-a5ff09313bd0""> # After <img width=""812"" alt=""image"" src=""https://github.com/pygments/pygments/assets/1324225/1b528649-8a96-47c3-bc98-5fbbc9ed55e2""> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--110208.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::",Hugo van Kemenade,1324225,628,1,1,2,1,0,d6dc8701c1724896488296777837a037f3baead3::
https://api.github.com/repos/python/cpython,110207,issue-101100-socketserver::main,0,merged,skip news::,"Before: ``` /Users/sobolev/Desktop/cpython/Doc/library/socketserver.rst:119: WARNING: py:meth reference target not found: socketserver.ForkingMixIn.server_close /Users/sobolev/Desktop/cpython/Doc/library/socketserver.rst:119: WARNING: py:attr reference target not found: socketserver.ForkingMixIn.block_on_close /Users/sobolev/Desktop/cpython/Doc/library/socketserver.rst:123: WARNING: py:meth reference target not found: socketserver.ThreadingMixIn.server_close /Users/sobolev/Desktop/cpython/Doc/library/socketserver.rst:123: WARNING: py:attr reference target not found: socketserver.ThreadingMixIn.block_on_close /Users/sobolev/Desktop/cpython/Doc/library/socketserver.rst:123: WARNING: py:data reference target not found: ThreadingMixIn.daemon_threads /Users/sobolev/Desktop/cpython/Doc/library/socketserver.rst:132: WARNING: py:meth reference target not found: socketserver.ForkingMixIn.server_close /Users/sobolev/Desktop/cpython/Doc/library/socketserver.rst:132: WARNING: py:meth reference target not found: socketserver.ThreadingMixIn.server_close /Users/sobolev/Desktop/cpython/Doc/library/socketserver.rst:132: WARNING: py:attr reference target not found: socketserver.ForkingMixIn.block_on_close /Users/sobolev/Desktop/cpython/Doc/library/socketserver.rst:413: WARNING: py:attr reference target not found: self.request /Users/sobolev/Desktop/cpython/Doc/library/socketserver.rst:413: WARNING: py:attr reference target not found: self.client_address /Users/sobolev/Desktop/cpython/Doc/library/socketserver.rst:413: WARNING: py:attr reference target not found: self.server /Users/sobolev/Desktop/cpython/Doc/library/socketserver.rst:419: WARNING: py:attr reference target not found: self.request /Users/sobolev/Desktop/cpython/Doc/library/socketserver.rst:419: WARNING: py:attr reference target not found: self.request /Users/sobolev/Desktop/cpython/Doc/library/socketserver.rst:419: WARNING: py:attr reference target not found: self.request /Users/sobolev/Desktop/cpython/Doc/library/socketserver.rst:434: WARNING: py:attr reference target not found: self.rfile /Users/sobolev/Desktop/cpython/Doc/library/socketserver.rst:434: WARNING: py:attr reference target not found: self.wfile /Users/sobolev/Desktop/cpython/Doc/library/socketserver.rst:434: WARNING: py:attr reference target not found: self.rfile /Users/sobolev/Desktop/cpython/Doc/library/socketserver.rst:434: WARNING: py:attr reference target not found: self.wfile /Users/sobolev/Desktop/cpython/Doc/library/socketserver.rst:444: WARNING: py:attr reference target not found: StreamRequestHandler.wfile ``` <!-- gh-issue-number: gh-101100 --> * Issue: gh-101100 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--110207.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::Should all these be documented rather than excluding via `!`?::They are documented, but in a base class. I don't think that we should document implementation methods, they are just, well, implementations :)::https://github.com/python/cpython/blob/777f882141dd001beab31fccec3d227ac60c7031/Doc/library/socketserver.rst?plain=1#L251::Verbose, but a potential option? ```suggestion :meth:`ForkingMixIn.server_close <BaseServer.server_close>` waits until all child ``` I think it might be worth documenting these methods, though, as their behaviour does differ significantly. A::I like the verbose option :) I don't agree that their behavior is different: they all just clean things up afterwards. But in a different way (which is an implementation detail that should not be a part of the docs).::",Nikita Sobolev,4660275,4663,2,52,26,2,0,777f882141dd001beab31fccec3d227ac60c7031::82219af25c7f9e2727345590e489dbc98e352a6d::
https://api.github.com/repos/python/cpython,110204,patch-6::main,0,closed,awaiting review::,"Description of pysqlite2/init.py with Custom Function: The pysqlite2/__init__.py module serves as the initialization script for the pysqlite2 package, providing a DB-API 2.0 compliant interface to SQLite 3. This module has been improved to enhance code clarity and to include a custom function that demonstrates the usage of the package. Formatting and Documentation: The code adheres to PEP 8 style conventions with consistent indentation and spacing. It begins with a comment block that provides essential information about the package, including licensing terms and permissions. Imports and Symbol Exportation: The code imports symbols from the sqlite3.dbapi2 module and exports them as __all__, ensuring that only the necessary symbols are exposed to users of the pysqlite2 package. Version Information: Constants __version__ and __sqlite_version__ are defined to provide users with version information about SQLite and the pysqlite2 package. This addition simplifies version tracking for developers. Handling Deprecated Names: The code retains the mechanism for handling deprecated names, issuing warnings and providing backward compatibility by returning the corresponding attribute from the global namespace. This ensures a smooth transition for users upgrading to newer versions of the package. Custom Function (custom_function): A new feature is introduced in the form of a custom function called custom_function. This function demonstrates the usage of the pysqlite2 package by performing the following steps: Connects to an in-memory SQLite database using dbapi2.connect("":memory:""). Creates a sample table named ""users"" if it doesn't exist. Inserts a sample record into the table. Retrieves and prints the records from the ""users"" table. Includes error handling to catch and display any database-related errors. Main Conditional Block: A conditional block (if __name__ == ""__main__"":) is included at the end of the module. It executes the custom_function when the module is run directly as a script. This allows developers to see a practical example of how to use the pysqlite2 package. These modifications enhance the module by providing developers with a clear demonstration of how to interact with an SQLite database using the pysqlite2 package. The code remains well-structured and follows best practices, ensuring that it serves as both a functional interface and a practical guide for users. <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> ::",Sidhant Mishra,69967446,0,1,79,12,1,0,f3bf545179cafb97c834e458cf1393b17e31f0a8::
https://api.github.com/repos/python/cpython,110203,patch-5::main,0,closed,awaiting review::,"1. Introduction: The code defines a class named HTMLParser that inherits from _markupbase.ParserBase. This class is used for parsing HTML content and extracting information from it. 2. Initialization: The HTMLParser class can be initialized with an optional parameter convert_charrefs, which specifies whether to convert character references (e.g., &lt; to <) to their corresponding Unicode characters. This parameter is set to True by default. 3. Resetting the Parser: The reset method is called to reset the parser's internal state, clearing any previously parsed data. 4. Handling HTML Elements: The class provides various methods for handling different types of HTML elements and content. handle_starttag(tag, attrs): Handles start tags by printing the tag name and attributes. handle_endtag(tag): Handles end tags by printing the tag name. handle_charref(name): Handles character references by printing the numeric value and corresponding character. handle_entityref(name): Handles entity references by printing the entity name. handle_data(data): Handles data (text content) by printing the data. handle_comment(data): Handles comments by printing the comment content. handle_decl(decl): Handles declarations (e.g., <!DOCTYPE>) by printing the declaration content. handle_pi(data): Handles processing instructions (e.g., <?...?>) by printing the instruction content. unknown_decl(data): Handles unknown declarations by printing the declaration content. handle_startendtag(tag, attrs): Handles self-closing tags by printing the tag name and attributes. 5. CDATA Handling: The set_cdata_mode(elem) method is provided for setting CDATA mode for specific elements. In CDATA mode, the parser will treat content differently. The clear_cdata_mode method can be used to clear CDATA mode. 6. Parsing Methods: The parse_starttag, parse_endtag, parse_pi, and parse_html_declaration methods are responsible for parsing the respective elements and returning the position where parsing should continue. 7. Checking for Complete Start Tags: The check_for_whole_start_tag method checks if a start tag is complete and returns the ending position. 8. Handling Data: The goahead method processes HTML data, comments, and other content. It iterates through the input data and invokes the appropriate handler methods. 9. Usage Example: A usage example is provided at the end of the code, demonstrating how to create an instance of the HTMLParser class, feed it with HTML data from a file, and close the parser. This code serves as a basic HTML parser framework with print statements for demonstration purposes. You can customize the handling logic within each method to suit your specific requirements, such as extracting data, building a DOM tree, or performing other operations on HTML content. <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> ::",Sidhant Mishra,69967446,0,1,120,405,1,0,2a6228abbce9f408bd2bc79806738eecdbda5f49::
https://api.github.com/repos/python/cpython,110202,backport-29b875b-3.12::3.12,0,merged,,"The default arguments for shutil.which() request an executable file, but extensionless files are not executable on Windows and should be ignored. (cherry picked from commit 29b875bb93099171aeb7a60cd18d4e1f4ea3c1db) Co-authored-by: Charles Machalow <csm10495@gmail.com> <!-- gh-issue-number: gh-109590 --> * Issue: gh-109590 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--110202.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::",Miss Islington (bot),31488909,73,1,91,12,4,0,0090d44cb2c835679a00851a7cdd5c89336bd4c2::
https://api.github.com/repos/python/cpython,110201,patch-4::main,0,closed,awaiting review::,"The code provided has undergone some minor refinements to improve its clarity and adherence to Python's best practices while maintaining its core functionality as the `pysqlite2/__init__.py` module. Here's a breakdown of the changes: 1. **Import Consolidation:** The code has been updated to directly import the `warn` function from the `warnings` module. This change reduces redundancy by eliminating the need for repeated module references. 2. **Conciseness and Readability:** The modifications result in a more concise and streamlined code structure. The `warn` function is now directly accessible, making the warning mechanism more straightforward. 3. **Minor Code Reordering:** The import statement for `warn` is now placed at the beginning of the code block for improved readability and alignment with common Python coding conventions. These changes collectively enhance the code's simplicity, readability, and adherence to best practices. While the overall functionality remains unchanged, these refinements make the code more efficient and maintainable, contributing to a more straightforward experience for developers using the `pysqlite2` package. <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> ::",Sidhant Mishra,69967446,0,1,19,8,1,0,0610fb63e6d7fe442bc962f4e7ba06a708eee63e::
https://api.github.com/repos/python/cpython,110200,patch-3::main,0,closed,awaiting review::,"<!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> ::",Sidhant Mishra,69967446,0,1,48,1,1,0,a4961f1feeedad6dee9f0a2959d4bb6b77e5a023::
https://api.github.com/repos/python/cpython,110199,patch-2::main,0,closed,awaiting review::,"In the modified pysqlite2/__init__.py file, several improvements and updates have been made to enhance readability, maintainability, and adherence to Python coding conventions (PEP 8). These changes aim to provide a clear and consistent interface to the pysqlite2 package while preserving its core functionality: Formatting and Documentation: The code has been reformatted according to the PEP 8 style guide, ensuring consistent indentation, spacing, and code layout. Additionally, the module includes an informative comment block at the beginning that describes the purpose of pysqlite2 and its licensing terms. Imports and Symbol Exports: The code retains the primary functionality of importing symbols from the sqlite3.dbapi2 module. It adheres to best practices for symbol exportation, ensuring that only the intended symbols are exposed when someone imports pysqlite2. Constants and Version Information: The code sets constants such as __version__ and __sqlite_version__ consistently, making it easy for users to access version information about SQLite and the pysqlite2 package. Handling Deprecated Names: The code retains the mechanism for handling deprecated names, issuing a warning when deprecated attributes are accessed and providing backward compatibility by returning the corresponding attribute from the global namespace. These changes collectively make the code more user-friendly and maintainable. Developers who use pysqlite2 can now expect a module that follows Python's coding conventions, provides version information, and gracefully handles deprecated attributes. This updated module is intended for those who want to interact with SQLite databases using the DB-API 2.0 standard in a clear and structured manner. ::",Sidhant Mishra,69967446,0,1,0,54,1,0,2a32e89afe1c92a0a7cbf335d3dc528c508fee6c::
https://api.github.com/repos/python/cpython,110194,lessweak::main,0,merged,tests::skip news::,"Confirmed that without the C changes from #108517, this test still segfaults with only 10 weakrefs. <!-- gh-issue-number: gh-110178 --> * Issue: gh-110178 <!-- /gh-issue-number --> ::",Jelle Zijlstra,906600,635,1,1,1,1,0,7b599ab26f6c603d70966a7677abd00c6585f14f::
https://api.github.com/repos/python/cpython,110193,auto-deopt::main,0,merged,skip news::,"<!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-109979 --> * Issue: gh-109979 <!-- /gh-issue-number --> ::",Guido van Rossum,2894642,21056,4,315,315,8,0,da4f71b415ab9fb06d8358089e59855a6ea43c28::3428c84056d2b16f064a9684f4e7c95237c96d4f::785c3739f91679bccea7aaae4420519f2edb521f::097909ee63af7423adf9f87001c49c05582194c7::
https://api.github.com/repos/python/cpython,110191,main::main,0,merged,docs::skip issue::skip news::,"<!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--110191.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::",Ned Batchelder,23789,2120,1,6,9,1,0,928cc7cfc8b5701006bee922f4ba78a7bc239b9f::
https://api.github.com/repos/python/cpython,110189,backport-adf0f15-3.11::3.11,0,merged,docs::skip news::,(cherry picked from commit adf0f15a06c6e8ddd1a6d59b28efcbb26289f080) Co-authored-by: Quentin Agren <quentin.agren@gmail.com> <!-- gh-issue-number: gh-110138 --> * Issue: gh-110138 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--110189.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::,Miss Islington (bot),31488909,73,1,3,3,1,0,3d1dc6195cf95fe960a1ee988dd85f916fada795::
https://api.github.com/repos/python/cpython,110188,backport-adf0f15-3.12::3.12,0,merged,docs::skip news::,(cherry picked from commit adf0f15a06c6e8ddd1a6d59b28efcbb26289f080) Co-authored-by: Quentin Agren <quentin.agren@gmail.com> <!-- gh-issue-number: gh-110138 --> * Issue: gh-110138 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--110188.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::,Miss Islington (bot),31488909,73,1,3,3,1,1,4b6a1189781ee565407aee7ed5926a79bd4a435f::
https://api.github.com/repos/python/cpython,110187,backport-31097df-3.12::3.12,0,merged,skip news::,"(cherry picked from commit 31097df611bb5c8084190202e095ae47e8b81c0f) <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-101100 --> * Issue: gh-101100 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--110187.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::",Hugo van Kemenade,1324225,628,1,25,13,3,1,e01204a6fad3197ecc0f49e1c246edc394f22c11::
https://api.github.com/repos/python/cpython,110186,dataclass_combined_exec::main,0,closed,awaiting review::,"As mentioned in the gh issue, this is my attempt to combine the various exec calls (init, repr, eq, etc) into one, resulting in a increasing speedup with each additional exec call avoided. Around 1.1-1.22 speedup. I don't expect this to be taken as-is. Mainly wanted to get something up so @ericvsmith has something cleaned up to look at. <!-- gh-issue-number: gh-109870 --> * Issue: gh-109870 <!-- /gh-issue-number --> ::",,57631333,1,5,73,61,1,0,d91fb02d5cb808a3c53afe16523b9e3dfdf45be4::e036068ffd4e128d348a874945644b4b673261b8::30f5520ce84c168595281c18738406dd62713064::7c69ad414d0a958a84d06d478b9e8a08807777e9::856f5be5a075767e463e1e98cfe5f1faada82434::
https://api.github.com/repos/python/cpython,110185,backport-31097df-3.11::3.11,0,merged,skip news::,(cherry picked from commit 31097df611bb5c8084190202e095ae47e8b81c0f) Co-authored-by: Nikita Sobolev <mail@sobolevn.me> Co-authored-by: Alex Waygood <Alex.Waygood@Gmail.com> <!-- gh-issue-number: gh-101100 --> * Issue: gh-101100 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--110185.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::,Miss Islington (bot),31488909,73,1,25,13,3,0,9430410352fa3f002be95668a0fef3e641657208::
https://api.github.com/repos/python/cpython,110183,test_find_periodic_pattern11::3.11,0,merged,skip news::,"…#110170) (cherry picked from commit 06faa9a39bd93c5e7999d52b52043ecdd0774dac) <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-110160 --> * Issue: gh-110160 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,1,11,3,1,0,85d25a8d79f16019b6da9b8a3a5f95a95b67fc03::
https://api.github.com/repos/python/cpython,110182,backport-06faa9a-3.12::3.12,0,merged,skip news::,(cherry picked from commit 06faa9a39bd93c5e7999d52b52043ecdd0774dac) Co-authored-by: Nikita Sobolev <mail@sobolevn.me> <!-- gh-issue-number: gh-110160 --> * Issue: gh-110160 <!-- /gh-issue-number --> ::,Miss Islington (bot),31488909,73,1,11,3,1,0,6fe637884b55f0b1fde0e43fda55d01f8c1274e6::
https://api.github.com/repos/python/cpython,110181,typing-dead-code::main,0,merged,skip news::topic-typing::,Fixes #110180 <!-- gh-issue-number: gh-110180 --> * Issue: gh-110180 <!-- /gh-issue-number --> ::,Alex Waygood,66076021,141,1,0,7,1,0,7ee44f65fd6102e0c297ab91b36bb506cc82f9d5::
https://api.github.com/repos/python/cpython,110179,test-typing-enable-ruff::main,0,merged,skip issue::skip news::topic-typing::,"This removes `Lib/test/test_typing.py` from the ignorelist we have for ruff. If merged, it means we'll get a helpful CI error if we accidentally have two test methods of the same name in the same class, which leads to one of the two tests being silently skipped.::",Alex Waygood,66076021,141,2,53,54,3,1,bb7c72ebf29a82ad6dc3df9803dd1919c40e39ee::dd62fa05ddb8e5b922c673f5d5471d4a0b905955::
https://api.github.com/repos/python/cpython,110175,dependabot/pip/Tools/types-setuptools-68.2.0.0::main,1,merged,skip issue::skip news::,"Bumps [types-setuptools](https://github.com/python/typeshed) from 68.1.0.1 to 68.2.0.0. <details> <summary>Commits</summary> <ul> <li>See full diff in <a href=""https://github.com/python/typeshed/commits"">compare view</a></li> </ul> </details> <br /> [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=types-setuptools&package-manager=pip&previous-version=68.1.0.1&new-version=68.2.0.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores) Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start) [//]: # (dependabot-automerge-end) --- <details> <summary>Dependabot commands and options</summary> <br /> You can trigger Dependabot actions by commenting on this PR: - `@dependabot rebase` will rebase this PR - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it - `@dependabot merge` will merge this PR after your CI passes on it - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it - `@dependabot cancel merge` will cancel a previously requested merge and block automerging - `@dependabot reopen` will reopen this PR if it is closed - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually - `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself) - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself) - `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself) </details>::",,49699333,0,1,1,1,1,0,467bda218648cd7867d461b5bc4185a3c02ad7c8::
https://api.github.com/repos/python/cpython,110174,dependabot/pip/Tools/hypothesis-6.87.1::main,1,merged,skip issue::skip news::,"Bumps [hypothesis](https://github.com/HypothesisWorks/hypothesis) from 6.84.0 to 6.87.1. <details> <summary>Commits</summary> <ul> <li><a href=""https://github.com/HypothesisWorks/hypothesis/commit/531d338b7fa80136204e52cbd92b27130ffe8fbe""><code>531d338</code></a> Bump hypothesis-python version to 6.87.1 and update changelog</li> <li><a href=""https://github.com/HypothesisWorks/hypothesis/commit/ffda79f83c343ad588c9b89dec2ce69443d861a3""><code>ffda79f</code></a> Merge pull request <a href=""https://redirect.github.com/HypothesisWorks/hypothesis/issues/3758"">#3758</a> from Zac-HD/fix-explain-phase</li> <li><a href=""https://github.com/HypothesisWorks/hypothesis/commit/d755b286695d3214b257e4837756f007d88274bf""><code>d755b28</code></a> Merge pull request <a href=""https://redirect.github.com/HypothesisWorks/hypothesis/issues/3757"">#3757</a> from HypothesisWorks/create-pull-request/patch</li> <li><a href=""https://github.com/HypothesisWorks/hypothesis/commit/be37fa08a409f9c863c0ec7ebc8f66a2289373c6""><code>be37fa0</code></a> Update pinned dependencies</li> <li><a href=""https://github.com/HypothesisWorks/hypothesis/commit/d58adf863ae4a41055dfe83ff44113104ef3e72d""><code>d58adf8</code></a> This is reachable after all</li> <li><a href=""https://github.com/HypothesisWorks/hypothesis/commit/8a76f8afe38411b95399cef315b6593ee8db6c11""><code>8a76f8a</code></a> Bump hypothesis-python version to 6.87.0 and update changelog</li> <li><a href=""https://github.com/HypothesisWorks/hypothesis/commit/61b2940798850079d08deb2836ee62ec8064c365""><code>61b2940</code></a> Merge pull request <a href=""https://redirect.github.com/HypothesisWorks/hypothesis/issues/3751"">#3751</a> from nickcollins/no-assume-outside-context-4</li> <li><a href=""https://github.com/HypothesisWorks/hypothesis/commit/d4665b9ec0cb0babd5590bc589c8ff65df0ab9f6""><code>d4665b9</code></a> Fix type annotation</li> <li><a href=""https://github.com/HypothesisWorks/hypothesis/commit/3d34092d83b2192de806643912667b993b518beb""><code>3d34092</code></a> Update RELEASE.rst</li> <li><a href=""https://github.com/HypothesisWorks/hypothesis/commit/3a58f4510342ab1907beb4af50a813b36c583ea3""><code>3a58f45</code></a> Tidy up executors code</li> <li>Additional commits viewable in <a href=""https://github.com/HypothesisWorks/hypothesis/compare/hypothesis-python-6.84.0...hypothesis-python-6.87.1"">compare view</a></li> </ul> </details> <br /> [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=hypothesis&package-manager=pip&previous-version=6.84.0&new-version=6.87.1)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores) Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start) [//]: # (dependabot-automerge-end) --- <details> <summary>Dependabot commands and options</summary> <br /> You can trigger Dependabot actions by commenting on this PR: - `@dependabot rebase` will rebase this PR - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it - `@dependabot merge` will merge this PR after your CI passes on it - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it - `@dependabot cancel merge` will cancel a previously requested merge and block automerging - `@dependabot reopen` will reopen this PR if it is closed - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually - `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself) - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself) - `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself) </details>::",,49699333,0,1,1,1,1,0,8ddb0ccd7138cd77c7fc69c5e93b5cac54ce7a2e::
https://api.github.com/repos/python/cpython,110172,issue-110171::main,0,merged,,"Refs https://github.com/python/cpython/pull/110168 <!-- gh-issue-number: gh-110171 --> * Issue: gh-110171 <!-- /gh-issue-number --> ::I suggest removing this option.::The seed must always be initialized, but shuffle() must only be called in self.randomize is true. You can move seed initialization in _init().::While we are here... Let's be crazy, and use 29.9 bits of entropy for the seed!!! 9 digits. ```suggestion else random.randrange(1_000_000_000) ``` You should update test_regrtest for that: ``` self.assertTrue(0 <= randseed <= 100_000_000, randseed) ``` Honestly, let's just remove the maximum value, no?::I'm not sure that removing seed() call is correct here. The goal is to be reproducible, but setup_tests() which calls random.seed() is not done in main.py, but later, when running tests, single.py. Please restore the seed() call to make sure that shuffle() is always the same, even if we add calls to the random module before shuffle().::`pytest-randomly` does this: `random.Random().getrandbits(32)` https://github.com/pytest-dev/pytest-randomly/blob/412b64004dd8820022267e3f687a2e651d7e70c3/src/pytest_randomly/__init__.py#L292 For me, it is cleaner.::Woooooow, 32 bits of entropy!? Amazing :-D Sure, go for getrandbits(32).::What's the point of creating a new Random() instead just for a function call? random module already has one at the module level. Just use: ```suggestion else random.getrandbits(32) ``` Ah, maybe the function wasn't available at the module level before. But it tested that it's accessible on Python >= 3.11.::This approach guarantees that our seed generation is not affected by the global random instance which we seed later. It is just 8 chars to make it safer and add more isolation. `pytest-randomly` does the same.::> is not affected by the global random instance which we seed later Would you mind to elaborate? Isolated from what issues or events?::We modify global `random` instance in tests, so, it *theoretically* can affect `.getrandbits` result. I don't think that there are any practical ways to do this *at the moment*, but you never know :) Anyway, I don't have any strong feelings about this line of code. Feel free to press ""commit suggestion"" if you prefer the shorter version! 👍 ::> We modify global random instance in tests Regrtest constructor is called *before* any test is run. If a test overrides a stdlib function, it *must* restores the stdlib in its previous state when the test completes. Well, save_env.py is incomplete and bugs are possible. But for this very specific line, it doesn't matter ;-)::Thank you :-)::Yeah, I don't think that we should check the expected entropy here. We just have to check that the message is logged.::Since this message is for end users, would you mind to elaborate it? I suppose that the impact for *end users* is that test failure sare now easier to reproduce using the random seed. Previously, you may not be able to reproduce it, since the seed was unknown, right?::Done! 👍 ::",Nikita Sobolev,4660275,4663,8,24,16,5,0,9c6634d7b747a66fc8eb21e1ef105bbe516d87ca::1bef6392ec627c3ad399772499c3dc8d6415b613::bc512ac171dc4140edba8f0e71b64da7cbdb9bee::b193156ce1443fda99968bc167b903e8065cffcf::0d53c059740948219940be441e6422daecc215a1::9ba3edbd51ff895ad89a385b6b3bac3fcc01f6b5::e5ebf708da3f78c19fb4f9fbb1a7aec4ca9637ac::7b18378e56770ae5dcc4c2b0c2d1a0270227fb84::
https://api.github.com/repos/python/cpython,110170,issue-110160::main,0,merged,skip news::,<!-- gh-issue-number: gh-110160 --> * Issue: gh-110160 <!-- /gh-issue-number --> ::,Nikita Sobolev,4660275,4663,1,11,3,1,1,9e12a7b002ddf1955c2801b5b59da3bc9e8e9911::
https://api.github.com/repos/python/cpython,110169,cpu_count_doc12::3.12,0,merged,tests::docs::skip news::,"* Doc: Specify that os.cpu_count() counts *logicial* CPUs. * Doc: Specify that os.sched_getaffinity(0) is related to the calling thread. * Fix test_posix.test_sched_getaffinity(): restore the old CPU mask when the test completes! <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-109649 --> * Issue: gh-109649 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--110169.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::",Victor Stinner,194129,1148,2,10,7,2,1,b370b73cff134830bae0f368c5bd9c6bc0385bf7::f65bc28f5b6d5092230ac74e3730a24cac9c5f15::
https://api.github.com/repos/python/cpython,110168,regrtest_randomize::main,0,merged,tests::,"If the SOURCE_DATE_EPOCH environment variable is defined, regrtest now disables randomization of tests. <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-110164 --> * Issue: gh-110164 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,1,17,2,3,0,6b499281ffd1c0e5a2ea0579756038ffd0e98fe8::
https://api.github.com/repos/python/cpython,110165,use_process_count::main,0,merged,,"Replace os.cpu_count() with os.process_cpu_count() in modules: * compileall * concurrent.futures * multiprocessing Replace os.cpu_count() with os.process_cpu_count() in programs: * _decimal deccheck.py test * freeze.py * multissltests.py * python -m test (regrtest) * wasm_build.py Other changes: * test.pythoninfo logs os.process_cpu_count(). * regrtest gets os.process_cpu_count() / os.cpu_count() in headers. <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-109649 --> * Issue: gh-109649 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--110165.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::",Victor Stinner,194129,1148,4,50,16,16,0,6b15e90e8a2238415a6033690fc26a88f3e527b4::6c336bc0a43ff0453bfe9258bcbb68c94c74b112::0cc90be360e9b2bf775982a54a764d014f1f1b3a::6059deec8634e1ecb9675fb12e5ba95b348155a2::
https://api.github.com/repos/python/cpython,110161,fix_random::main,0,merged,skip news::,"Oops, I commited debug code by mistake, sorry about that. <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-110014 --> * Issue: gh-110014 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,1,0,3,1,0,5876d8fd72fc4034f84d79dcd918715bb3fb8407::
https://api.github.com/repos/python/cpython,110159,backport-c62b49e-3.11::3.11,0,merged,tests::skip news::,Don't measure the CI performance: don't test the maximum elapsed time. The check failed on a slow CI. (cherry picked from commit c62b49ecc8da13fa9522865ef6fe0aec194fd0d8) Co-authored-by: Victor Stinner <vstinner@python.org> <!-- gh-issue-number: gh-110088 --> * Issue: gh-110088 <!-- /gh-issue-number --> ::,Miss Islington (bot),31488909,73,1,0,3,1,0,39d2f9c1736832501d2cb7fe2a0a5a6159ebcc4d::
https://api.github.com/repos/python/cpython,110158,backport-c62b49e-3.12::3.12,0,merged,tests::skip news::,Don't measure the CI performance: don't test the maximum elapsed time. The check failed on a slow CI. (cherry picked from commit c62b49ecc8da13fa9522865ef6fe0aec194fd0d8) Co-authored-by: Victor Stinner <vstinner@python.org> <!-- gh-issue-number: gh-110088 --> * Issue: gh-110088 <!-- /gh-issue-number --> ::,Miss Islington (bot),31488909,73,1,0,3,1,0,6c9a357341169dc871d944769c07f24e178907c7::
https://api.github.com/repos/python/cpython,110157,asyncio_timeouts2::main,0,merged,tests::topic-asyncio::skip news::,"Don't measure the CI performance: don't test the maximum elapsed time. The check failed on a slow CI. <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-110088 --> * Issue: gh-110088 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,1,0,3,1,0,e74fa4e9f2f390cd048f72e517cfb33e6c63adfd::
https://api.github.com/repos/python/cpython,110156,regrtest_hostrunner::main,0,merged,,"* _add_python_opts() now handles cross compilation and HOSTRUNNER. * display_header() now tells if Python is cross-compiled, display HOSTRUNNER, and get the host platform. * Remove Tools/scripts/run_tests.py script. * Remove ""make hostrunnertest"": use ""make buildbottest"" or ""make test"" instead. <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-110152 --> * Issue: gh-110152 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,1,125,110,6,0,684e91147229acb8e036acb335d7f2f54bf61bac::
https://api.github.com/repos/python/cpython,110155,unistd3::main,0,merged,skip news::,"* Remove unused <locale.h> include. * Remove <fcntl.h> include in traceback.h. * Remove redundant include: <assert.h> and <stddef.h> are already included by ""Python.h"". * Remove <object.h> include in faulthandler.c. * Add missing <stdbool.h> in pycore_pythread.h if HAVE_PTHREAD_STUBS is defined. * Fix also warnings in pthread_stubs.h: don't redefine macros if they are already defined, like the __NEED_pthread_t macro. <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-110014 --> * Issue: gh-110014 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--110155.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::",Victor Stinner,194129,1148,1,120,59,17,0,d7b3e4609a2dc8d6240fb387ba1b67f0112a3108::
https://api.github.com/repos/python/cpython,110153,backport-0def8c7-3.11::3.11,0,merged,skip news::,Call also copy_python_src_ignore() on listdir() names. shutil.copytree(): replace set() with an empty tuple. An empty tuple becomes a constant in the compiler and checking if an item is in an empty tuple is cheap. (cherry picked from commit 0def8c712bb6f66f1081cab71deb3681566b846d) Co-authored-by: Victor Stinner <vstinner@python.org> <!-- gh-issue-number: gh-109748 --> * Issue: gh-109748 <!-- /gh-issue-number --> ::,Miss Islington (bot),31488909,73,1,7,3,3,0,c9c567fd57955372f2c7d50ca3e27eecbc6703dd::
https://api.github.com/repos/python/cpython,110151,quantiles_basecase::main,0,merged,type-bug::,<!-- gh-issue-number: gh-110150 --> * Issue: gh-110150 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--110151.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::,Raymond Hettinger,1623689,3560,2,17,3,4,0,4e2f77786b5dd0915ed7928948892f751089c51e::0f62607bcc702466d63412058fed369850cfbf97::
https://api.github.com/repos/python/cpython,110149,test_venv2::main,0,merged,tests::skip news::,"Call also copy_python_src_ignore() on listdir() names. shutil.copytree(): replace set() with an empty tuple. An empty tuple becomes a constant in the compiler and checking if an item is in an empty tuple is cheap. <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-109748 --> * Issue: gh-109748 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,1,7,3,3,0,52fc8c4bbd01a83ff48d478a803c3f464d8bfb1d::
https://api.github.com/repos/python/cpython,110148,regrtest_worker_failed::main,0,merged,skip news::,"Rename WORKER_ERROR to WORKER_BUG. Add WORKER_FAILED state: it does not stop the manager, whereas WORKER_BUG does. Change also TestResults.display_result() order: display failed tests at the end, the important important information. <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-109276 --> * Issue: gh-109276 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,1,83,28,5,0,2a3e1a28848305b9d6e2f159aadec6e1735aed5d::
https://api.github.com/repos/python/cpython,110146,config_spec::main,0,merged,skip news::,"Add a specification of the PyConfig structure to factorize the code. <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-107954 --> * Issue: gh-107954 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,1,262,320,3,0,71916297b2ba0c7127be2ecca3a884d818907b2e::
https://api.github.com/repos/python/cpython,110145,config_parse::main,0,closed,skip news::,"<!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-107954 --> * Issue: gh-107954 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,1,497,0,4,0,e6e4e5cd5ee403513bdfc6d4466d2b2475021358::
https://api.github.com/repos/python/cpython,110144,issue-101100-site::main,0,merged,docs::skip news::,I've also documented `ImportError.name` and `ImportError.path` attributes as attributes. <!-- gh-issue-number: gh-101100 --> * Issue: gh-101100 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--110144.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::I'd flip this to be: ```rest The optional *name* and *path* keyword-only arguments set the corresponding attributes: ```::```suggestion :mod:`sitecustomize` -------------------- .. module:: sitecustomize ```::```suggestion :mod:`usercustomize` -------------------- .. module:: usercustomize ```::,Nikita Sobolev,4660275,4663,3,25,13,3,1,972e1153d7fa019d7a4ac5a0366aabfee8750432::b0d6bbcc4d2e031811750abab6aaf26a284caa72::3ddce15981d687d7521fe03b4ad6c32e86a2c949::
https://api.github.com/repos/python/cpython,110142,gh-110138::main,0,merged,docs::skip news::,<!-- gh-issue-number: gh-110138 --> * Issue: gh-110138 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--110142.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::,Quentin Agren,3214988,1,3,3,3,1,0,12d8db6570b3874e894752f9acdecfce44975379::ce798b407bd67ec357eab43c5e91ceb38dd27af7::8d76c403282ec56e769bb009615f9dfc6e5d9e3d::
https://api.github.com/repos/python/cpython,110141,backport-0449fe9-3.11::3.11,0,merged,docs::skip news::,(cherry picked from commit 0449fe999d56ba795a852d83380fe06514139935) Co-authored-by: Adam Turner <9087854+AA-Turner@users.noreply.github.com> <!-- gh-issue-number: gh-101100 --> * Issue: gh-101100 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--110141.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::,Miss Islington (bot),31488909,73,1,26,29,1,0,7df7654d4740d8be71e3e342b7043e7f5f41900c::
https://api.github.com/repos/python/cpython,110140,backport-0449fe9-3.12::3.12,0,merged,docs::skip news::,(cherry picked from commit 0449fe999d56ba795a852d83380fe06514139935) Co-authored-by: Adam Turner <9087854+AA-Turner@users.noreply.github.com> <!-- gh-issue-number: gh-101100 --> * Issue: gh-101100 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--110140.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::,Miss Islington (bot),31488909,73,1,26,29,1,1,09db8732e92d4e886b9361bef798ea30cbf94451::
https://api.github.com/repos/python/cpython,110139,internal_posix_threads::main,0,merged,skip news::,"* pycore_pythread.h is now the central place to make sure that _POSIX_THREADS and _POSIX_SEMAPHORES macros are defined if available. * Make sure that pycore_pythread.h is included when _POSIX_THREADS and _POSIX_SEMAPHORES macros are tested. * PY_TIMEOUT_MAX is now defined as a constant, since its value depends on _POSIX_THREADS, instead of being defined as a macro. * Document the change and give hints how to fix affected code. <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-110014 --> * Issue: gh-110014 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--110139.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::@vstinner Could we instead exclude this undocumented constant from the limited API? ::I checked and apparently, it's safe to remove this constant, so I created PR gh-110217 for that.::",Victor Stinner,194129,1148,3,73,58,13,0,d1db176a73fda9e567c01623dfe4f4da4658652a::9d8445788162cff1de9254e157d075966a82b453::736a14a42c6562928bf2efaadf4f4320424f8b75::
https://api.github.com/repos/python/cpython,110137,cf_wakeup_lock::main,0,closed,skip news::,"<!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-109917 --> * Issue: gh-109917 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,4,92,103,3,0,5e8706f0e07d22dd57dc9f865ea7c02d0c7b55fd::2949c3d175f979f7db3fe7c397a7c79ef82162c7::fb905f512e212d7d775c5d1cee94bff206a3f634::84dc6ac181e84078eac5b18fc745b2a59b840b6e::
https://api.github.com/repos/python/cpython,110136,backport-cbdacc7-3.11::3.11,0,merged,docs::skip news::,(cherry picked from commit cbdacc738a52a876aae5b74b4665d30a5f204766) Co-authored-by: Adam Turner <9087854+AA-Turner@users.noreply.github.com> <!-- gh-issue-number: gh-101100 --> * Issue: gh-101100 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--110136.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::,Miss Islington (bot),31488909,73,1,4,4,2,0,a29de3b2ec8b3aef5c59c2cfb742e1010a447628::
https://api.github.com/repos/python/cpython,110135,backport-cbdacc7-3.12::3.12,0,merged,docs::skip news::,(cherry picked from commit cbdacc738a52a876aae5b74b4665d30a5f204766) Co-authored-by: Adam Turner <9087854+AA-Turner@users.noreply.github.com> <!-- gh-issue-number: gh-101100 --> * Issue: gh-101100 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--110135.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::,Miss Islington (bot),31488909,73,1,4,4,2,1,1d23c08b0e3abd4c6e6b03299014870591830832::
https://api.github.com/repos/python/cpython,110134,backport-613c0d4-3.12::3.12,0,merged,docs::skip issue::skip news::,(cherry picked from commit 613c0d4e866341e15a66704643a6392ce49058ba) Co-authored-by: Raymond Hettinger <rhettinger@users.noreply.github.com> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--110134.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::,Miss Islington (bot),31488909,73,1,19,0,1,1,2f0aaece0ebf8c8688838957e8dc9227f916f45a::
https://api.github.com/repos/python/cpython,110133,lr_proportional_example::main,0,merged,docs::skip issue::skip news::,Add example for a new Python 3.12 feature. <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--110133.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::,Raymond Hettinger,1623689,3560,1,19,0,1,0,362a7faf0fac84ed7bf3967cd34ed5009d35dd22::
https://api.github.com/repos/python/cpython,110130,backport-14098b7-3.11::3.11,0,merged,tests::skip news::,(cherry picked from commit 14098b78f7453adbd40c53e32c29588611b7c87b) Co-authored-by: Victor Stinner <vstinner@python.org> <!-- gh-issue-number: gh-107888 --> * Issue: gh-107888 <!-- /gh-issue-number --> ::,Miss Islington (bot),31488909,73,1,1,1,1,0,f033430c123dc4d2b0008abcbef5b43895508f5c::
https://api.github.com/repos/python/cpython,110129,mp_wakeup::main,0,closed,awaiting core review::skip news::,"Remove test_gh105829_should_not_deadlock_if_wakeup_pipe_full() of test_concurrent_futures.test_deadlock. The test is no longer relevant. <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-105829 --> * Issue: gh-105829 <!-- /gh-issue-number --> <!-- gh-issue-number: gh-109917 --> * Issue: gh-109917 <!-- /gh-issue-number --> ::I don't get how it was possible to wake up the pipe before, if no data is written.::An empty bytes object is still a thing. It will cause 4 bytes to be sent on the pipe (A 4 byte zero encoding the length of the byte string followed by zero bytes of data). `b""x""` will be sent as 5 bytes.::Oh ok. I suppose that writing 4 or 5 bytes doesn't make any big difference, as soon as we only send 5 bytes and don't fill the pipe.::This test should be kept in some form regardless of the implementation strategy used to solve the deadlock as we want to test that we have actually removed this bug. See https://github.com/python/cpython/pull/108513/commits/995a14c00bbf615c19fc0037c33dab00067df000 for a version that could be used to test for the issue if we use an implementation that relies on making sure we never block on the pipe.::I don't understand the purpose of the test. The test is supposed to check wakeup() implementation, but instead, it overrides wakeup() with a different implementation which blocks if it's called more than once. My change makes sure that calling wakeup() twice or more is safe. The test also overrides ``_ExecutorManagerThread.run()`` whereas this method is responsible to check for the wakeup pipe and stop the loop when the wakeup pipe becomes non-empty. The test is supposed to check that concurrent.futures doesn't hang when it gets a lot of jobs, but instead it mocks parts of concurrent.futures which caused the bug.::I wrote a new **functional** test instead.::I see no reason to not define this as `b""""`. Giving it a value makes it seem like it matters in some way and it is also more bytes to send.::This change seems to serve no purpose ::This comment is misleading as this change has no impact on the gh-105829 issue in the current state. As long as the shutdown lock is not taken by both `wakeup` and `clear` it does not matter if we block on the pipe here. It might in some sense actually be desirable as it could perhaps give the manager thread a better chance of running and moving some objects to the worker queue. At this state, this is just a potential optimization to avoid sending unnecessary wakeup messages. Also, as mentioned before, it is not entirely clear to me that this does not introduce some sort of bug.::By adding reads and writes of `self._awaken` we now have a race in the code. Since it is only assignment and reading it should be fine if one is happy with relying on the atomicity of these bytecode primitives as implemented in CPython currently. Opinions differ on that point I think, and I'm no expert, but it should probably be considered somewhat carefully.::The purpose of the test is to test that we don't deadlock when the pipe blocks. In this version the test is a bit opinionated about what type of implementation it accepts. This was noted in the commit message but should probably have been documented in a comment in the test as well to be extra clear. The point of this test version is to **force** wakeup to block and see that we still don't deadlock. This is done by augmenting the normal wakeup operation with an additional `.put` to a size 1 queue that will block on the second wakeup, which is more or less guaranteed since we also delay the startup of the _ExecutorManagerThread. The initial test was less opinionated and only made sure to delay the _ExecutorManagerThread startup enough to allow the wakeup pipe to fill. The drawback with that version was runtime.::This is still a deadlock test and should probably remain in the deadlock suite::Remove commented code::This substitution is now done after the executor has started. Is this safe, and if so, under what assumptions? ::Also, the test name is very generic and does not describe the purpose of the test::Not all platforms support F_GETPIPE_SZ so this will fail on macos, etc. Fixed by: ```python import fcntl from fcntl import F_GETPIPE_SZ  # Does not exist in all fcntl implementations return fcntl.fcntl(connection.fileno(), F_GETPIPE_SZ) ```::This seems quite confusing to me. First we specify the number of jobs we want and compute a message size based on that. Then we loop back around and recompute the number of jobs based on the message size. This feels circular and redundant. Personally, if we are going to set the message size ourselves, I would stop messing with the pipe and just make sure the data we send is overkill. ```python # Use longer ""wakeup message"" to make the hang more likely # and to speed up the test. The true size will be slightly # larger than this due to overhead but that is irrelevant # for our purposes. msg_size = 2048 thread_wakeup._wakeup_msg = b'x' * msg_size njob = 2 ** 20 // msg_size  # A megabyte should fill up most pipes job_data = range(njob) ``` With this, the test still takes just 0.2s and works the same on all platforms.::This test wont fail gracefully without using sigalarm or some other mechanism to trigger a timeout in case of deadlock. Right now you have to wait a really long time (15 min?) for the test to fail.::Another issue here is that the test relies on the startup time of the ExecutorManagerThread but we dont do anything here to make sure that this is sufficiently slow. I tested what happens if the thread had already started when we reach the test point and the test passed even with a broken implementation. So either we could make sure the startup is slow or that the test fails regardless. I tried it with my suggested size/jobs setting above and that was sufficient to trigger failure even if the thread was started. As always, it is hard to judge how reliable that will be on other systems but I suspect it is overkill enough to fail in most cases.::Oh, it's just that for me, it's more readable.::Also, to be extra clear, as I noted in https://github.com/python/cpython/issues/109917#issuecomment-1737984881, I believe the instability issue we are having in the test right now is due to the ordering of the dummy queue operation and the real wakeup pipe operations. Both primitives are thread safe but not done atomically as a single update and may interleave arbitrarily. With the current order of operations this can lead to an incorrect state where the dummy queue is full but the wakeup pipe is empty. By doing the swap suggested I think this can no longer happen in any possible operation interleaving. There is no indication that the actual implementation is incorrect, this looks like purely a test issue.::It's distracting in this PR though...::",Victor Stinner,194129,1148,2,72,81,3,0,5e8706f0e07d22dd57dc9f865ea7c02d0c7b55fd::2949c3d175f979f7db3fe7c397a7c79ef82162c7::
https://api.github.com/repos/python/cpython,110127,tomllib11::3.11,0,merged,skip news::,"USE_STACKCHECK on using on Windows 32-bit. <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-108851 --> * Issue: gh-108851 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,2,31,7,3,0,8c50ad21567db10a9747f1b5fa39827b4ce3e025::009a98dde0bda21fcc0f0a591a77056bc1ca3dcb::
https://api.github.com/repos/python/cpython,110126,cf_finalization_error12::3.12,0,merged,,"concurrent.futures: The *executor manager thread* now catches exceptions when adding an item to the *call queue*. During Python finalization, creating a new thread can now raise RuntimeError. Catch the exception and call terminate_broken() in this case. Add test_python_finalization_error() to test_concurrent_futures. concurrent.futures._ExecutorManagerThread changes: * terminate_broken() no longer calls shutdown_workers() since the call queue is no longer working anymore (read and write ends of the queue pipe are closed). * terminate_broken() now terminates child processes, not only wait until they complete. * _ExecutorManagerThread.terminate_broken() now holds shutdown_lock to prevent race conditons with ProcessPoolExecutor.submit(). multiprocessing.Queue changes: * Add _terminate_broken() method. * _start_thread() sets _thread to None on exception to prevent leaking ""dangling threads"" even if the thread was not started yet. (cherry picked from commit 635184212179b0511768ea1cd57256e134ba2d75) <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-109047 --> * Issue: gh-109047 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,1,90,17,4,0,49ea36d624909256407a0470fffcbc53f957dc1c::
https://api.github.com/repos/python/cpython,110125,test_mmap_comment::main,0,merged,tests::skip news::needs backport to 3.12::,"<!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-107888 --> * Issue: gh-107888 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,1,1,1,1,1,24c06ced66dcfce8d8813c5d8b0972cee02a35f6::
https://api.github.com/repos/python/cpython,110124,args_uops::main,0,closed,skip issue::awaiting review::skip news::,"<!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> ::",Victor Stinner,194129,1148,1,3,1,2,0,6bf1c101bada767427bc10a2cf368bfff73f7336::
https://api.github.com/repos/python/cpython,110123,test_cpp_ext::main,0,merged,skip news::,"The current version of pip does not support ""t"" in the ABI flags. Skip the test in `--disable-gil` builds until we can update pip. <!-- gh-issue-number: gh-110119 --> * Issue: gh-110119 <!-- /gh-issue-number --> ::",Sam Gross,655866,1625,1,4,0,1,0,d071615bdeb026ae7746cf214325504fb424803b::
https://api.github.com/repos/python/cpython,110122,remove_make_testall::main,0,merged,,"Remove ""make testall"" target: use ""make buildbottest"" instead. <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-109566 --> * Issue: gh-109566 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,1,7,19,3,0,8725c0148e08bf6a6b5edd6b4e883dac17643179::
https://api.github.com/repos/python/cpython,110121,regrtest_nowindow::main,0,merged,skip news::,"The --nowindow option is deprecated and does nothing but logs a warning. <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-109566 --> * Issue: gh-109566 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,2,1,7,2,0,6efcff152e7d280d5c152802d19864e736898ce6::fd5957edfeba479260532f327f3b5b92564cc85d::
https://api.github.com/repos/python/cpython,110120,pcbuild_rt_fast_ci::main,0,merged,skip news::,"Replace ""--fail-env-changed --fail-rerun"" with ""--fast-ci"". Tools/buildbot/test.bat pass --slow-ci which has the priority over --fast-ci. <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-109566 --> * Issue: gh-109566 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,1,1,1,1,0,292fa12bcff4dc04e37ddb1e9fbc035d7db8043e::
https://api.github.com/repos/python/cpython,110118,docs/refwarn/__getitem__::main,0,merged,docs::skip news::,<!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--110118.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end --> <!-- gh-issue-number: gh-101100 --> * Issue: gh-101100 <!-- /gh-issue-number --> ::,Adam Turner,9087854,89,1,38,38,20,0,a3429cc102f47a78b0c29c8ff7b7d3e605d95603::
https://api.github.com/repos/python/cpython,110117,docs/whatsnew/3.12.0::main,0,merged,docs::skip news::,<!-- gh-issue-number: gh-109190 --> * Issue: gh-109190 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--110117.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::,Adam Turner,9087854,89,2,1,1,1,1,1a33e4ea7a6d10b807f4d9259a66387427c9af7b::4f9fdc39acf76caa0ec3ed93eb990961e679d08e::
https://api.github.com/repos/python/cpython,110115,docs/refwarn/gettext::main,0,merged,docs::skip news::,<!-- gh-issue-number: gh-101100 --> * Issue: gh-101100 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--110115.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::,Adam Turner,9087854,89,7,26,29,1,0,7a4fb43928882ee38724d844485482991ab26859::af333aab05d2d497df10e9af7b8355c795b3c8d8::bb6114b85c37e07dafbdfe8ae3454cdfe2f51f9e::47b66625821b892549f6ed257850c62c871158eb::9dbb4d0a694410e30e46f1015cee78c9513f25df::5d7f86a593064524aa6066334cd2e7e002bcf9cf::ff6b8071abdabe47fb7e02639012f464d56ccdc2::
https://api.github.com/repos/python/cpython,110113,docs/refwarn/namedtuple::main,0,merged,docs::skip news::,<!-- gh-issue-number: gh-101100 --> * Issue: gh-101100 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--110113.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::,Adam Turner,9087854,89,1,4,4,2,0,6e4e592a9cac74532172756cd518d56027a79d6f::
https://api.github.com/repos/python/cpython,110112,docs/refwarn/enter-exit::main,0,merged,docs::skip news::,<!-- gh-issue-number: gh-101100 --> * Issue: gh-101100 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--110112.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::,Adam Turner,9087854,89,3,58,58,11,0,80dd3f2a7fe0ed6e9d32cdb88be3e460dd58ef30::4b7f23fdb58dfd8ce8868d4682ceea1681f9f63e::bd09de21a0879497629eba70dab449443108121f::
https://api.github.com/repos/python/cpython,110110,backport-20bc5f7-3.11::3.11,0,merged,tests::skip news::,(cherry picked from commit 20bc5f7c28a6f8a2e156c4a748ffabb5efc7c761) Co-authored-by: Steve Dower <steve.dower@python.org> <!-- gh-issue-number: gh-109615 --> * Issue: gh-109615 <!-- /gh-issue-number --> ::,Miss Islington (bot),31488909,73,1,3,1,1,0,1ea43c92f3f8191bca1d8b3897efcdc645f5c82f::
https://api.github.com/repos/python/cpython,110108,gh-109615::main,0,merged,tests::skip news::,"<!-- gh-issue-number: gh-109615 --> * Issue: gh-109615 <!-- /gh-issue-number --> ::Can you please include a comment based on what you wrote? > The last change makes test_copy_python_src_ignore fail rather than skip on Windows installs, because the standard library exists but the Modules directory (which is the actual important landmark) does not.::",Steve Dower,1693688,360,3,3,1,1,1,ee811e5ade6cdf9cb4eaa5a6f12b0722d13df299::3bf0d92058100599f7f1d3403056e7211fbb3106::8deec70be709fed302addb50ffa6c2335ea2bf3f::
https://api.github.com/repos/python/cpython,110107,backport-9c73a9a-3.11::3.11,0,merged,skip news::,(cherry picked from commit 9c73a9acec095c05a178e7dff638f7d9769318f3) Co-authored-by: Victor Stinner <vstinner@python.org> <!-- gh-issue-number: gh-109592 --> * Issue: gh-109592 <!-- /gh-issue-number --> ::,Miss Islington (bot),31488909,73,1,16,7,1,0,7dafb925f7871b6f47369ca9386f76e48277e002::
https://api.github.com/repos/python/cpython,110106,backport-9c73a9a-3.12::3.12,0,merged,skip news::,(cherry picked from commit 9c73a9acec095c05a178e7dff638f7d9769318f3) Co-authored-by: Victor Stinner <vstinner@python.org> <!-- gh-issue-number: gh-109592 --> * Issue: gh-109592 <!-- /gh-issue-number --> ::,Miss Islington (bot),31488909,73,1,16,7,1,0,bdc0f8e5575e5a9b777ee58f287762e7581abe0e::
https://api.github.com/repos/python/cpython,110104,test_threading_asan11::3.11,0,merged,tests::,"Skip test_threading tests using thread+fork if Python is built with Address Sanitizer (ASAN). (cherry picked from commit 86e76ab8af9a5018acbcdcbb6285678175b1bd8a) <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-110031 --> * Issue: gh-110031 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,1,28,17,2,0,1cfb22a30fe8a9d4f578db13fb3be1ba55a80ce2::
https://api.github.com/repos/python/cpython,110103,test_threading_asan12::3.12,0,merged,tests::,"Skip test_threading tests using thread+fork if Python is built with Address Sanitizer (ASAN). (cherry picked from commit 86e76ab8af9a5018acbcdcbb6285678175b1bd8a) <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-110031 --> * Issue: gh-110031 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,1,27,16,2,0,838f1b25d5ef59247a96bbdb179d0a5532222138::
https://api.github.com/repos/python/cpython,110102,test_eintr::main,0,merged,tests::skip news::,"<!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-109592 --> * Issue: gh-109592 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,1,16,7,1,0,ecbc35c02f0a477956c54766daf80a4139d73ab4::
https://api.github.com/repos/python/cpython,110100,test_threading_asan::main,0,merged,tests::,"Skip test_threading tests using fork if Python is built with ASAN. <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-110031 --> * Issue: gh-110031 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,1,27,16,2,1,4465278922ecda40e7e095a4af25dff47cf8d430::
https://api.github.com/repos/python/cpython,110099,asyncio_timeout11::3.11,0,merged,,"Fix test_asyncio timeouts: don't measure the maximum duration, a test should not measure a CI performance. Only measure the minimum duration when a task has a timeout or delay. Add CLOCK_RES to test_asyncio.utils. (cherry picked from commit db0a258e796703e12befea9d6dec04e349ca2f5b) <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-110088 --> * Issue: gh-110088 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,1,19,54,7,0,cb5a21957021d847f34c673f358da2409c454766::
https://api.github.com/repos/python/cpython,110098,asyncio_timeout12::3.12,0,merged,,"Fix test_asyncio timeouts: don't measure the maximum duration, a test should not measure a CI performance. Only measure the minimum duration when a task has a timeout or delay. Add CLOCK_RES to test_asyncio.utils. (cherry picked from commit db0a258e796703e12befea9d6dec04e349ca2f5b) <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-110088 --> * Issue: gh-110088 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,1,19,54,7,0,7a21cb1cc48459c16febeef2be5d77f9bfb8e1c8::
https://api.github.com/repos/python/cpython,110095,backport-e27adc6-3.12::3.12,0,merged,docs::skip news::,(cherry picked from commit e27adc68ccee8345e05b7516e6b46f6c7ff53371) Co-authored-by: Jacob Coffee <jacob@z7x.org> <!-- gh-issue-number: gh-109634 --> * Issue: gh-109634 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--110095.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::,Miss Islington (bot),31488909,73,1,3,3,3,0,541722914e6297f20f360465b8619a0979fb8634::
https://api.github.com/repos/python/cpython,110094,replace-Py_BuildValue::main,0,merged,skip news::,<!-- gh-issue-number: gh-110093 --> * Issue: gh-110093 <!-- /gh-issue-number --> ::,Serhiy Storchaka,3659035,401,2,33,32,13,0,43b7ef3b74d2824a7eef54eab9da618dc8985285::b9257371ea0f1df97f50a8d6a62d3933e8b2c61d::
https://api.github.com/repos/python/cpython,110092,asyncio_timeout::main,0,merged,tests::topic-asyncio::,"Fix test_asyncio timeouts: don't measure the maximum duration, a test should not measure a CI performance. Only measure the minimum duration when a task has a timeout or delay. Add CLOCK_RES to test_asyncio.utils. <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-110088 --> * Issue: gh-110088 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,1,19,54,7,1,9f503f9cb9618e765c6d99147cf7494ef542711c::
https://api.github.com/repos/python/cpython,110090,gh-109991-3.10::3.10,0,merged,type-security::OS-windows::needs backport to 3.8::needs backport to 3.9::,"Requesting RM signoff on the new policy I've invented in the NEWS entry @pablogsal @ambv Walking a thin line between ""we don't ship binaries"" and ""we still apply security fixes"", but I think this one fits our policy best. <!-- gh-issue-number: gh-109991 --> * Issue: gh-109991 <!-- /gh-issue-number --> ::```suggestion end of life and no future fixes will be made, and this version of Python is ``` We might also mention that there will be no more installers produced for this version?::I thought the wording got a bit awkward when I tried to talk about installers, because anyone can create an installer if they like. Trying to say ""the core Python team won't upload new installers to python.org, just like every other time"" really didn't work.::Fair enough :)::",Steve Dower,1693688,360,2,8,4,3,1,05a837bd3e7c75fdf59fe8edc484e376e3844702::cc4dae984d7aafb3883d35ef4f2b9b86a7cafaf1::
https://api.github.com/repos/python/cpython,110089,lock_tests2::main,0,merged,skip news::,"* Add context manager on Bunch class. * Bunch now catchs exceptions on executed functions and re-raise them at __exit__() as an ExceptionGroup. * Rewrite BarrierProxy.test_default_timeout(). Use a single thread. Only check that barrier.wait() blocks for at least default timeout seconds. * test_with(): inline _with() function. <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-109974 --> * Issue: gh-109974 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,2,257,232,2,0,717369638e501d3f6493105df055092825183e67::3b0ab76cc8d34bf9bd1efd8a45e290a056142616::
https://api.github.com/repos/python/cpython,110087,backport-bfd94ab-3.11::3.11,0,merged,docs::skip news::,(cherry picked from commit bfd94ab9e9f4055ecedaa500b46b0270da9ffe12) Co-authored-by: Yuki K <drsuaimqjgar@gmail.com> Co-authored-by: Hugo van Kemenade <hugovk@users.noreply.github.com> <!-- gh-issue-number: gh-101100 --> * Issue: gh-101100 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--110087.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::,Miss Islington (bot),31488909,73,1,8,8,1,0,58e1cceac864a4f76cd86be786d3ac4d5425714a::
https://api.github.com/repos/python/cpython,110086,backport-bfd94ab-3.12::3.12,0,merged,docs::skip news::,(cherry picked from commit bfd94ab9e9f4055ecedaa500b46b0270da9ffe12) Co-authored-by: Yuki K <drsuaimqjgar@gmail.com> Co-authored-by: Hugo van Kemenade <hugovk@users.noreply.github.com> <!-- gh-issue-number: gh-101100 --> * Issue: gh-101100 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--110086.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::,Miss Islington (bot),31488909,73,1,8,8,1,1,2495bdc439556cf118a73798491ae6d484103ee5::
https://api.github.com/repos/python/cpython,110085,backport-8898a86-3.11::3.11,0,merged,skip news::,(cherry picked from commit 8898a8683b5631c24d51a6a7babf55a255874950) Co-authored-by: Maciej Olko <maciej.olko@affirm.com> Co-authored-by: Adam Turner <9087854+AA-Turner@users.noreply.github.com> <!-- gh-issue-number: gh-101100 --> * Issue: gh-101100 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--110085.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::,Miss Islington (bot),31488909,73,1,2,3,2,0,63404d692bc807bbf3b6ef6ae88d3607876aeaf0::
https://api.github.com/repos/python/cpython,110084,backport-8898a86-3.12::3.12,0,merged,skip news::,(cherry picked from commit 8898a8683b5631c24d51a6a7babf55a255874950) Co-authored-by: Maciej Olko <maciej.olko@affirm.com> Co-authored-by: Adam Turner <9087854+AA-Turner@users.noreply.github.com> <!-- gh-issue-number: gh-101100 --> * Issue: gh-101100 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--110084.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::,Miss Islington (bot),31488909,73,1,2,3,2,1,b69c4779e4d5787edcdffc4597fbf46025dfcaa7::
https://api.github.com/repos/python/cpython,110082,backport-d102d39-3.11::3.11,0,merged,skip news::,"(cherry picked from commit d102d39bbe175f179f28e4d4bea99dc122da5f8e) <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-101100 --> * Issue: gh-101100 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--110082.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::",Hugo van Kemenade,1324225,628,1,9,10,2,0,c84b833540b0e1754ef05d41a32931dc70d579a6::
https://api.github.com/repos/python/cpython,110081,backport-d102d39-3.12::3.12,0,merged,skip news::,(cherry picked from commit d102d39bbe175f179f28e4d4bea99dc122da5f8e) Co-authored-by: Nikita Sobolev <mail@sobolevn.me> <!-- gh-issue-number: gh-101100 --> * Issue: gh-101100 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--110081.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::,Miss Islington (bot),31488909,73,1,9,10,2,1,2a4ad34d8f75ec568644f563cd10a7300b43a9d7::
https://api.github.com/repos/python/cpython,110080,remove_extern_c::main,0,merged,skip news::,"<!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-110079 --> * Issue: gh-110079 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,1,6,168,18,0,ac3eb711c2987ec5e40d7a26aa1a6008a509f1aa::
https://api.github.com/repos/python/cpython,110078,makefile_remove_deepfreeze::main,0,merged,skip news::,"Remove more references to now unused Python/deepfreeze/deepfreeze.c. <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-108716 --> * Issue: gh-108716 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,1,2,11,2,0,9f5426d3985bccb34782fedb147f8197f1c15e0c::
https://api.github.com/repos/python/cpython,110077,doc_pcbuild_add_project::main,0,merged,skip news::,"<!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-108494 --> * Issue: gh-108494 <!-- /gh-issue-number --> ::I'd suggest copying an existing `test` project if you're adding a test project, or copy an existing library module if you're adding a library module. The main difference is whether they get PGO or not, but also whether a PGO failure will break the entire build.::Very likely that `Tools\msi\lib\lib_files.wxs` and/or `Tools\msi\test\test_files.wxs` will also need updating to get it into the installer. `PC\layout\main.py` only needs updating if you add a test-only extension whose name doesn't start with `_test`.::```suggestion is built successfully. * Ensure the new .vcxproj and .vcxproj.filters files are added to your commit, as well as the changes to pcbuild.sln, pcbuild.proj and any other modified files. ```::",Victor Stinner,194129,1148,2,37,9,2,1,a320a99e2b0957561959103f7cdaa59a0c2c1963::c0a05b41cab77e454fe74fa868ec39290116b31b::
https://api.github.com/repos/python/cpython,110075,freeze_buildbot::main,0,closed,tests::skip news::,"No longer skip test_tools.test_freeze on buildbots. <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-103053 --> * Issue: gh-103053 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,6,37,5,3,0,8d0f4cff16ed14357efdbbdebc1dbe2e9afc83f0::ee4b86afe741a13434170810b2600b8100cbc801::146b788cc1e53f48de7416c80447dbb46768db30::f8e155766858faec8a2eb8c4c243cff9fcc2bcf0::223449f36d44433f7837dbb155ba3ed6aba0eaa4::32d95c9045891d9dace0f65c976f77da9016ae6c::
https://api.github.com/repos/python/cpython,110074,issue-101100-difflib::main,0,merged,skip news::,"Before: ``` /Users/sobolev/Desktop/cpython/Doc/library/difflib.rst:571: WARNING: py:meth reference target not found: quick_ratio /Users/sobolev/Desktop/cpython/Doc/library/difflib.rst:571: WARNING: py:meth reference target not found: real_quick_ratio /Users/sobolev/Desktop/cpython/Doc/library/difflib.rst:571: WARNING: py:meth reference target not found: ratio /Users/sobolev/Desktop/cpython/Doc/library/difflib.rst:596: WARNING: py:meth reference target not found: ratio /Users/sobolev/Desktop/cpython/Doc/library/difflib.rst:596: WARNING: py:meth reference target not found: ratio /Users/sobolev/Desktop/cpython/Doc/library/difflib.rst:603: WARNING: py:meth reference target not found: get_matching_blocks /Users/sobolev/Desktop/cpython/Doc/library/difflib.rst:612: WARNING: py:meth reference target not found: get_matching_blocks /Users/sobolev/Desktop/cpython/Doc/library/difflib.rst:616: WARNING: py:meth reference target not found: get_opcodes /Users/sobolev/Desktop/cpython/Doc/library/difflib.rst:690: WARNING: py:meth reference target not found: io.BaseIO.readlines ``` <!-- gh-issue-number: gh-101100 --> * Issue: gh-101100 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--110074.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::For next time, let's avoid rewrapping when making changes. It's okay to extend the line length for edits and it's much easier to review with a smaller diff. Thanks!::",Nikita Sobolev,4660275,4663,1,9,10,2,1,4b3260f7fac129acfd854803728251c7a3f2047c::
https://api.github.com/repos/python/cpython,110073,109778-fix-samp-role-usage::main,0,merged,docs::skip news::,"<!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> ### What - Applies fixes found in #109778 during code review <!-- gh-issue-number: gh-109634 --> * Issue: gh-109634 <!-- /gh-issue-number --> ::![image](https://github.com/python/cpython/assets/1324225/edf8ca16-b6aa-4896-bef7-6e1e7c149e8a) Is this saying that all three `ooo` characters are the octal value? That `\777` is the octal value `777`? Or does the first `o` indicate that it's octal (compare the `x` for hexadecimal below) and the last two are the value? That `\o77` is the octal value `77`? So should it be something like this? ```suggestion | :samp:`\\o{oo}`         | Character with octal value *oo* | (2,4) | ``` ![image](https://github.com/python/cpython/assets/1324225/58f14d5a-22d8-4346-9475-4b4196680c1c) Or with another character for the sample to make it clearer? For example: ```suggestion | :samp:`\\o{xx}`         | Character with octal value *xx* | (2,4) | ``` ![image](https://github.com/python/cpython/assets/1324225/62530c7d-af28-4dbd-a53b-7ae9298a6b03) ::I think it is all three: ```python assert chr(0o123) == ""\123"" ```::",Jacob Coffee,45884264,29,2,3,3,3,0,5eddfcfed8b5823c809b83b5814ac2ba0a446a8d::8f99af248a56d48059b82d249b50422afbfd02a8::
https://api.github.com/repos/python/cpython,110072,faulthandler11::3.11,0,merged,skip news::,"faulthandler now detected freed interp and freed tstate, and no longer dereference them. Backport to 3.11: add pycore_pymem.h include to traceback.c. (cherry picked from commit 2e37a38bcbfbe1357436e030538290e7d00b668d) <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-110052 --> * Issue: gh-110052 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,1,39,12,2,0,417696565f5b37d7c7f546b4b1a446a6756968e3::
https://api.github.com/repos/python/cpython,110071,faulthandler12::3.12,0,merged,skip news::,"faulthandler now detected freed interp and freed tstate, and no longer dereference them. (cherry picked from commit 2e37a38bcbfbe1357436e030538290e7d00b668d) <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-110052 --> * Issue: gh-110052 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,1,38,12,2,0,faf7d4a2abfee4f78f8393a4ad47a4ab07813676::
https://api.github.com/repos/python/cpython,110070,backport-7dc2c50-3.12::3.12,0,merged,,(cherry picked from commit 7dc2c5093ef027aab57bca953ac2d6477a4a440b) Co-authored-by: Jelle Zijlstra <jelle.zijlstra@gmail.com> <!-- gh-issue-number: gh-110045 --> * Issue: gh-110045 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--110070.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::,Miss Islington (bot),31488909,73,1,63,5,5,2,48e067f71562d8362afd9486c585e82c1fb40879::
https://api.github.com/repos/python/cpython,110069,faulthandler::main,0,merged,skip news::,"faulthandler now detected freed interp and freed tstate, and no longer dereference them. <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-110052 --> * Issue: gh-110052 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,1,38,12,2,1,585a1a428a2652db7305ff167d84612d4158cc5f::
https://api.github.com/repos/python/cpython,110066,updatesymtab::main,0,merged,,<!-- gh-issue-number: gh-110045 --> * Issue: gh-110045 <!-- /gh-issue-number --> ::,Jelle Zijlstra,906600,635,4,63,5,5,0,5360cf93fec65ff5ce526a948bdcae74485779d0::614958291421844f0c257acdaf53dcf6c5a838d1::4d9c89324142e0e9126425e99280344abdb694ce::b19a8fcf6f9227d3aa7efa961772b83716d77ea4::
https://api.github.com/repos/python/cpython,110065,backport-bd4518c-3.11::3.11,0,merged,,"On Windows, multiprocessing Popen.terminate() now catchs PermissionError and get the process exit code. If the process is still running, raise again the PermissionError. Otherwise, the process terminated as expected: store its exit code. (cherry picked from commit bd4518c60c9df356cf5e05b81305e3644ebb5e70) Co-authored-by: Victor Stinner <vstinner@python.org> <!-- gh-issue-number: gh-110036 --> * Issue: gh-110036 <!-- /gh-issue-number --> ::",Miss Islington (bot),31488909,73,1,17,4,3,0,da28d7b51f21c66307a2eb74b8869b11ebc8eae4::
https://api.github.com/repos/python/cpython,110064,backport-bd4518c-3.12::3.12,0,merged,,"On Windows, multiprocessing Popen.terminate() now catchs PermissionError and get the process exit code. If the process is still running, raise again the PermissionError. Otherwise, the process terminated as expected: store its exit code. (cherry picked from commit bd4518c60c9df356cf5e05b81305e3644ebb5e70) Co-authored-by: Victor Stinner <vstinner@python.org> <!-- gh-issue-number: gh-110036 --> * Issue: gh-110036 <!-- /gh-issue-number --> ::",Miss Islington (bot),31488909,73,1,17,4,3,0,b98cde30521c4bf491364fab63e94330aeb85c81::
https://api.github.com/repos/python/cpython,110063,backport-4e356ad-3.11::3.11,0,closed,awaiting review::,Fix race conditions in test_threading lock tests. Wait until a condition is met rather than using time.sleep() with a hardcoded number of seconds. * Replace sleeping loops with support.sleeping_retry() which raises an exception on timeout. * Add wait_threads_blocked(nthread) which computes a sleep depending on the number of threads. Remove _wait() function. * test_set_and_clear(): use a way longer Event.wait() timeout. * BarrierTests.test_repr(): wait until the 2 threads are waiting for the barrier. Use a way longer timeout for Barrier.wait() timeout. * test_thread_leak() no longer needs to count len(threading.enumerate()): Bunch uses threading_helper.wait_threads_exit() internally which does it in wait_for_finished(). * Add BaseLockTests.wait_phase() which implements a timeout. test_reacquire() and test_recursion_count() use wait_phase(). (cherry picked from commit 4e356ad183eeb567783f4a87fd092573da1e9252) Co-authored-by: Victor Stinner <vstinner@python.org> <!-- gh-issue-number: gh-109974 --> * Issue: gh-109974 <!-- /gh-issue-number --> ::,Miss Islington (bot),31488909,73,1,226,124,2,0,46a0d2f2f8795769dc0fa310ccbe10ab200de80b::
https://api.github.com/repos/python/cpython,110062,regrtest_ctrlc::main,0,merged,skip news::,"In the subprocess code path, wait until the child process completes with a timeout of EXIT_TIMEOUT seconds. Fix create_worker_process() regression: use start_new_session=True if USE_PROCESS_GROUP is true. WorkerThread.wait_stopped() uses a timeout of 60 seconds, instead of 30 seconds. <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-109566 --> * Issue: gh-109566 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,1,33,14,4,0,126a502af3b400cc81fb690206e13d287f415fbb::
https://api.github.com/repos/python/cpython,110061,backport-5fdcea7-3.11::3.11,0,merged,tests::skip news::,"In 2003, test_pty got a hardcoded timeout of 10 seconds to prevent hanging on AIX & HPUX ""if run after test_openpty"": commit 7d8145268ee282f14d6adce9305dc3c1c7ffec14. Since 2003, test_pty was no longer reported to hang on AIX. But today, the test can fail simply because a CI is busy running other tests in parallel. The timeout of 10 seconds is no longer needed, just remove it. Moreover, regrtest now has multiple built-in generic timeout mecanisms. (cherry picked from commit 5fdcea744024c8a19ddb57057bf5ec2889546c98) Co-authored-by: Victor Stinner <vstinner@python.org> <!-- gh-issue-number: gh-109960 --> * Issue: gh-109960 <!-- /gh-issue-number --> ::",Miss Islington (bot),31488909,73,1,0,11,1,0,fd16e71b77dda43ee77733c80c1db7bb0019922c::
https://api.github.com/repos/python/cpython,110060,backport-5fdcea7-3.12::3.12,0,merged,tests::skip news::,"In 2003, test_pty got a hardcoded timeout of 10 seconds to prevent hanging on AIX & HPUX ""if run after test_openpty"": commit 7d8145268ee282f14d6adce9305dc3c1c7ffec14. Since 2003, test_pty was no longer reported to hang on AIX. But today, the test can fail simply because a CI is busy running other tests in parallel. The timeout of 10 seconds is no longer needed, just remove it. Moreover, regrtest now has multiple built-in generic timeout mecanisms. (cherry picked from commit 5fdcea744024c8a19ddb57057bf5ec2889546c98) Co-authored-by: Victor Stinner <vstinner@python.org> <!-- gh-issue-number: gh-109960 --> * Issue: gh-109960 <!-- /gh-issue-number --> ::",Miss Islington (bot),31488909,73,1,0,11,1,0,882434d48252363c527e6ed8ca6d41426fe6c62f::
https://api.github.com/repos/python/cpython,110059,backport-cf4c297-3.11::3.11,0,merged,,(cherry picked from commit cf4c29725636e1a0dd2ebab443613b56ca6c9486) <!-- gh-issue-number: gh-109991 --> * Issue: gh-109991 <!-- /gh-issue-number --> ::,Zachary Ware,6275069,117,1,5,4,3,0,b8ea25ee317311e9495231c9bd54330dd7eabb08::
https://api.github.com/repos/python/cpython,110058,test_pty::main,0,merged,tests::skip news::,"In 2003, test_pty got a hardcoded timeout of 10 seconds to prevent hanging on AIX & HPUX ""if run after test_openpty"": commit 7d8145268ee282f14d6adce9305dc3c1c7ffec14. Since 2003, test_pty was no longer reported to hang on AIX. But today, the test can fail simply because a CI is very busy running other tests in parallel. The timeout of 10 seconds is no longer needed, just remove it. Moreover, regrtest now has multiple built-in generic timeout mecanisms. <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-109960 --> * Issue: gh-109960 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,1,0,11,1,0,7140d489f99d9726e1ba32fe7de4bd24d87c1654::
https://api.github.com/repos/python/cpython,110057,fix_lock_tests::main,0,merged,tests::,"Fix race conditions in test_threading lock tests. Wait until a condition is met rather than using time.sleep() with a hardcoded number of seconds. * Replace sleeping loops with support.sleeping_retry() which raises an exception on timeout. * Add wait_threads_blocked(nthread) which computes a sleep depending on the number of threads. Remove _wait() function. * test_set_and_clear(): use a way longer Event.wait() timeout. * BarrierTests.test_repr(): wait until the 2 threads are waiting for the barrier. Use a way longer timeout for Barrier.wait() timeout. * test_thread_leak() no longer needs to count len(threading.enumerate()): Bunch uses threading_helper.wait_threads_exit() internally which does it in wait_for_finished(). * Add BaseLockTests.wait_phase() which implements a timeout. test_reacquire() and test_recursion_count() use wait_phase(). <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-109974 --> * Issue: gh-109974 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,1,226,124,2,1,74cd58d2e52c29b7a3e8ab54a5e8eb826073a201::
https://api.github.com/repos/python/cpython,110056,backport-cf4c297-3.12::3.12,0,merged,,(cherry picked from commit cf4c29725636e1a0dd2ebab443613b56ca6c9486) Co-authored-by: Zachary Ware <zach@python.org> <!-- gh-issue-number: gh-109991 --> * Issue: gh-109991 <!-- /gh-issue-number --> ::,Miss Islington (bot),31488909,73,1,5,4,3,0,27b4f99384d006078b226337de5e8bdfe5485161::
https://api.github.com/repos/python/cpython,110055,fix_openssl_news::main,0,merged,docs::,<!-- gh-issue-number: gh-109991 --> * Issue: gh-109991 <!-- /gh-issue-number --> ::,Zachary Ware,6275069,117,1,0,4,3,0,24371e72c4cd8f13789a362c6a47ed8722bbf9a3::
https://api.github.com/repos/python/cpython,110054,bump_openssl_windows::main,0,merged,,<!-- gh-issue-number: gh-109991 --> * Issue: gh-109991 <!-- /gh-issue-number --> ::,Zachary Ware,6275069,117,1,5,4,3,1,393d3b58fac06479d9910aae410f5d2ba40e15e8::
https://api.github.com/repos/python/cpython,110053,fix-pointer-type-warnings::main,0,merged,skip news::,The warnings were introduced by gh-109794 (for gh-109793). <!-- gh-issue-number: gh-110024 --> * Issue: gh-110024 <!-- /gh-issue-number --> ::,Eric Snow,1152074,290,1,16,8,1,0,6007d6170cb034c5b0d67cbd03649c03b740af36::
https://api.github.com/repos/python/cpython,110051,random::main,0,merged,skip news::,<!-- gh-issue-number: gh-110050 --> * Issue: gh-110050 <!-- /gh-issue-number --> ::,Yilei Yang,581947,244,4,2,2,1,0,14253206addd87dcb0e0e32f6f774d9b4363588c::f88c21b479f7e87e4746b42b8bb5ce9ba7a799d8::2e0e172cf8561993f589164841dcfe1f116387e7::ac3407a66786d836d59c0dfe81fbe5d62d07e724::
https://api.github.com/repos/python/cpython,110049,sysconfig_win::main,0,merged,OS-windows::topic-sysconfig::3.13::,"This adds `LIBRARY`, `LDLIBRARY`, `LIBPL`, `SOABI`, and `Py_NOGIL` variables to sysconfig on Windows. Note that `Py_NOGIL` is only defined in `--disable-gil` builds. <!-- gh-issue-number: gh-88402 --> * Issue: gh-88402 <!-- /gh-issue-number --> ::The string processing is a bit icky. It would be convenient to just pass these values (`SOABI`, `Py_NOGIL`) from a C to Python, but it wasn't clear to me where to put that (i.e., in `sys`, `_imp`, `_winapi` or someplace else)::`sys.dllhandle` is not defined if `MS_NO_COREDLL` or `Py_NO_ENABLE_SHARED` are defined. I'm not sure if those are supported cases anymore. In some other places we assume that `sys.dllhandle` is defined.::This is different from the proposed definition in https://github.com/python/cpython/issues/88402#issuecomment-1093916630 to better match POSIX platforms. On POSIX platforms,`LIBRARY` is a filename like `libpython3.13.a` (not a directory) so I tried to match that here.::I agree. Maybe a good option would be putting them on `_winapi` and then simply loading them in `_init_non_posix`?::I think that's correct, but would like if someone else confirmed it. @zooba?::Yeah, that was probably a mistake. The semantics should be aligned. cc @zooba::Does the `libs` dirs on Windows contain all the stuff the POSIX one does? ``` $ ls /usr/lib/python3.11/config-3.11-x86_64-linux-gnu config.c  config.c.in  install-sh*  libpython3.11.a  Makefile  makesetup*  __pycache__/  python-config.py*  python.o  Setup  Setup.bootstrap  Setup.local  Setup.stdlib ``` Per `LIBPL`'s description https://github.com/python/cpython/blob/adf0f15a06c6e8ddd1a6d59b28efcbb26289f080/Makefile.pre.in#L2399-L2401 If it doesn't, and if `libs` is simply the directory where the libraries are installed, I think we should call it `LIBDIR` instead. We are trying to mimic the POSIX build vars here, so even though there might be some core differences, we should try to match things as closely as possible.::(nitpick) Ideally, we should load the `SOABI` and `LIBRARY`/`LDLIBRARY` values from the C macros, but if we don't, we could at least compare the value we generate against them — by writing a C test for eg. Let's figure out the data source first, though.::(nitpick) ```suggestion Add new variables to :py:meth:`sysconfig.get_config_vars` on Windows: ``LIBRARY``, ``LDLIBRARY``, ```::`sys.flags`?::Until the `NO_ENABLE_SHARED` code is removed, I'd rather not assume it (the code in `ctypes` should be fixed too). The standard library should be usable with other runtimes as well, and while `sysconfig` is pretty closely tied to specifically CPython, the less others have to modify the better.::The semantics I originally posted used `stem`, which excludes the `.dll` extension. I'm sure I had a need for it (it'd be convenient for calculating the import library name, for example), but it's easy enough to do that when we don't have any other dots in the filename.::`libs` is the directory that has to be available to the linker when compiling extension modules. Nothing else really ought to be installed there besides what CPython includes. Whichever is the closest equivalent of that.::Isn't `sys.flags` for command line flags?::To be clear, I don't have a particular issue with exposing that information, it's just that the `LIBRARY` has a completely different semantic on POSIX, and it'd be confusing to have Windows differ. I had a look and it doesn't seems there is any config variable exposing that on POSIX, so if you think it makes sense, we can expose that information in with a name that isn't being used on POSIX. For reference, I uploaded the output of `python -m sysconfig` on my system (Arch Linux Python 3.11). https://gist.github.com/FFY00/c7fd731e64729447bef1cd41fc731c60::Should we open an issue to discuss the fate of `NO_ENABLE_SHARED`? So that we, at least, clarify it.::Thank you for clarifying :blush:! Then I think `LIBDIR` would be the right one.::`sys.implementation` then? We added these namespaces specifically to be extensible::Yeah, looks like `LIBRARY` is for a static library and `LDLIBRARY` is for dynamic? Seems weird to have them both set, but I guess that's how the makefile is set up right now.::Opened GH-110234, but after taking a deeper look into the issue, I think support probably won't be removed as it's low maintenance. The `sys.dllhandle` documentation just needs to note that it is only available on dynamic library Windows builds, because right now it reads as it is always available on Windows, explaining why people are writing code with that assumption. Good find @colesbury!::Yep, exactly! On POSIX you can have builds with both libraries. The interpreter will usually still use the dynamic library in that case, but the static lib is useful for certain use-cases (eg. embedding).::But this information (`SOABI`, `Py_NOGIL`, etc) doesn't seem quite right there, I think. Though maybe this is just my interpretation. I have a prototype locally to export this information in `_winapi`, avoiding any public API changes. It doesn't feel amazing either, but :shrug:. Really, this should just be exposed by sysconfig directly, which may involve a C `_sysconfig` module that exports this information out to Python, or something else. It's unfortunate that there's such a large discrepancy between how Makefile and Windows builds work :disappointed:. This is kind of a mess, and we should probably try to unify things, it's just... hard, and a lot of work. I'm a bit tired of all this 😕::I moved some of these to `_winapi`. A `_sysconfig` C module might also make sense, but it would be very small.::I've changed the variable to `LIBDIR`::I don't like this being here, I'd rather it be in the sys module. It's not a Windows API::What do you think about putting it in a `_sysconfig` C module?::I think we're probably past due having one of those. We already smuggle constants into `getbuildinfo.c` (git info) and `sysmodule.c` (VPATH) on Windows, so may as well put them all into a `_sysconfig.c` that is importable. Make it a built-in module though, not its own .pyd. `PC/config.c` lists the modules that are directly linked in, so it'll look like one of those.::You can see the smuggling in `PCbuild/pythoncore.vcxproj` (search for `GITVERSION=` and `VPATH=`). Doesn't necessarily have to be done the same way, but copying it is going to be the easiest way to ensure incremental builds keep working normally.::I've moved the computation to a `_sysconfig` C module. Thanks for the pointer to `PC/config.c` -- that made it easier.  I don't think we need to smuggle data from `PCbuild/pythoncore.vcxproj` like we do for `GITVERSION` and `VPATH` here.::(note for the future) I think we can move this to `_init_config_vars`, I am sure it will end up there soon anyway. The only thing to keep in mind is that we allow the POSIX config vars module (eg. `_sysconfigdata__linux_x86_64-linux-gnu`) to be overwritten (to help in cross-compilation) by setting `_PYTHON_SYSCONFIGDATA_NAME`, and we should raise an error if the value given by the user is different from what we computed. To be even more cautious, I think we should probably save the original `sysconfigdata` name in the C module, as attributes like `sys.implementation`, etc., are often monkey patched when cross-compiling. If needed, people working on cross-compilation should also monkey patch the `_sysconfig` module explicitly, or better, just monkey patch `sysconfig.get_config_vars`. You don't need to do it in this PR, I just wanted to write this down, especially to document the non-obvious issue with `_PYTHON_SYSCONFIGDATA_NAME`. I don't think relying on Makefile variables is great, for a ton of reasons, meaning the new sysconfig API (GH-103480) will very likely use `_sysconfig.config_vars` on other platforms, so I expect the `_PYTHON_SYSCONFIGDATA_NAME` issue to be relevant soon.::(nitpick) ```suggestion Returns a dictionary containing build variables intended to be exposed by sysconfig. ```::This is one of the things I wanted to avoid :sweat_smile: I think it's probably okay, but one thing to keep in mind is that `EXT_SUFFIX` is usually used as the extension to give native modules. We likely want to make sure we are setting it to the one that includes `SOABI`, not a different one (eg. the `abi3` one). In this case, I think we should probably be okay since we know Windows will always have one, and put it in the first entry.::This differs from the POSIX behavior of setting it to `0` if not found.::Oops. Good catch.::",Sam Gross,655866,1625,10,231,70,20,0,30814e42b2331f3594050617e2cd9e9b6fd7918c::3f2a744ea2fd44c24fe9b099ed1d808a27d3d84c::0ce92b29b216f86294e8483875ace6e0e747b009::aa396e5ef43c5dd1e5c2f8dfc357aaeafd39ec1c::89f891c7b6b8c90f998c09f57b5f5eb8bcae1a0b::14d201c48114020bcdc53e87c3530fa416501a6f::34fe412468a1b5be2adbf14f78856c117880a46b::db30ede9de8c6cb682c94cbfc3b0131498019341::f0fb2354784d247347570a5d8eecbd743156f9c4::0a84d766292c767560e82033c08dc404f3bb864b::
https://api.github.com/repos/python/cpython,110048,backport-f580edc-3.12::3.12,0,merged,,For 3.12.1. (cherry picked from commit f580edcc6a4c528020afe46c753db713474acad6) Co-authored-by: Irit Katriel <1055913+iritkatriel@users.noreply.github.com> <!-- gh-issue-number: gh-109889 --> * Issue: gh-109889 <!-- /gh-issue-number --> ::,Miss Islington (bot),31488909,73,1,18,1,3,1,0dcb782168137015f106c65b5f6015c13d9aa869::
https://api.github.com/repos/python/cpython,110047,backport-526380e-3.12::3.12,0,merged,docs::skip news::,(cherry picked from commit 526380e28644236bde9e41b949497ca1ee22653f) <!-- gh-issue-number: gh-109190 --> * Issue: gh-109190 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--110047.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::,Adam Turner,9087854,89,1,29,2,2,1,f8cb762dc7679f8d1237daa359aaad336ed4fc2f::
https://api.github.com/repos/python/cpython,110044,backport-b14f0ab-3.11::3.11,0,merged,,(cherry picked from commit b14f0ab51cb4851b25935279617e388456dcf716) <!-- gh-issue-number: gh-110038 --> * Issue: gh-110038 <!-- /gh-issue-number --> ::,Davide Rizzo,1160460,0,1,38,1,3,0,01b23d0478d18c14f1d384e866ea5e3f9d7dde7e::
https://api.github.com/repos/python/cpython,110043,backport-b14f0ab-3.12::3.12,0,merged,,(cherry picked from commit b14f0ab51cb4851b25935279617e388456dcf716) <!-- gh-issue-number: gh-110038 --> * Issue: gh-110038 <!-- /gh-issue-number --> ::,Davide Rizzo,1160460,0,1,38,1,3,0,5012cf7941284a3a84bfcb70a78397efe3f3c532::
https://api.github.com/repos/python/cpython,110041,backport-7e0fbf5-3.11::3.11,0,merged,,"Fix test_interprocess_signal() of test_signal. Make sure that the subprocess.Popen object is deleted before the test raising an exception in a signal handler. Otherwise, Popen.__del__() can get the exception which is logged as ""Exception ignored in: ...."" and the test fails. (cherry picked from commit 7e0fbf5175fcf21dae390ba68b7f49706d62aa49) Co-authored-by: Victor Stinner <vstinner@python.org> <!-- gh-issue-number: gh-110033 --> * Issue: gh-110033 <!-- /gh-issue-number --> ::",Miss Islington (bot),31488909,73,1,13,0,2,0,b8c38cf570e78ea21d0bec4bf47d83449380135d::
https://api.github.com/repos/python/cpython,110040,backport-7e0fbf5-3.12::3.12,0,merged,,"Fix test_interprocess_signal() of test_signal. Make sure that the subprocess.Popen object is deleted before the test raising an exception in a signal handler. Otherwise, Popen.__del__() can get the exception which is logged as ""Exception ignored in: ...."" and the test fails. (cherry picked from commit 7e0fbf5175fcf21dae390ba68b7f49706d62aa49) Co-authored-by: Victor Stinner <vstinner@python.org> <!-- gh-issue-number: gh-110033 --> * Issue: gh-110033 <!-- /gh-issue-number --> ::",Miss Islington (bot),31488909,73,1,13,0,2,0,70e6e1afa555490c144825ce775b6d72b953a5ce::
https://api.github.com/repos/python/cpython,110039,fix/kqueue-max-events::main,0,merged,,"With this change, each registered read or write filter is counted separately, even if it shares a fd. As a side effect, a call to `KqueueSelector.select()` might return a separate entry with the same key, one with EVENT_READ and the other with EVENT_WRITE (and never both). This was already the case before, but it might become more evident now. <!-- gh-issue-number: gh-110038 --> * Issue: gh-110038 <!-- /gh-issue-number --> ::I suggest to move this check at the end, and make sure that len == 2.::We might get 1 or 2 items, depending on the implementation. I think it's only 2 for KqueueSelector (which is not ideal, but see note in the PR).::Oh, it's possible that a single entry contains both events, I see! Ok.::",Davide Rizzo,1160460,0,3,38,1,3,1,44980b711f710317dfe7efe0cce6b3c25e15429c::c32a68adc54fa176bd2632b949360bd729f0e54c::68a1c2d38102c874c149c4d8f9d6e5ec37f11208::
https://api.github.com/repos/python/cpython,110037,mp_popen_terminate::main,0,merged,,"On Windows, multiprocessing Popen.terminate() now catchs PermissionError and get the process exit code. If the process is still running, raise again the PermissionError. Otherwise, the process terminated as expected: store its exit code. <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-110036 --> * Issue: gh-110036 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,1,17,4,3,0,0ed6e0baf77bf84fa378c18168d53f5748ae7441::
https://api.github.com/repos/python/cpython,110035,test_interprocess_signal::main,0,merged,,"Fix test_interprocess_signal() of test_signal. Make sure that the subprocess.Popen object is deleted before the test raising an exception in a signal handler. Otherwise, Popen.__del__() can get the exception which is logged as ""Exception ignored in: ...."" and the test fails. <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-110033 --> * Issue: gh-110033 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,1,13,0,2,0,628edcec04977f96091e60787b0ca46b753eacfa::
https://api.github.com/repos/python/cpython,110030,issue_110014::main,0,closed,awaiting core review::skip news::build::,The pycore_semaphore.h header is included by Python/lock.c and Python/parking_lot.c. The macro `_POSIX_SEMAPHORES` was not consistently defined across the two files (due to a missing include of `<unistd.h>`) leading to different struct definitions. The RHEL8 ppc64le LTO buildbot correctly warned due to this issue. <!-- gh-issue-number: gh-110014 --> * Issue: gh-110014 <!-- /gh-issue-number --> ::,Sam Gross,655866,1625,1,4,0,1,0,6e0228b7438d258e90e20ab7ee1bd045e489411a::
https://api.github.com/repos/python/cpython,110028,ttydocs::main,0,merged,docs::skip news::,Followup from #101832 <!-- gh-issue-number: gh-85984 --> * Issue: gh-85984 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--110028.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::,Jelle Zijlstra,906600,635,1,6,0,1,0,4c49b2b231e04eb67d8371d2c6de0765aa2b059c::
https://api.github.com/repos/python/cpython,110027,issue-109961-2::main,0,merged,docs::skip news::,"This sets correct `:module:` context for `builtins.object.{__copy__,__deepcopy__,__replace__}` Now their urls are: - [`library/copy.html#object.__copy__`](https://cpython-previews--110027.org.readthedocs.build/en/110027/library/copy.html#object.__copy__) - [`library/copy.html#object.__deepcopy__`](https://cpython-previews--110027.org.readthedocs.build/en/110027/library/copy.html#object.__deepcopy__) - [`library/copy.html#object.__replace__`](https://cpython-previews--110027.org.readthedocs.build/en/110027/library/copy.html#object.__replace__) All links seem to work. CC @AA-Turner @hugovk @serhiy-storchaka Refs https://github.com/python/cpython/pull/109968 <!-- gh-issue-number: gh-109961 --> * Issue: gh-109961 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--110027.org.readthedocs.build/en/110027/library/copy.html <!-- readthedocs-preview cpython-previews end -->::```suggestion .. currentmodule:: None ```::",Nikita Sobolev,4660275,4663,3,5,2,1,0,f24987d032b9db9c9a528149525949227df55273::e716bbb83e96be6cf0fdfecd72b5f0162fa60da4::d69efc5b79c164eb5810476e7bd5a044c4776ac8::
https://api.github.com/repos/python/cpython,110026,enhance_test_gdb::main,0,merged,skip news::,"* Split PyBtTests.test_pycfunction() into 2 files, test_cfunction and test_cfunction_full, and 6 functions: * test_pycfunction_noargs() * test_pycfunction_o() * test_pycfunction_varargs() * test_pycfunction_varargs_keywords() * test_pycfunction_fastcall() * test_pycfunction_fastcall_keywords() * In verbose mode, these ""pycfunction"" tests now log each tested call. * Move get_gdb_repr() to PrettyPrintTests. * Replace DebuggerTests.get_sample_script() with SAMPLE_SCRIPT. * Rename checkout_hook_path to CHECKOUT_HOOK_PATH. * Rename gdb_version to GDB_VERSION_TEXT. * Replace (gdb_major_version, gdb_minor_version) with GDB_VERSION. * run_gdb() uses ""backslashreplace"" error handler. * Add check_gdb() function to util.py. * Enhance support.check_cflags_pgo(): check also for sysconfig PGO_PROF_USE_FLAG (if available) in compiler flags. <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-109972 --> * Issue: gh-109972 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,2,299,218,8,0,18029d6f753c93c2dd5e9ad6c081099765b6b645::8f62f7acdf8628d639922b4227afabc8df278792::
https://api.github.com/repos/python/cpython,110023,issue-110020::main,0,merged,skip news::,Refs https://github.com/python/cpython/pull/109943 <!-- gh-issue-number: gh-110020 --> * Issue: gh-110020 <!-- /gh-issue-number --> ::,Nikita Sobolev,4660275,4663,1,9,18,3,0,e5c7cf751d6d9819dfc7af92076e49ce1dfdce21::
https://api.github.com/repos/python/cpython,110022,backport-9be283e-3.11::3.11,0,merged,tests::,"Fix test_timeout() of test_concurrent_futures.test_wait. Remove the future which may or may not complete depending if it takes longer than the timeout ot not. Keep the second future which does not complete before wait(). Make also the test faster: 0.5 second instead of 6 seconds, so remove @support.requires_resource('walltime') decorator. (cherry picked from commit 9be283e5e15d5d5685b78a38eb132501f7f3febb) Co-authored-by: Victor Stinner <vstinner@python.org> <!-- gh-issue-number: gh-109594 --> * Issue: gh-109594 <!-- /gh-issue-number --> ::",Miss Islington (bot),31488909,73,1,13,7,2,0,073e087fe1d471b2aeebc5c0aea58ea5c3e5fe6c::
https://api.github.com/repos/python/cpython,110021,backport-9be283e-3.12::3.12,0,merged,tests::,"Fix test_timeout() of test_concurrent_futures.test_wait. Remove the future which may or may not complete depending if it takes longer than the timeout ot not. Keep the second future which does not complete before wait(). Make also the test faster: 0.5 second instead of 6 seconds, so remove @support.requires_resource('walltime') decorator. (cherry picked from commit 9be283e5e15d5d5685b78a38eb132501f7f3febb) Co-authored-by: Victor Stinner <vstinner@python.org> <!-- gh-issue-number: gh-109594 --> * Issue: gh-109594 <!-- /gh-issue-number --> ::",Miss Islington (bot),31488909,73,1,13,8,2,0,98800fad36bf99b2e10f4f5f3089e3739d748dcb::
https://api.github.com/repos/python/cpython,110018,cf_fix_test_timeout::main,0,merged,tests::,"Fix test_timeout() of test_concurrent_futures.test_wait. Remove the future which may or may not complete depending if it takes longer than the timeout ot not. Keep the second future which does not complete before wait(). Make also the test faster: 0.5 second instead of 6 seconds, so remove @support.requires_resource('walltime') decorator. <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-109594 --> * Issue: gh-109594 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,1,13,8,2,0,d9d8cc02b996055b4d092096e169fc82c0fe28da::
https://api.github.com/repos/python/cpython,110015,patch-1::main,0,merged,docs::skip issue::skip news::,Indentation fix <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--110015.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::,Davide Rizzo,1160460,0,1,2,2,1,0,b889a57647dab2db161717c3026f2a6bd0eca8c3::
https://api.github.com/repos/python/cpython,110010,backport-98c0c1d-3.11::3.11,0,merged,,(cherry picked from commit 98c0c1de18e9ec02a0dde0a89b9acf9415891de2) Co-authored-by: Ned Deily <nad@python.org> <!-- gh-issue-number: gh-109991 --> * Issue: gh-109991 <!-- /gh-issue-number --> ::,Miss Islington (bot),31488909,73,1,4,3,2,0,44f15dadcab73d2f9557fe8b67ec7eb1b81a5a00::
https://api.github.com/repos/python/cpython,110007,gh-109991-openssl3011-cli-310::3.10,0,merged,3.10::,(cherry picked from commit c88037d137a98d7c399c7bd74d5117b5bcae1543) <!-- gh-issue-number: gh-109991 --> * Issue: gh-109991 <!-- /gh-issue-number --> ::,Ned Deily,5833005,142,1,7,5,3,1,f61c97a594b870e5f8f23143f9e5d8610e53bee0::
https://api.github.com/repos/python/cpython,110006,gh-109991-openssl3011-cli-311::3.11,0,merged,,(cherry picked from commit c88037d137a98d7c399c7bd74d5117b5bcae1543) <!-- gh-issue-number: gh-109991 --> * Issue: gh-109991 <!-- /gh-issue-number --> ::,Ned Deily,5833005,142,1,8,6,3,0,71b5e28b25d4133e8ff8561a9d15ba62fe4a3c38::
https://api.github.com/repos/python/cpython,110005,backport-c88037d-3.12::3.12,0,merged,,(cherry picked from commit c88037d137a98d7c399c7bd74d5117b5bcae1543) Co-authored-by: Ned Deily <nad@python.org> <!-- gh-issue-number: gh-109991 --> * Issue: gh-109991 <!-- /gh-issue-number --> ::,Miss Islington (bot),31488909,73,1,9,7,3,0,d9b635081d713ee7149124a09fd684f917886d06::
https://api.github.com/repos/python/cpython,110004,gh-109991-openssl3011-312::3.12,0,merged,,(cherry picked from commit 884cd180876f60dc65bf00e33c0435be9918e410) <!-- gh-issue-number: gh-109991 --> * Issue: gh-109991 <!-- /gh-issue-number --> ::,Ned Deily,5833005,142,1,4,3,2,0,9e474ee0c7c8c82e54ca48b8230ec79f8386b277::
https://api.github.com/repos/python/cpython,110003,gh-109991-openssl3011::main,0,merged,,<!-- gh-issue-number: gh-109991 --> * Issue: gh-109991 <!-- /gh-issue-number --> ::,Ned Deily,5833005,142,1,4,3,2,0,884cd180876f60dc65bf00e33c0435be9918e410::
https://api.github.com/repos/python/cpython,110002,gh-109991-openssl3011-cli::main,0,merged,needs backport to 3.11::,<!-- gh-issue-number: gh-109991 --> * Issue: gh-109991 <!-- /gh-issue-number --> ::,Ned Deily,5833005,142,1,9,7,3,1,7d5e13a9f32636f371d59f2db35df073d906fe27::
https://api.github.com/repos/python/cpython,109999,backport-f65f9e8-3.12::3.12,0,merged,,"…GH-109819). (cherry picked from commit f65f9e80fe741c894582a3e413d4e3318c1ed626) <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-109818 --> * Issue: gh-109818 <!-- /gh-issue-number --> ::",Jelle Zijlstra,906600,635,1,14,0,3,1,3d8ce93fd53ed2917a2085768d5383e266424a5c::
https://api.github.com/repos/python/cpython,109995,shutil_which_no_extv3::main,0,merged,,"Based off the conversation in [gh-109590](https://github.com/python/cpython/issues/109590), if os.X_OK, only give back things that match PATHEXT. Add some corresponding tests. @zooba said this should probably be in a 3.12.1, so I've marked it that way, though I'm not sure what else I need to change to aim for that. Please advise. Thanks. Also updated the `which` tests to work a bit cleaner in terms of `str` vs `bytes`. Previously a decent amount of testing wasn't actually running as `bytes`. <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--109995.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::```suggestion suffix = os.path.splitext(files[0])[1].casefold() if mode & os.X_OK and not any(suffix == ext.casefold() for ext in pathext): ```::```suggestion del files[0] ```::",Charles Machalow,5749838,18,4,91,12,4,0,e13eefeecea3fcd9dff5ee11cf661871efbbb792::f5a736b1749f1d954dcb6cb128ca36092908881d::d93e51febef5bae07d03139384b8898b5b67569b::4bed27cb6e36ea525a29fb14125b36b8cc53e2e5::
https://api.github.com/repos/python/cpython,109994,fix-subinterp-sys-path-0::main,0,merged,,"This change makes sure `sys.path[0]` is set properly for subinterpreters.  Before, it wasn't getting set at all.  This PR does not address the broader concerns from gh-109853.::",Eric Snow,1152074,290,9,214,10,7,1,204d712aea6698a3f2e47a18f67a5448ff2fcadf::1843e11451657f455f4865c678d16ac5d8b65403::47278d58441626fa4881a9b41386f1c74b9bd9e5::d39b45b3fcf9f27f11f8755e0a7bd55a9bee745f::8b909df5920c467f54af8e44028caa1c2f0abb90::e36e0d2a4c651e9636eab3743edaa0a801bebf5e::b3501e70996e634b7fa4127246249c70c146b465::fe4fdc3dcb68a2f255bcd77a06e28c69f4a4e927::de7237bc53b47c45e084e22ce6467149f007f02d::
https://api.github.com/repos/python/cpython,109993,backport-45cf5b0-3.11::3.11,0,merged,skip news::,(cherry picked from commit 45cf5b0c69bb5c51f33fc681d90c45147e311ddf) Co-authored-by: Kristján Valur Jónsson <sweskman@gmail.com> Co-authored-by: Adam Turner <9087854+AA-Turner@users.noreply.github.com> <!-- gh-issue-number: gh-109955 --> * Issue: gh-109955 <!-- /gh-issue-number --> ::,Miss Islington (bot),31488909,73,1,17,7,1,0,f04c4d5b9f92d4f1cf84309383859eadf0e47837::
https://api.github.com/repos/python/cpython,109992,backport-45cf5b0-3.12::3.12,0,merged,skip news::,(cherry picked from commit 45cf5b0c69bb5c51f33fc681d90c45147e311ddf) Co-authored-by: Kristján Valur Jónsson <sweskman@gmail.com> Co-authored-by: Adam Turner <9087854+AA-Turner@users.noreply.github.com> <!-- gh-issue-number: gh-109955 --> * Issue: gh-109955 <!-- /gh-issue-number --> ::,Miss Islington (bot),31488909,73,1,17,7,1,0,9669321f2ad492536ebff3aefe87c7e02ba999af::
https://api.github.com/repos/python/cpython,109987,gh-109889::main,0,merged,performance::interpreter-core::,"Fixes #109889. <!-- gh-issue-number: gh-109889 --> * Issue: gh-109889 <!-- /gh-issue-number --> ::Initially, I thought it would be simpler to have the same behavior whether the next instruction is in the same basicblock or the next one; i.e. it would be clearer to just match the behavior above on lines 1004-1011. If the next instruction has no location, set it to this NOP's location and remove this NOP. But then I realized that this is not actually equivalent in the case where we are crossing to the next basicblock, because the next basicblock may be a jump target, and that jump should not report the location from the current NOP. So we can't safely use the ""copy location to next instr without location"" approach across the basicblock boundary. I'm not sure if this subtlety will be obvious to future readers/modifiers of this code? We could safely use this new behavior (skip NOP without lineno that will be removed) in all cases, and restructure the code so that first we find the next ""relevant"" instruction (whether in current or next basic block), and then compare its location with the current NOP. I think this would be somewhat clearer and simpler, but it's up to you whether you agree / think it's worth it.::> We could safely use this new behavior (skip NOP without lineno that will be removed) in all cases I think we are a bit more aggressive when it's within the same basic block: we will hand the location on to any instruction that doesn't have a line number, not just a NOP. ::",Irit Katriel,1055913,162,2,18,1,3,0,f175677c457fed68f1ad90f898654edbe6c0c605::cf54f14dc800e7b21ba4d9d5c40ff025dcd4193f::
https://api.github.com/repos/python/cpython,109984,patch-1::main,0,merged,docs::skip issue::skip news::,Remove unused imports in multiprocessing docs example. <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--109984.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::,Albert Villanova del Moral,8515462,258,1,0,1,1,0,d90ebd748448382371e3d8feda9ba4a2cdf44451::
https://api.github.com/repos/python/cpython,109983,backport-f49958c-3.11::3.11,0,merged,docs::skip issue::skip news::,"As discussed in comments to GH-109544, the semantics of this attribute are somewhat confusing. Add a note explaining its limitations and steering users towards __required_keys__ and __optional_keys__ instead. (cherry picked from commit f49958c886a2f2608f1008186d588efc2a98b445) Co-authored-by: Jelle Zijlstra <jelle.zijlstra@gmail.com> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--109983.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::",Miss Islington (bot),31488909,73,1,15,0,1,1,edc723fde186565ace8d404502bc51ca7f8c9796::
https://api.github.com/repos/python/cpython,109982,backport-f49958c-3.12::3.12,0,merged,docs::skip issue::skip news::,"As discussed in comments to GH-109544, the semantics of this attribute are somewhat confusing. Add a note explaining its limitations and steering users towards __required_keys__ and __optional_keys__ instead. (cherry picked from commit f49958c886a2f2608f1008186d588efc2a98b445) Co-authored-by: Jelle Zijlstra <jelle.zijlstra@gmail.com> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--109982.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::Just to bring it in line with what other parts of the typing docs convention ```suggestion total. For example, a ``TypedDict`` with ``__total__`` set to ``True`` may ```::This change is a backport. If you want to fix the doc, you should fix it in the main branch first.::",Miss Islington (bot),31488909,73,1,15,0,1,1,0c1ffb7006864d7ffc0d761aaf4b474133e0b1b1::
https://api.github.com/repos/python/cpython,109977,split_test_gdb::main,0,merged,,"Split test_gdb.py file into a test_gdb package made of multiple tests, so tests can now be run in parallel. * Create Lib/test/test_gdb/ directory. * Split test_gdb.py into multiple files in Lib/test/test_gdb/ directory. * Move Lib/test/gdb_sample.py to Lib/test/test_gdb/ directory. Update get_sample_script(): use __file__ to locate gdb_sample.py. * Move gdb_has_frame_select() and HAS_PYUP_PYDOWN to test_misc.py. * Explicitly skip test_gdb on Windows. Previously, test_gdb was skipped even if gdb was available because of gdb_has_frame_select(). <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-109972 --> * Issue: gh-109972 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,1,1124,1066,11,1,415a93aee1c7671994e7027969944179257faf7c::
https://api.github.com/repos/python/cpython,109976,backport-cc54bcf-3.11::3.11,0,merged,tests::skip news::,"Not only check if src_dir exists, but look also for Lib/os.py landmark. (cherry picked from commit cc54bcf17b5b5f7681f52baf3acef75b995fa1fd) Co-authored-by: Victor Stinner <vstinner@python.org> <!-- gh-issue-number: gh-109615 --> * Issue: gh-109615 <!-- /gh-issue-number --> ::",Miss Islington (bot),31488909,73,1,9,1,1,0,5dbd4d00e6233af557363bb43638b6395544ca15::
https://api.github.com/repos/python/cpython,109971,backport-b35f084-3.12::3.12,0,merged,docs::skip news::,(cherry picked from commit b35f0843fc15486b17bc945dde08b306b8e4e81f) Co-authored-by: Adam Turner <9087854+AA-Turner@users.noreply.github.com> <!-- gh-issue-number: gh-109190 --> * Issue: gh-109190 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--109971.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::,Miss Islington (bot),31488909,73,2,247,167,1,1,a6283d23d0f049efa178f8e6c80b6e9c130acc6c::473f037e2d8c98b9ce60d3f9e54306aacb0576c8::
https://api.github.com/repos/python/cpython,109970,test_copy_python_src_ignore_wasm::main,0,merged,tests::skip news::,"Not only check if src_dir exists, but look also for Lib/os.py landmark. <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-109615 --> * Issue: gh-109615 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,1,9,1,1,0,c7d02fcb241ee60e2127fa948568c4817246fa34::
https://api.github.com/repos/python/cpython,109969,regrtest_wasi::main,0,merged,skip news::,"regrtest: --fast-ci and --slow-ci options no longer enable --rerun if the --python option is used. <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-109566 --> * Issue: gh-109566 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,1,12,3,2,0,b61593e5466173b046d95457ee763350bcea52be::
https://api.github.com/repos/python/cpython,109968,issue-109961::main,0,merged,docs::skip news::needs backport to 3.11::needs backport to 3.12::,"This is how it looks now: <img width=""796"" alt=""Снимок экрана 2023-09-27 в 16 22 12"" src=""https://github.com/python/cpython/assets/4660275/77e53cbb-c327-49db-a9a3-10a40b0dc807""> I've also added `__copy__` and `__deepcopy__` definitions, so they can be referenced. Refs https://github.com/python/cpython/issues/101100 <!-- gh-issue-number: gh-109961 --> * Issue: gh-109961 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--109968.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::But please keep `:noindex:`. There are already entries for `__replace__` etc, and duplicates that refer to the same target are confusing.::Hm, when adding `noindex` it starts to fail `nitpick` mode: ``` /Users/sobolev/Desktop/cpython/Doc/library/copy.rst:90: WARNING: py:meth reference target not found: object.__copy__ /Users/sobolev/Desktop/cpython/Doc/library/copy.rst:90: WARNING: py:meth reference target not found: object.__deepcopy__ /Users/sobolev/Desktop/cpython/Doc/library/copy.rst:112: WARNING: py:meth reference target not found: object.__replace__ ```::With two indexes we have: <img width=""302"" alt=""Снимок экрана 2023-09-27 в 17 55 22"" src=""https://github.com/python/cpython/assets/4660275/4101d626-797d-4ea1-81f2-2387f5c8d76a""> They link to: - `copy.html#copy.object.__replace__` - `copy.html#index-2` Do we need the `index` directive itself now?::You could consider [``:noindexentry:``](https://www.sphinx-doc.org/en/master/usage/restructuredtext/domains.html#basic-markup)? A::It generated just one link in `index.html`: `copy.html#index-2` No warnings 👍 Thanks, TIL about `noindexentry` :)::This answers a question I had: with noindexentry, can we still link to the method. I just hope it’s not indexed as `copy.object` instead of `builtins.object`!::Of course, it is `copy.object`. https://cpython-previews--109968.org.readthedocs.build/en/109968/library/copy.html#copy.object.__replace__ You need to add `.. currentmodule:: .` to make it builtin.::",Nikita Sobolev,4660275,4663,3,21,13,2,1,dd1bbb5c271616e22d31ce20ec0d43e674f949e3::15de5b9e7a5a5063b95691e508bcec0b7fbb6f68::e9ea5140d4a500990f341344536ce2d748cd222b::
https://api.github.com/repos/python/cpython,109967,backport-d9809e8-3.11::3.11,0,merged,skip news::,(cherry picked from commit d9809e84fbf22ed8d90b212a9322260f7074bc9c) Co-authored-by: Nikita Sobolev <mail@sobolevn.me> Co-authored-by: Adam Turner <9087854+AA-Turner@users.noreply.github.com> <!-- gh-issue-number: gh-101100 --> * Issue: gh-101100 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--109967.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::,Miss Islington (bot),31488909,73,1,3,3,2,0,cc70094f01e86e252cd7d41e9a317c581d7d9cac::
https://api.github.com/repos/python/cpython,109966,backport-d9809e8-3.12::3.12,0,merged,skip news::,(cherry picked from commit d9809e84fbf22ed8d90b212a9322260f7074bc9c) Co-authored-by: Nikita Sobolev <mail@sobolevn.me> Co-authored-by: Adam Turner <9087854+AA-Turner@users.noreply.github.com> <!-- gh-issue-number: gh-101100 --> * Issue: gh-101100 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--109966.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::,Miss Islington (bot),31488909,73,1,3,3,2,1,b17a8837f7ccaba0d254dc0ab54e7594f39a29b3::
https://api.github.com/repos/python/cpython,109963,issue-101100-devmode::main,0,merged,docs::skip news::,"It used to be: ``` /Users/sobolev/Desktop/cpython/Doc/library/devmode.rst:61: WARNING: py:const reference target not found: SIGSEGV /Users/sobolev/Desktop/cpython/Doc/library/devmode.rst:61: WARNING: py:const reference target not found: SIGFPE /Users/sobolev/Desktop/cpython/Doc/library/devmode.rst:61: WARNING: py:const reference target not found: SIGABRT /Users/sobolev/Desktop/cpython/Doc/library/devmode.rst:61: WARNING: py:const reference target not found: SIGBUS /Users/sobolev/Desktop/cpython/Doc/library/devmode.rst:61: WARNING: py:const reference target not found: SIGILL ``` <!-- gh-issue-number: gh-101100 --> * Issue: gh-101100 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--109963.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::To preserve the current rendering: ```suggestion the :const:`~signal.SIGSEGV`, :const:`~signal.SIGFPE`, :const:`~signal.SIGABRT`, :const:`~signal.SIGBUS` and :const:`~signal.SIGILL` signals to dump the Python traceback on a crash. ```::",Nikita Sobolev,4660275,4663,2,3,3,2,0,cdaab2c64c502219635af4c52d401f388fa32842::c4d24d1c10f531e48a3394126e9e2bb6ab133a54::
https://api.github.com/repos/python/cpython,109962,test_copy_python_src_ignore11::3.11,0,merged,skip news::,"Fix the test when run on an installed Python: use ""abs_srcdir"" of sysconfig, and skip the test if the Python source code cannot be found. * Tools/patchcheck/patchcheck.py, Tools/freeze/test/freeze.py and Lib/test/libregrtest/utils.py now first try to get ""abs_srcdir"" from sysconfig, before getting ""srcdir"" from sysconfig. * test.pythoninfo logs sysconfig ""abs_srcdir"". (cherry picked from commit b89ed9df39851348fbb1552294644f99f6b17d2c) <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-109615 --> * Issue: gh-109615 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,1,32,8,5,0,392a73a16519ff95d1fb152f9634c875f12b26a1::
https://api.github.com/repos/python/cpython,109958,test_copy_python_src_ignore::main,0,merged,skip news::,"Fix the test when run on an installed Python: use ""abs_srcdir"" of sysconfig, and skip the test if the Python source code cannot be found. * Tools/patchcheck/patchcheck.py, Tools/freeze/test/freeze.py and Lib/test/libregrtest/utils.py now first try to get ""abs_srcdir"" from sysconfig, before getting ""srcdir"" from sysconfig. * test.pythoninfo logs sysconfig ""abs_srcdir"". <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-109615 --> * Issue: gh-109615 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,1,30,8,5,1,b9027a92cb04a0fcc90efa051635dcfaf1641fa1::
https://api.github.com/repos/python/cpython,109957,issue-109956::main,0,merged,tests::skip news::,"I've also added `PointFromInheritance`, since it is a very common pattern. <!-- gh-issue-number: gh-109956 --> * Issue: gh-109956 <!-- /gh-issue-number --> ::Should we test the class? ```suggestion p = Point(11, 22) assert isinstance(copy.replace(p, x=12), Point) ```::Why not? :) Done.::```suggestion self.assertEqual(copy.replace(p), (11, 22)) self.assertIsInstance(copy.replace(p), Point) ```::Oh I meant to test the copy, not the original p!::I did not notice this conversation (I can't see the text few lines above the line I'm looking at), but I added a test for a copy just before merging. I was puzzled as to why the test for the original was added, but decided not to drag the review out.::",Nikita Sobolev,4660275,4663,3,18,8,1,0,2bb84a0fff9435955ea22778ffb40bf61cdd052c::8452d949f2b8331fc82b8053f0b86d31a193fa58::2e3db6ffc145b9db7d6129e8d0e018e69a9293eb::
https://api.github.com/repos/python/cpython,109954,regrtest_python_opts_wasm::main,0,merged,skip news::,"WASM and WASI buildbots use multiple PYTHON environment variables such as PYTHONPATH and _PYTHON_HOSTRUNNER. Don't use -E if the --python=COMMAND option is used. <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-109566 --> * Issue: gh-109566 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,1,20,8,3,0,4cc97529fd17badb644d74d540440d1a4049d70a::
https://api.github.com/repos/python/cpython,109953,patch-1::main,0,closed,docs::skip issue::awaiting core review::skip news::needs backport to 3.11::needs backport to 3.12::,"`decimal.Decimal.exp()` was introduced in Python 2.6. This snippet is almost redundant, cause the native one should be more proper in most cases. <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--109953.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::",,3125695,18,1,0,24,1,0,b1b37774396d6ec2e690bc34eefc15ed8fb6763c::
https://api.github.com/repos/python/cpython,109952,backport-b1aebf1-3.12::3.12,0,merged,tests::skip news::,as_completed() uses a timeout of 100 ms instead of 10 ms. Windows monotonic clock resolution is around 15.6 ms. (cherry picked from commit b1aebf1e6576680d606068d17e2208259573e061) Co-authored-by: Victor Stinner <vstinner@python.org> <!-- gh-issue-number: gh-109565 --> * Issue: gh-109565 <!-- /gh-issue-number --> ::,Miss Islington (bot),31488909,73,1,5,2,1,0,62986cb3619588018c77a90dbaa36ef8c3b8f075::
https://api.github.com/repos/python/cpython,109951,freeze_src_dir311::3.11,0,merged,skip news::,"Fix copy_source_tree() function of test_tools.test_freeze: * Don't copy SRC_DIR/build/ anymore. This directory is modified by other tests running in parallel. * Add test.support.copy_python_src_ignore(). * Use sysconfig to get the source directory. * Use sysconfig.get_config_var() to get CONFIG_ARGS variable. (cherry picked from commit 1512d6c6ee2a770afb339bbb74c1b990116f7f89) <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-109615 --> * Issue: gh-109615 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,1,58,56,5,0,78c961a899736f2f4706c53fecf96f529955f98e::
https://api.github.com/repos/python/cpython,109950,freeze_src_dir312::3.12,0,merged,skip news::,"Fix copy_source_tree() function of test_tools.test_freeze: * Don't copy SRC_DIR/build/ anymore. This directory is modified by other tests running in parallel. * Add test.support.copy_python_src_ignore(). * Use sysconfig to get the source directory. * Use sysconfig.get_config_var() to get CONFIG_ARGS variable. (cherry picked from commit 1512d6c6ee2a770afb339bbb74c1b990116f7f89) <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-109615 --> * Issue: gh-109615 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,1,60,50,5,0,1fb2b190f33a7bc64b24e7d11df7b7b978fe5289::
https://api.github.com/repos/python/cpython,109949,cf_fix_test_future_times_out::main,0,merged,tests::skip news::,"as_completed() uses a timeout of 100 ms instead of 10 ms. Windows monotonic clock resolution is around 15.6 ms. <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-109565 --> * Issue: gh-109565 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,1,5,2,1,1,afcaa29325c19245c1c85f2b3e733db6c42e811c::
https://api.github.com/repos/python/cpython,109948,doc_pyapi_func_no_link311::3.11,0,merged,docs::skip news::,"Document PyMODINIT_FUNC macro. Remove links to PyAPI_FUNC() and PyAPI_DATA() macros since they are not documented. These macros should only be used to define the Python C API. They should not be used outside Python code base. (cherry picked from commit d7a27e527d7e669d2e45cff80ad725978226477c) <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-107298 --> * Issue: gh-107298 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--109948.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::",Victor Stinner,194129,1148,1,26,2,3,0,587927b11717d307bd3e612fc927aee5ccc0e4e0::
https://api.github.com/repos/python/cpython,109947,backport-d7a27e5-3.12::3.12,0,merged,docs::skip news::,Document PyMODINIT_FUNC macro. Remove links to PyAPI_FUNC() and PyAPI_DATA() macros since they are not documented. These macros should only be used to define the Python C API. They should not be used outside Python code base. (cherry picked from commit d7a27e527d7e669d2e45cff80ad725978226477c) Co-authored-by: Victor Stinner <vstinner@python.org> <!-- gh-issue-number: gh-107298 --> * Issue: gh-107298 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--109947.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::,Miss Islington (bot),31488909,73,1,27,3,3,0,2d07b75bf532175f111f8794780c91ed4d9cf2a7::
https://api.github.com/repos/python/cpython,109943,load-attr-uops::main,0,merged,skip news::,"I started by adding some code that shows the most deserving non-viable opcodes. Also doubling max trace size again. I could do this all day, but the stats show there are diminishing returns. Output from `python3 Tools/cases_generator/generate_cases.py -v` before splitting the top 5: ``` Read 186 instructions, 46 ops, 207 macros, 12 pseudos, and 14 families from Python/bytecodes.c The following ops are not viable uops: 1,906,418,185 LOAD_ATTR_METHOD_WITH_VALUES        (specialization of LOAD_ATTR) 1,408,928,326 LOAD_ATTR_METHOD_NO_DICT            (specialization of LOAD_ATTR) 1,359,753,529 LOAD_ATTR_SLOT                      (specialization of LOAD_ATTR) 1,064,113,118 STORE_ATTR_SLOT                     (specialization of STORE_ATTR) 981,677,187 STORE_ATTR_INSTANCE_VALUE           (specialization of STORE_ATTR) 958,283,266 YIELD_VALUE 777,829,833 CALL                                     (unspecialized) 490,635,610 SEND_GEN                            (specialization of SEND) 436,706,438 JUMP_FORWARD 430,588,960 EXTENDED_ARG 391,017,977 JUMP_BACKWARD_NO_INTERRUPT 351,940,012 LOAD_ATTR_MODULE                    (specialization of LOAD_ATTR) 347,159,058 LOAD_ATTR_WITH_HINT                 (specialization of LOAD_ATTR) 308,391,927 FOR_ITER                                 (unspecialized) 251,204,370 RETURN_GENERATOR 241,313,761 CALL_LIST_APPEND                    (specialization of CALL) 177,791,632 CALL_PY_WITH_DEFAULTS               (specialization of CALL) 175,204,354 CALL_KW 163,262,604 FOR_ITER_GEN                        (specialization of FOR_ITER) 146,454,299 BINARY_SUBSCR_GETITEM               (specialization of BINARY_SUBSCR) 143,423,491 LOAD_ATTR_NONDESCRIPTOR_WITH_VALUES (specialization of LOAD_ATTR) 136,661,968 STORE_FAST_LOAD_FAST 136,511,856 LOAD_ATTR_CLASS                     (specialization of LOAD_ATTR) 112,730,831 SEND                                     (unspecialized) 92,715,546 MAKE_CELL 83,410,408 CALL_FUNCTION_EX 69,188,245 CALL_ALLOC_AND_ENTER_INIT           (specialization of CALL) 56,944,041 LOAD_ATTR_METHOD_LAZY_DICT          (specialization of LOAD_ATTR) 52,280,673 LOAD_ATTR_PROPERTY                  (specialization of LOAD_ATTR) 50,964,787 STORE_ATTR_WITH_HINT                (specialization of STORE_ATTR) 22,352,640 LOAD_ATTR_NONDESCRIPTOR_NO_DICT     (specialization of LOAD_ATTR) 8,497,626 RERAISE 6,000,000 END_ASYNC_FOR 5,253,976 BEFORE_WITH 2,897,006 RAISE_VARARGS 2,005,368 IMPORT_FROM 1,968,468 IMPORT_NAME 8,160 BEFORE_ASYNC_WITH 5,907 RESUME                                   (unspecialized) 1,540 LOAD_SUPER_ATTR                          (unspecialized) 801 CLEANUP_THROW ENTER_EXECUTOR LOAD_ATTR_GETATTRIBUTE_OVERRIDDEN   (specialization of LOAD_ATTR) ``` I took the counts from [here](https://github.com/faster-cpython/benchmarking/tree/main/results/bm-20230923-3.13.0a0-51863b7) (follow the [pystats raw](https://github.com/faster-cpython/benchmarking/blob/main/results/bm-20230923-3.13.0a0-51863b7/bm-20230923-azure-x86_64-python-main-3.13.0a0-51863b7-pystats.json) link). - Curious what's up with `LOAD_ATTR_GETATTRIBUTE_OVERRIDDEN`? It was the same on the weekly run a week before; the week before that (Sept 10) the file format was different. @brandtbucher any intuition on this? <!-- gh-issue-number: gh-104909 --> * Issue: gh-104909 <!-- /gh-issue-number --> ::Thinking aloud a bit here, and this can wait for another PR. Rhetorical question: Why are these not viable micro-ops? Ideally, we would recognize the properties that make them not viable and only report uops that are not viable if we expect to be viable. We want to add properties/decorators to ops/instructions for things like purity. Could we do that for this as well? E.g. `@unreachable` for `CACHE` and `RESERVED`, `@super` for `LOAD_FAST_LOAD_FAST`, etc. `@branch` for `POP_JUMP_IF_TRUE` and `POP_JUMP_IF_FALSE`, and so on... ::It seems a shame that we need ` _GUARD_TYPE_VERSION` and ` _GUARD_TYPE_VERSION_STORE`. We need both because we need the name of the original instruction in `DEOPT_IF`. We could remove the instruction name from `DEOPT_IF` and have the code generator insert it. This would give us a bit flexibility in how we handle these exits as well. For another PR, though.::Yeah, this is a remnant from before the code generator. I've filed https://github.com/python/cpython/issues/109979.::Since @Fidget-Spinner is also interested in  this, I'll wait for him to make a specific proposal. Likely the syntax will be `pure op(X, (...)) { ... }` and so on.::",Guido van Rossum,2894642,21056,10,519,115,8,0,2ca26bb68e4645136168e85d77e38935f30d8f8e::e19517c7f6cbd7d588fb3aea8654bca07ec7f440::8d1a856b6ec7f86a82f1f6515e3aaa72a2e24ad3::3796e89b7159e0bddb175e3554c14c61d63c3ae2::6d816ed491ff8d1234a4d27f4f9005d95c6c3dfb::5ba03d1d8a2daecd5e6d9243e561ac176ccfffc9::5d0fa92929342e25f2ef81b8079b1ec25c8ee96c::b54eee3d757832ae5c5a3093e487600f1019ced4::24b4ec973573f024561f306bc7b883a9181c72dd::85fb1e72177d21e22214793561c1c922cdfa5258::
https://api.github.com/repos/python/cpython,109942,backport-e721f7a-3.11::3.11,0,merged,skip issue::skip news::,(cherry picked from commit e721f7a95186452339dc9e57630d639d549b2521) Co-authored-by: Tom Gillespie <tgbugs@gmail.com>::,Miss Islington (bot),31488909,73,1,2,3,1,0,836f7688f7b039b5c4eec72f003784194dcc7ab9::
https://api.github.com/repos/python/cpython,109941,backport-e721f7a-3.12::3.12,0,merged,skip issue::skip news::,(cherry picked from commit e721f7a95186452339dc9e57630d639d549b2521) Co-authored-by: Tom Gillespie <tgbugs@gmail.com>::,Miss Islington (bot),31488909,73,1,2,3,1,0,b37421a088df2c5015e991a1a829277d63443772::
https://api.github.com/repos/python/cpython,109938,backport-3538930-3.11::3.11,0,merged,skip news::,(cherry picked from commit 3538930d87e6bdd2bfffa3f674a62cc91d359d31) Co-authored-by: Victor Stinner <vstinner@python.org> <!-- gh-issue-number: gh-101100 --> * Issue: gh-101100 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--109938.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::,Miss Islington (bot),31488909,73,1,8,9,2,0,783c8b467b94a1eb05ea575332e6c0c555c3583f::
https://api.github.com/repos/python/cpython,109937,backport-3538930-3.12::3.12,0,merged,skip news::,(cherry picked from commit 3538930d87e6bdd2bfffa3f674a62cc91d359d31) Co-authored-by: Victor Stinner <vstinner@python.org> <!-- gh-issue-number: gh-101100 --> * Issue: gh-101100 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--109937.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::,Miss Islington (bot),31488909,73,2,8,9,2,0,e1de39b9505dfba7fcd89db079f179dd5efd33f4::b791fae705bac56c802d932797d885ea967e2248::
https://api.github.com/repos/python/cpython,109935,freeze_src_dir::main,0,merged,skip news::,"* Use sysconfig to get the source directory. * Use sysconfig.get_config_var() to get CONFIG_ARGS variable. <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-109615 --> * Issue: gh-109615 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,1,59,56,5,1,458a4d4e4d1bc3df4624ed05596b11d913067a0b::
https://api.github.com/repos/python/cpython,109933,backport-a829356-3.11::3.11,0,merged,skip news::,* gh-109098: Fuzz re module instead of internal sre * Fix c-analyzer globals test failure * Put globals exception in ignored.tsv (cherry picked from commit a829356f86d597e4dfe92e236a6d711c8a464f16) Co-authored-by: Ammar Askar <ammar@ammaraskar.com>::,Miss Islington (bot),31488909,73,1,19,23,2,0,7d9a97d739dbe90cc6707ac363d687811df5f9eb::
https://api.github.com/repos/python/cpython,109932,backport-a829356-3.12::3.12,0,merged,skip news::,* gh-109098: Fuzz re module instead of internal sre * Fix c-analyzer globals test failure * Put globals exception in ignored.tsv (cherry picked from commit a829356f86d597e4dfe92e236a6d711c8a464f16) Co-authored-by: Ammar Askar <ammar@ammaraskar.com>::,Miss Islington (bot),31488909,73,1,21,30,2,0,9577d7966fbc4c4821e139f34240d881cc51a82a::
https://api.github.com/repos/python/cpython,109931,fix_doc_configure_warnings::main,0,merged,skip news::,"<!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--109931.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end --> <!-- gh-issue-number: gh-101100 --> * Issue: gh-101100 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,2,8,9,2,0,791d8196c00cfc1324e378f41ce25f55a069f7c4::52c17262415e1acb3b806516c5b1200d8a89edd8::
https://api.github.com/repos/python/cpython,109930,backport-9dbfe2d-3.11::3.11,0,merged,tests::skip news::,(cherry picked from commit 9dbfe2dc8e7bba25e52f9470ae6969821a365297) Co-authored-by: Victor Stinner <vstinner@python.org> <!-- gh-issue-number: gh-107888 --> * Issue: gh-107888 <!-- /gh-issue-number --> ::,Miss Islington (bot),31488909,73,1,9,4,1,0,9b52b93b26cbc89b09edccceaa16644ca758fa7d::
https://api.github.com/repos/python/cpython,109929,backport-9dbfe2d-3.12::3.12,0,merged,tests::skip news::,"(cherry picked from commit 9dbfe2dc8e7bba25e52f9470ae6969821a365297) Co-authored-by: Victor Stinner <vstinner@python.org> <!-- gh-issue-number: gh-107888 --> * Issue: gh-107888 <!-- /gh-issue-number --> ::The test is explicitly *not* setting PROT_WRITE (see line 255), so this comment seems incorrect. It's also catching and ignoring this exception on all posix platforms, not just macOS 14 or even just macOS. Does it really make sense to ignore it that way?::Crap, it's a typo: you should read PROT_READ | PROT_EXEC.::> Does it really make sense to ignore it that way? Python cannot argue with kernel security changes towards blocking more attacks. The trend is to block more and more sensitive code patterns like memory pages which can be used for something other than just executing them. If you can READ + EXEC, ROP gadgets are easier to discover for example. ::I'm not saying the OS shouldn't be doing this. I'm asking if it makes sense to just ignore the error _on all posix platforms_, or rather whether the _test itself_ still makes sense if we're just going to ignore these errors from them. If it's not a good idea for it to work, why are we testing it? What exactly are we hoping to uncover in these tests?::If the test is changed, it should be changed first in the main branch. The change got approved in the main branch. IMO it's ok to skip the test if mmap() fails with PermissionError. The Python test suite should not become a test of the operating system itself, but only of the small glue on top of the OS. If the OS decides that PROT_READ | PROT_EXEC raises a PermissionError, we can just skip the test. Well, that's my opinion :-) I just wanted to fix macOS 14 support.::",Miss Islington (bot),31488909,73,1,9,4,1,0,9820232ffb13fc386c3565669de20e4421cbc312::
https://api.github.com/repos/python/cpython,109928,test_mmap::main,0,merged,tests::skip news::,"<!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-107888 --> * Issue: gh-107888 <!-- /gh-issue-number --> ::perhaps make this a self.skipTest message?::> perhaps make this a self.skipTest message? That's probably a good idea although there are plenty of other places in `test_mmap` that simply do a `pass` for similar types of failures.::test_access_parameter() is a long function: 124 lines, it contains many tests. If someone wants to use skipTest() as some places, the function should be splitted into sub-functions. Otherwise, there is a risk that newly added code below will be skipped by mistake. Today I lost 10 min trying to understand why the flush() call that I added at the end doesn't work as expected... ```py def display_header(use_resources: tuple[str, ...]): ...  # <=== a lot more code obviously # This makes it easier to remember what to set in your local # environment when trying to reproduce a sanitizer failure. asan = support.check_sanitizer(address=True) msan = support.check_sanitizer(memory=True) ubsan = support.check_sanitizer(ub=True) sanitizers = [] if asan: sanitizers.append(""address"") if msan: sanitizers.append(""memory"") if ubsan: sanitizers.append(""undefined behavior"") if not sanitizers: return print(f""== sanitizers: {', '.join(sanitizers)}"") for sanitizer, env_var in ( (asan, ""ASAN_OPTIONS""), (msan, ""MSAN_OPTIONS""), (ubsan, ""UBSAN_OPTIONS""), ): options= os.environ.get(env_var) if sanitizer and options is not None: print(f""== {env_var}={options!r}"") sys.stdout.flush()  # <====== ADDED CODE ====== ```::",Victor Stinner,194129,1148,1,9,4,1,0,7b401f44ed6e7f501076c4452e5a5bd5cd2ac341::
https://api.github.com/repos/python/cpython,109927,docs/whatsnew/deprecations-os::main,0,merged,docs::skip news::,"* Just after #109766 was merged, I noticed that an error had crept in; there are now two entries for ``os``. Probably related to the merge of the new entry for ``os.fork``. Sorry! <!-- gh-issue-number: gh-109190 --> * Issue: gh-109190 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--109927.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::",Adam Turner,9087854,89,1,17,15,1,0,c30af3b765df70cc11b2fc79b7c4e4769249b8b6::
https://api.github.com/repos/python/cpython,109926,regrtest_python_opts::main,0,merged,skip news::,"* On Windows, use subprocess.run() instead of os.execv(). * Only add needed options * Rename reexec parameter to _add_python_opts. * Rename --no-reexec option to --dont-add-python-opts. <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-109566 --> * Issue: gh-109566 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,1,62,38,4,0,3f828829fbd25d232ad244fe2cc6e122e70366a2::
https://api.github.com/repos/python/cpython,109925,backport-87ddfa7-3.12::3.12,0,merged,docs::skip news::,(cherry picked from commit 87ddfa74e2d37f6837351ed2bafc7d6d55fe2fd0) Co-authored-by: Adam Turner <9087854+AA-Turner@users.noreply.github.com> <!-- gh-issue-number: gh-109190 --> * Issue: gh-109190 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--109925.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::,Miss Islington (bot),31488909,73,2,170,107,1,1,fedcbe1cf9eca1741dec4058bddc417f56e8bf0f::a34f19af34da04bd1148ef44655e6520724c866e::
https://api.github.com/repos/python/cpython,109924,RETURN_GENERATOR-linenos::main,0,merged,,Fixes #109923 . <!-- gh-issue-number: gh-109923 --> * Issue: gh-109923 <!-- /gh-issue-number --> ::,Irit Katriel,1055913,162,1,9,12,3,0,6cb83e632dcb8cd1700297491cd7bfc2b8916684::
https://api.github.com/repos/python/cpython,109922,abi::main,0,merged,,"Shared libraries for CPython 3.13 `--disable-gil` builds are now marked with a 't' for threading. For example, `binascii.cpython-313t-darwin.so`. <!-- gh-issue-number: gh-109740 --> * Issue: gh-109740 <!-- /gh-issue-number --> ::```suggestion The experimental ``--disable-gil`` configure flag now includes ""t"" (for ""threaded"") in ```::I don't understand this skip. When sys.abiflags is not available? Nothing says in the doc that it's optional: https://docs.python.org/dev/library/sys.html#sys.abiflags::Can you please give your explanation for the letter ""t"" here? > ""t"" (for ""threaded"").::It's only available on POSIX systems (not Windows).::Oh, I didn't know. Would you mind to add ``   .. availability:: Unix.`` to https://docs.python.org/dev/library/sys.html#sys.abiflags ?::```suggestion #ifdef Py_NOGIL #  define PYD_THREADING_TAG ""t"" #else #  define PYD_THREADING_TAG """" #endif ```::```suggestion # Add ""t"" for ""threaded"" ```::I took the freedom to including this change as part of your PR.::",Sam Gross,655866,1625,8,71,48,6,0,e745f3264b577dc706ab83cb8c50e3e7f5e9da8d::306081ba123778e6deed23a52c83fedd1cd88346::44f0e17ec4dcc90f995b48b71842338cb051b5e4::0dbbbce3ea37b65b54832214b056483654a4e681::964e3790d1d993fc896426ccc6f6677db5a0ceed::39dec482ee5200c9550e62d8d93a22be76fabe7d::597e489586f80f410b609c55d41e6b3b3c495e81::c985f63799d84a80822dcb16fc9f581e650abc0f::
https://api.github.com/repos/python/cpython,109921,subinterpreters-allow-background-threads::main,0,merged,,"The existence of background threads running on a subinterpreter was preventing interpreters from getting properly destroyed, as well as impacting the ability to run the interpreter again.  It also affected how we wait for non-daemon threads to finish. We add `PyInterpreterState.threads.main`, with some internal C-API functions. <!-- gh-issue-number: gh-105716 --> * Issue: gh-105716 <!-- /gh-issue-number --> ::",Eric Snow,1152074,290,23,257,45,11,1,4e88c2b6d1b953b9ee9ea7fc21e1ed192b973df5::d08ac68ded822c4043690523c72ea82afc6fd202::3b07482e17f89078775286058e5c39b22abecb51::70c4753f8574ffdbf8df76869a223effb9df4386::678cb3b03b717ff253c378e67c95d75fc86a626a::5be5a070dc9c1540dbd1fd13cbbaae2c8d364dbe::81a1e0b3de8916455a97a0e39ae09c2893af463f::c3f497b672c8777bb1f0ac7a8a4553cab18cb3e7::effa5b42507de4ba541423b8d440e61392185863::41c54b0958244a7d6fb31472b31d430594945201::5fbd940737510ea9b2e2e61cd7b7ad6bcf67c481::8b54c2ee83eedc4dad81fae8b11544973414e7fd::5d1df6150abd364afad2955dca6e7a1215300e43::1034a67096dcf3a9362df35c82ca7c9b24344f0d::d57729ed5218d32591fee3797aab2827619c8854::4219e2c396eb6f382b7cfa7dbffabe60a2b5db98::bfdace2a567a472f27dd33ea6fa21b2d3c34c847::ef8af920862bf32b8def593ee8dedd186649f6c6::566cd08ce0cd1cdd37aa7aeeb2aa140af9aa8ed5::d14b87a3c31a6e6bb7c16c99a7b83a4904f3611c::1f2a321a16f55ad4f7d38e0efb3c5d0d5b040830::55d7090233f249f4f4ec2291deae9a27bbbe8da4::399859f5906ac4af410984c8d090850a0dd13644::
https://api.github.com/repos/python/cpython,109920,backport-2ef2fff-3.11::3.11,0,merged,tests::skip news::,recv() can return partial data cut in the middle of a multibyte character. Test raw binary data instead of data incorrectly decoded by parts. (cherry picked from commit 2ef2fffe3be953b91852585c75188d5475b09474) Co-authored-by: Serhiy Storchaka <storchaka@gmail.com> <!-- gh-issue-number: gh-109845 --> * Issue: gh-109845 <!-- /gh-issue-number --> ::,Miss Islington (bot),31488909,73,1,18,20,1,0,c3285412ed96360d1ea47ce1025edaa1ef83db92::
https://api.github.com/repos/python/cpython,109919,backport-2ef2fff-3.12::3.12,0,merged,tests::skip news::,recv() can return partial data cut in the middle of a multibyte character. Test raw binary data instead of data incorrectly decoded by parts. (cherry picked from commit 2ef2fffe3be953b91852585c75188d5475b09474) Co-authored-by: Serhiy Storchaka <storchaka@gmail.com> <!-- gh-issue-number: gh-109845 --> * Issue: gh-109845 <!-- /gh-issue-number --> ::,Miss Islington (bot),31488909,73,1,18,20,1,0,a3de33d49b9f97c50cafd4f3d6cee3f69584b458::
https://api.github.com/repos/python/cpython,109915,thread_state::main,0,merged,skip news::,"This adds a new field 'state' to PyThreadState that can take on one of three values: `_Py_THREAD_ATTACHED`, `_Py_THREAD_DETACHED`, or `_Py_THREAD_GC`. The ""attached"" and ""detached"" states correspond closely to closely to acquiring and releasing the GIL. The ""gc"" state is current unused, but will be used to implement stop-the-world GC for `--disable-gil` builds in the near future. <!-- gh-issue-number: gh-109549 --> * Issue: gh-109549 <!-- /gh-issue-number --> ::I removed the `PyErr_PrintEx(0)` call, which never printed anything (failures are reported via PyStatus) and was also unsafe to call in some cases when the current thread did not hold the GIL.::This change implies that we never call `_PyEval_InitGIL()` with the GIL held.  That seems reasonable.  Do you know why we might have been accommodating the other case?::Splitting up `_swap_thread_states()` like this seems valid.::This comment is a reminder (to me) that our runtime lifecycle is still not quite correct.  It would be helpful to keep this.::likewise::I've added the comments to _PyThreadState_Attach/Detach since `_swap_thread_states` is gone. ::I'm not sure why we were accommodating the other case. It's possible we will want it in the future.::",Sam Gross,655866,1625,3,141,92,6,0,5e6813f5c06c717e9bbb24fa972cceeb4037513b::f023ae317f1b5a782813ab75e89836940165fe13::cafce83d21497bd8c0ce04c43ae28adbe75b3804::
https://api.github.com/repos/python/cpython,109913,tier2-stats::main,0,merged,skip news::,"This just implements a set of tier 2 pystats mentioned in #109329. This implements: - Total micro-ops executed - Total number of traces started - Total number of traces created - Optimization attempts - Per uop execution counts, like we have for tier 1 instructions. - A histogram of uops executed per trace - Trace too long - Unsupported opcode (maybe even with counters for each offender) - Inner loop found - Too many frame pushes (currently capped at a depth of 5) - Too many frame pops (if we return from the original frame) - Recursive function call It also fixes a ""bug"" where specialization ""hits"" in the running Tier 2 interpreter would count against the Tier 1 stats. Not implemented (since it will require reworking of DEOPT_IF calls): - Exit reason counts: polymorphism vs branch mis-prediction Example output (for nbody benchmark): ## Optimization (Tier 2) stats <details> <summary> statistics about the Tier 2 optimizer </summary> ### Overall stats <details> <summary> overall stats </summary> | | Count | Ratio | |---|---:|---:| | Optimization attempts | 5 |  | | Traces created | 5 | 100.0% | | Traces executed | 1,600,070 |  | | Uops executed | 65,202,621 | 40 | | Trace stack overflow | 0 |  | | Trace stack underflow | 0 |  | | Trace too long | 5 |  | | Inner loop found | 0 |  | | Recursive call | 0 |  | </details> **Trace length histogram** |Range | Count | Ratio | |---|---:|---:| | <= 4 | 0 | 0.0% | | <= 8 | 0 | 0.0% | | <= 16 | 0 | 0.0% | | <= 32 | 0 | 0.0% | | <= 64 | 5 | 100.0% | **Optimized trace length histogram** |Range | Count | Ratio | |---|---:|---:| | <= 4 | 0 | 0.0% | | <= 8 | 0 | 0.0% | | <= 16 | 0 | 0.0% | | <= 32 | 0 | 0.0% | | <= 64 | 5 | 100.0% | **Trace run length histogram** |Range | Count | Ratio | |---|---:|---:| | <= 4 | 0 | 0.0% | | <= 8 | 0 | 0.0% | | <= 16 | 0 | 0.0% | | <= 32 | 0 | 0.0% | | <= 64 | 1,600,070 | 100.0% | ### Uop stats <details> <summary> uop stats </summary> |Uop | Count | Self | Cumulative | |---|---:|---:|---:| | STORE_FAST | 14,900,598 | 22.9% | 22.9% | | _SET_IP | 14,100,583 | 21.6% | 44.5% | | LOAD_FAST | 10,100,513 | 15.5% | 60.0% | | _GUARD_BOTH_FLOAT | 3,700,274 | 5.7% | 65.6% | | _BINARY_OP_SUBTRACT_FLOAT | 2,900,138 | 4.4% | 70.1% | | UNPACK_SEQUENCE_TUPLE | 2,400,092 | 3.7% | 73.8% | | UNPACK_SEQUENCE_LIST | 2,400,092 | 3.7% | 77.5% | | _POP_JUMP_IF_TRUE | 1,700,049 | 2.6% | 80.1% | | _EXIT_TRACE | 1,600,070 | 2.5% | 82.5% | | _ITER_CHECK_LIST | 1,600,065 | 2.5% | 85.0% | | _IS_ITER_EXHAUSTED_LIST | 1,600,065 | 2.5% | 87.4% | | COPY | 1,599,948 | 2.5% | 89.9% | | _ITER_NEXT_LIST | 1,400,053 | 2.1% | 92.0% | | UNPACK_SEQUENCE_TWO_TUPLE | 1,000,039 | 1.5% | 93.6% | | LOAD_CONST | 800,001 | 1.2% | 94.8% | | SWAP | 799,974 | 1.2% | 96.0% | | BINARY_SUBSCR_LIST_INT | 799,974 | 1.2% | 97.2% | | _BINARY_OP_MULTIPLY_FLOAT | 400,095 | 0.6% | 97.9% | | _BINARY_OP_ADD_FLOAT | 400,041 | 0.6% | 98.5% | | STORE_SUBSCR_LIST_INT | 399,987 | 0.6% | 99.1% | | POP_TOP | 200,017 | 0.3% | 99.4% | | _ITER_CHECK_RANGE | 99,984 | 0.2% | 99.5% | | _IS_ITER_EXHAUSTED_RANGE | 99,984 | 0.2% | 99.7% | | _ITER_NEXT_RANGE | 99,979 | 0.2% | 99.8% | | GET_ITER | 99,979 | 0.2% | 100.0% | | BINARY_OP | 27 | 0.0% | 100.0% | </details> ### Unsupported opcodes <details> <summary> unsupported opcodes </summary> |Opcode | Count | |---|---| </details> <!-- gh-issue-number: gh-109329 --> * Issue: gh-109329 <!-- /gh-issue-number --> ::Why `((length - 1) >> 2)`?::We'll probably want more buckets than this (since execution lengths for closed loops will get pretty big), but it's probably fine for now. We can just bump it whenever. ::Why `i + 2`? Is it to correct for the `>> 2` when recording the stats? Oh, I think I see. We're starting with the ""third"" bucket, since tiny traces are basically nonexistent. Maybe add another constant next to `_Py_UOP_HIST_SIZE` (like `#define _Py_UOP_HIST_BIAS 2` or something) so it's clearer why we're doing this and where.::Is this correct? The old value was `7`, but `len(""opcode"") + 2` is `8`.::Dictionary keys support set operations: ```suggestion opcodes = base_data.keys() | head_data.keys() ```::```suggestion base_data = {x[0]: x[1:] for x in base_rows} head_data = {x[0]: x[1:] for x in head_rows} ```::Maybe give these a deterministic (and somewhat meaningful) order? ```suggestion for opcode in sorted(opcodes): ```::```suggestion f""{change:0.1%}"")) ```::```suggestion rows.sort(key=lambda x: abs(percentage_to_float(x[-1])), reverse=True) ```::If I understand correctly, there is a minimum trace size of 2, so the first two power-of-two buckets (for 0 and 1) would always be empty, so might as well just not support them (that's the `>> 2`).  Then I also think it's easier to reason about buckets that have an inclusive maximum of a round number (that's the `- 1`).::I thought the max trace length was 64 (`_Py_UOP_MAX_TRACE_LENGTH`).  Can they be longer?  (It's quite possible I don't understand the code).  In any event, I should probably add a comment here that this should be log2 of whatever the expected maximum length is.::Yes, that's right. Adding the `#define` for bias makes sense.::Good catch.  It seems to not matter, but might as well revert it just in case.::TIL!::We could, be we end up sorting by the counts a few lines below anyway...::> Can they be longer? (It's quite possible I don't understand the code). Not statically, but dynamically they can be quite long (imagine executing a trace for a closed loop hundreds of times). So we should probably modify the code that adds to the histogram to be `Py_MAX(_Py_UOP_HIST_SIZE - 1, _Py_bit_length((length - 1) >> _Py_UOP_HIST_BIAS))`, so that anything overflowing the histogram ends up in the largest bucket instead of writing past the end of the array.::Yeah, that's a good idea to add the range-checking. Also, this made me realize I was counting the wrong thing -- I was recording the ""instruction pointer at exit"" to be the execution length.  But (after discussing in person) it seems what we want is the number of uops executed per execution of the trace.  I've updated this to report that instead.::",Michael Droettboom,38294,409,17,483,128,9,1,7ba5f5527dc431e04f24cf80ddbf6979fac8f16b::b84f496e3b2b8616eb696f51cfc78e54412ea5d5::5549410ca6d233e2d88c6fcaa6e66e30c5a94bf3::ed639fc4534ce8b592809043ecaa6b43f1a44bd0::195664e5a76ce820b7402437c5829191bfbd5252::8d76c0ac7d7c8a2e0c8dd6f130c60a15691c2a55::c54707a611401c83839d490b73a6a304d19f31c8::ba58546a9430898aba1045228deef1bc9973d186::08cd8c04ab4a83db88fced754a39f8ab269bf7d6::8d2699d26c7d2f750ed4a15161fea2531a10a081::ad0ca42c3b063066ea8ac3049f5672de59b78b59::e5ee4e5c2a6667e498ca9890b9cbab00c968f139::0dac9e56e0c3f11c54d0573c5c294684154f0495::69a6e7bdd5d7b00074a3726aa963de517fb72545::d7c1403e860792bd2940285fb5eb2079255c5461::aa69c0f8017e2fe6c942bd764ff7bcaaa2b97c06::5c3599a548b9be1d190458ff6d17f7198eb445aa::
https://api.github.com/repos/python/cpython,109912,test_ftplib::main,0,merged,tests::skip news::,recv() can return partial data cut in the middle of a multibyte character. Test raw binary data instead of data incorrectly decoded by parts. <!-- gh-issue-number: gh-109845 --> * Issue: gh-109845 <!-- /gh-issue-number --> ::It makes the bug easier reproducible.::,Serhiy Storchaka,3659035,401,1,18,20,1,0,60f0d84b1636bfdce9a60d4d88d424e27c81d6c0::
https://api.github.com/repos/python/cpython,109911,re_fuzzer_fix::main,0,merged,skip news::,"This should get the deprecation warning out and switch the fuzzer to using the public API <!-- gh-issue-number: gh-109098 --> * Issue: gh-109098 <!-- /gh-issue-number --> ::What, there is a third ignored list? I think it is better to add it in `Tools/c-analyzer/cpython/ignored.tsv` (where old names are already added).::Oh thanks, I missed that they're already in `ignored.tsv`. Renamed the old names there.::",Ammar Askar,773529,234,3,21,30,2,0,1e562d747a57615f18f7a72491e9fe6a481afac9::0970b63469c2e1425048d6266c2221c81add1c23::d57f3f3deb2f46693b3efcea7fc17dc91cc8442a::
https://api.github.com/repos/python/cpython,109910,kristjan/task-comments::main,0,merged,skip news::,"The in-line comments for the state transition of asyncio.Task objects has been out of date for quite some time. - `_fut_waiter` persist in a _done_ state on the Task between becoming _done_ and until `__step()` is executed. - There is an intermediate state **2a** where `__wakeup()` is _scheduled_, followed by **2b** when `__step()` is scheduled. - An unmentioned state exists for the Task, namely the _running_ state. - `_step()` and `_wakeup()` have been `__step()` and `__wakeup()` for quite some time. This PR attempts to rectify the situation. <!-- gh-issue-number: gh-109955 --> * Issue: gh-109955 <!-- /gh-issue-number --> ::I can't speak to the content, but a formatting suggesion for readability: ```suggestion # - 1:  _fut_waiter is not None and not _fut_waiter.done()): #       __step() is *not* scheduled and the Task is waiting for _fut_waiter. # - 2a: _fut_waiter is None or _fut_waiter.done()) and __wakeup() is scheduled: #       the Task is waiting for __wakeup() to be executed. # - 2b: _fut_waiter is None or _fut_waiter.done()) and __step() is scheduled #       the Task is waiting for __step() to be executed. # - 3:  _fut_waiter is None and __step() is *not* scheduled: #       the Task is currently executing (in __step()). ```::Much appreciated :)::Yeah, please apply this. I had the same confusion.::This confuses me. Once `__wakeup()` executes, it proceeds without waiting to call `__step()` -- there's no scheduling involved that I can see in the source code (unless the .c extension is different). The call to `future.result()` immediately produces a value or raises -- it doesn't block (there's no `await` there). I do think it is possible to enter step 2b without going through 2a when `__step()` is scheduled directly by `__init__()`. So maybe it's clearer to say that we go through either 2a or 2b?::I may have got my wires crossed here, because it is all confusing. Initially, I thought __wakeup() was called directly (futures just calling registered callbacks) and _wakeup scheduling __step,..  But then it turns out that futures _schedule_ their callbacks... I'll have another look. ::Yes, you were right.  So, there is no 2a or2b anymore just 2. The main point I'm trying to get across here is that there _can_ be a `_fut_waiter` present in a `done` state, i.e. the mere presence of a `_fut_waiter` does not indicate that the Task is still blocked.   I hope I'm not making this sound more complicated than it is.::> the mere presence of a `_fut_waiter` does not indicate that the Task is still blocked Yes, that's crucial information.::",Kristján Valur Jónsson,6009543,15,4,17,7,1,0,3b9b4cfc110fe6a3727d8d7d9c148218df2ce300::3cc8ca9f4be1b7039aaa4919240ce816408e7c3b::e3f07bbf3f720a9921f1082ae03339f89b420e37::729a291813442bcd86d168b22ea5c7c7dfd90b15::
https://api.github.com/repos/python/cpython,109909,regrtest_reeexc::main,0,merged,,"When --fast-ci or --slow-ci option is used, regrtest now replaces the current process with a new process to add ""-u -W default -bb -E"" options to Python. The following methods to run the Python test suite don't replace the process: * ""import test.autotest"" * ""from test.regrtest import main; main()"" Changes: * PCbuild/rt.bat and Tools/scripts/run_tests.py no longer need to add ""-u -W default -bb -E"" options to Python: it's now done by regrtest. * Fix Tools/scripts/run_tests.py: flush stdout before replacing the process. Previously, buffered messages were lost. <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-109566 --> * Issue: gh-109566 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,1,107,14,7,0,f1bb3addb847f0f9d7d55b2af9a4edbb539031bb::
https://api.github.com/repos/python/cpython,109907,process_cpu_count::main,0,merged,,"* Fix test_posix.test_sched_getaffinity(): restore the old CPU mask when the test completes! * Doc: Specify that os.cpu_count() counts *logicial* CPUs. <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-109649 --> * Issue: gh-109649 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--109907.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::Is there any reason to implement this in C?  Can't this be implemented in Python just using `return min(os.cpu_count(), len(os.sched_getaffinity(0)))` with additional None or empty set edge case handling added? Sure that temporary set may not be efficient, but this isn't a function that should need efficiency for its use cases.::Hum. I started to write a rationale to justify that, but I instead, I reimplemented the function in pure Python: it's simpler :-) --- My first version also had an implementation for Windows which requires C code. But we can reconsider C vs Python implementation when we will consider adding a Windows implementation.::Windows requiring C bits suggests we should just add `sched_getaffinity` for Windows (as it's own feature request and PR).  https://learn.microsoft.com/en-us/windows/win32/api/winbase/nf-winbase-getprocessaffinitymask (which I think you had used) supports up to 64, and the hierarchical complexity added by https://learn.microsoft.com/en-us/windows/win32/procthread/processor-groups appears to add support for a whole lot more.::Could this ever return an empty set for any reason?  it might be safer to do something like ```python cpu_set = sched_getaffinity(0) num_cpus = cpu_count() return min(len(cpu_set), num_cpus) if cpu_set else num_cpus ``` Then again, I'm probably overthinking things.  The system API should never return an empty set.::_(mostly wondering if an empty set signifies ""all"" on some systems)_::On Linux, you cannot assign 0 CPUs to a process: ``` $ python >>> import os >>> os.sched_setaffinity(0, []) OSError: [Errno 22] Invalid argument ``` man sched_getaffinity: ``` ERRORS EINVAL The affinity bit mask mask contains no proces- sors that are currently physically on the sys- tem  and  permitted to the thread according to any restrictions that may be imposed by cpuset cgroups or the ""cpuset"" mechanism described in cpuset(7). EINVAL (sched_getaffinity() and, before Linux  2.6.9, sched_setaffinity())   cpusetsize  is  smaller than the size of the affinity mask used by the kernel. ``` From what I understand, sched_setaffinity() cannot set an empty list of CPU. Also os.sched_getaffinity() **cannot fail**. sched_getaffinity() returns EINVAL if the mask is too small, Python uses a loop of make this list larger until it's big enough.::After the discussion with @vstinner, I concur his comment.::It is probably more accurate to say ""usable by the calling thread of the current process"". I believe each thread can have its own affinity. _(For parallelism planning purposes, the main thread prior to spawning others is likely what people would be calling this from anyways)_::Sadly, you're right. I updated the doc.::""is restricted to""::Oops! Fixed.::",Victor Stinner,194129,1148,2,125,47,8,0,74ed3db3af056325c713b7f86b8b5bdc6370a308::9018c69d69df02150ced7a2cb157b49121b4d6ab::
https://api.github.com/repos/python/cpython,109906,cf_dead_code::main,0,merged,skip issue::skip news::,"process_result_item() cannot be called with an int anymore, the protocol changed. <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> ::",Victor Stinner,194129,1148,1,8,18,1,0,9194686e9ac3257206c278beb74c4008c15dfcd5::
https://api.github.com/repos/python/cpython,109905,backport-19bf398-3.12::3.12,0,merged,skip issue::skip news::,(cherry picked from commit 19bf3986958fc8269a1eb6d741bb60c91d6b5e58) Co-authored-by: Raymond Hettinger <rhettinger@users.noreply.github.com>::,Miss Islington (bot),31488909,73,1,34,5,1,1,f1864e9af1dc45cff6844b7a8280633f48330ae9::
https://api.github.com/repos/python/cpython,109904,backport-8100612-3.12::3.12,0,merged,docs::skip issue::skip news::,(cherry picked from commit 8100612bac2df1cbbb3a4cf646c4b82febf7807f) Co-authored-by: lohaswinner <lohaswinner@gmail.com> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--109904.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::,Miss Islington (bot),31488909,73,1,1,1,1,1,8777dec48c9256f36180ed47c08479d0b440e45c::
https://api.github.com/repos/python/cpython,109903,regrtest_stdout::main,0,merged,skip news::,"Remove replace_stdout(): call sys.stdout.reconfigure() instead of set the error handler to backslashreplace. display_header() logs an empty line and flush stdout. Remove encoding workaround in display_header() since stdout error handler is now set to backslashreplace earlier. <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-109276 --> * Issue: gh-109276 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,1,27,54,4,0,b5c891bdb4de4acd5d272bb34a478d9d1b56c8a6::
https://api.github.com/repos/python/cpython,109902,main::main,0,merged,docs::skip issue::skip news::,"Fix a typo in the parameter name of random.expovariate. <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--109902.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::",,8856508,1,1,1,1,1,0,03a1ce0aa9be2ab4419380975f9c899fc0b93a3b::
https://api.github.com/repos/python/cpython,109901,backport-82ab13c-3.11::3.11,0,merged,skip news::,"* gh-102304: doc: Add links to Stable ABI and Limited C API (#105345) * Add ""limited-c-api"" and ""stable-api"" references. * Rename ""stable-abi-list"" reference to ""limited-api-list"". * Makefile: Document files regenerated by ""make regen-limited-abi"" * Remove first empty line in generated files: - Lib/test/test_stable_abi_ctypes.py - PC/python3dll.c (cherry picked from commit bae415ad02c79cf3a2eec4aa6969221a12e6716f) * gh-102304: Fix up Simple ABI doc (GH-105351) (cherry picked from commit 0202aa002e06acef9aa55ace0d939103df19cadd) (cherry picked from commit 82ab13c49a77b0d73e6cd5c7ecfe0de1b1036819) ----- These targets were added for 3.13 and 3.12, but they're needed for the devguide: https://github.com/python/devguide/pull/1167 A <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--109901.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::This looks weird; there's already such an anchor in line 171.::Ah, a _similar_ anchor in 171; not equal.::So, what is the `_limited-api-list` anchor used for then?::There are 4 cross-references (one in ``stable.rst`` (L40), one in 3.11 whatsnew, and two in the 3.11 changelog) -- search for ``[`<]limited-api-list[`>]``. A::> Ah, a *similar* anchor in 171; not equal. Oh, I think I understand. L171 is a custom directive also named ``limited-api-list``, to enumerate the limited API -- see [the rendered page](https://docs.python.org/dev/c-api/stable.html#contents-of-limited-api) for an example. So both are valid.::Ok, thanks!::",Adam Turner,9087854,89,2,42,29,10,0,e4154d4b393476cc1fed6dccb5c317167b2954ec::9cfefca1baabf95621667e0bfa6987c1211118ee::
https://api.github.com/repos/python/cpython,109900,docs/argparse-devguide::main,0,merged,docs::,"<!-- gh-issue-number: gh-107518 --> * Issue: gh-107518 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--109900.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::Is it possible to install a devguide redirect for this URL?::We haven't done so for other redirections (e.g. installing --> PPUG), though we could look into it. For the PEPs, it required setting up a custom Terraform configuration for the server, so we'd need to ask someone who understood how the infrastructure is linked up here. A::Ok. I'm not sure it matters much for this particular migration, though.::",Adam Turner,9087854,89,4,18,2068,7,1,8cd778145b47ae018db6351dbfae35454bfa5fa3::b2b692a85c0be21c1d2345d61c07401f2b87c611::a46cde5932bb704f23bf71a07ec32d368be05a8a::b0da0784753d5f557b213f46017d25562c651f95::
https://api.github.com/repos/python/cpython,109899,gh-109889-3.12.0::3.12,0,merged,skip news::,"There is an optimization in the compiler where it removes redundant NOPs, and this assertion checks that it doesn't miss any. Through fuzzing, it was found that in the case where there is a basic block with just a single instruction which is a redundant NOP, the NOP is not being removed (see #109889). This close to the 3.12.0 release, I am proposing to comment out the assertion. There is no correctness issue here (just an extra NOP in some unlikely code). I will work on a proper fix for the optimization for 3.13 and 3.12.1. <!-- gh-issue-number: gh-109889 --> * Issue: gh-109889 <!-- /gh-issue-number --> ::",Irit Katriel,1055913,162,2,7,1,1,1,2234e0ac960c89eeb2e22bd0ef2a7c38d7ecd723::5ff173adbfcfafba6c877f7a8efbef1588b7122d::
https://api.github.com/repos/python/cpython,109898,backport-0eb9883-3.12::3.12,0,merged,,--------- (cherry picked from commit 0eb98837b60bc58e57ad3e2b35c6b0e9ab634678) Co-authored-by: Antoine Pitrou <antoine@python.org> Co-authored-by: blurb-it[bot] <43283697+blurb-it[bot]@users.noreply.github.com> <!-- gh-issue-number: gh-109593 --> * Issue: gh-109593 <!-- /gh-issue-number --> ::,Miss Islington (bot),31488909,73,1,95,2,7,0,3b0cf77e1f5aa5314604a40514e2ba73502c3101::
https://api.github.com/repos/python/cpython,109897,backport-0eb9883-3.11::3.11,0,merged,,--------- (cherry picked from commit 0eb98837b60bc58e57ad3e2b35c6b0e9ab634678) Co-authored-by: Antoine Pitrou <antoine@python.org> Co-authored-by: blurb-it[bot] <43283697+blurb-it[bot]@users.noreply.github.com> <!-- gh-issue-number: gh-109593 --> * Issue: gh-109593 <!-- /gh-issue-number --> ::,Miss Islington (bot),31488909,73,1,95,2,7,0,60272a7d39b079dd1452558c945663cb9c3a7d06::
https://api.github.com/repos/python/cpython,109893,backport-2897142-3.11::3.11,0,merged,tests::skip news::,test_error_at_task_unpickle() and test_error_during_result_unpickle_in_result_handler() now restore sys.stderr which is overriden by _raise_error_ignore_stderr(). (cherry picked from commit 2897142d2ec0930a8991af964c798b68fb6dcadd) Co-authored-by: Victor Stinner <vstinner@python.org> <!-- gh-issue-number: gh-109832 --> * Issue: gh-109832 <!-- /gh-issue-number --> ::,Miss Islington (bot),31488909,73,1,6,0,1,0,1e17c2d3c4fb633aae1e916c1847637a8e71cf5c::
https://api.github.com/repos/python/cpython,109892,backport-2897142-3.12::3.12,0,merged,tests::skip news::,test_error_at_task_unpickle() and test_error_during_result_unpickle_in_result_handler() now restore sys.stderr which is overriden by _raise_error_ignore_stderr(). (cherry picked from commit 2897142d2ec0930a8991af964c798b68fb6dcadd) Co-authored-by: Victor Stinner <vstinner@python.org> <!-- gh-issue-number: gh-109832 --> * Issue: gh-109832 <!-- /gh-issue-number --> ::,Miss Islington (bot),31488909,73,1,6,0,1,0,81488686ce5dedeccf60c0e0f290a548619ffa03::
https://api.github.com/repos/python/cpython,109891,patchcheck/python-file-whitespace::main,0,merged,skip news::,<!-- gh-issue-number: gh-109408 --> * Issue: gh-109408 <!-- /gh-issue-number --> ::,Adam Turner,9087854,89,5,16,25,2,1,606aa7318f5634f93a141ef96b9402aecd16c9e5::d7160fdee37da22e279efcde636412e0d236331c::4adbd0d12b1af61cef7e0ea388c2f0ebb4cf8197::7b99698b0882b75ec7c94bf7dd2533306a9f6b48::977483351c8e58e15d320855a01a648ca572d7f7::
https://api.github.com/repos/python/cpython,109890,patchcheck/c-file-whitespace::main,0,merged,skip news::,"<!-- gh-issue-number: gh-109408 --> * Issue: gh-109408 <!-- /gh-issue-number --> ::`process()` now has return values, which go to `main()`, but `main()` always returns `None` so we never get any errors here.::We were running on `.c` and `.h` files before: ```python c_files = [fn for fn in file_paths if fn.endswith(('.c', '.h'))] ``` Both of those are matched by the `c` type, so this would be closer to parity: ```suggestion types_or: [c] ``` We do have half a dozen `.cpp` files in the codebase, do we want to expand to include them? Should we also add `c++` for `trailing-whitespace` above? ::The `Modules/zlib/` files were removed in https://github.com/python/cpython/pull/3375: ```suggestion exclude: '^Modules/(_decimal/libmpdec|expat)/.*$' ``` (I guess `os.path.join('Modules', 'zlib'),` wasn't found when grepping for `Modules/zlib`.)::It's so much clearer like this! 👍 ::The test passed with 'c++' included, I imagined that it was a previous oversight that they weren't included. I'll check if the trailing whitespace check also passes.::``Tools/msi/bundle/bootstrap/PythonBootstrapperApplication.cpp`` fails with 16 lines changed. Other than that all good (@zooba would you be alright with us enabling the trailing whitespace check here? No real views either way, if you'd prefer to keep the whitespace then that's the status quo anyway!) A::Oh, I didn't realise! ``pre-commit`` was failing in my local testing when I introduced tabs, perhaps it just fails when a file is changed after the hook has run.::```suggestion # Don't check the style of vendored libraries ```::(We can always remove `c++` later if needed.)::",Adam Turner,9087854,89,11,23,90,3,1,f7d8e99cd658f81731fdd349caf6fe98e85123cb::25688d9e43f77034bce6346b58578dcea515018a::6e9040c728e98853f7f79d6676e621d22d3e8f3e::0e20e9f090ff48dd643d33a14058a69b476fac0f::b44f4c2774f1d40806c41b777935cf6b5b264cf3::d4d31ff9ba73e943724bb3e78989630c7fff9a0e::b70cece166d2f05c343d11d5a0d3981e4c7abaf6::986f2a3c7beab9884a40ff0ed5d9e0d45b471870::b15ef27d019295abb3fd560730d993bb3669efa2::556978b8de51aa9a81afcab09a0717f482260ff8::6891bdb68638350a83c257b49098ce2cc2a67019::
https://api.github.com/repos/python/cpython,109887,cf_restore_stderr::main,0,merged,tests::skip news::,"test_error_at_task_unpickle() and test_error_during_result_unpickle_in_result_handler() now restore sys.stderr which is overriden by _raise_error_ignore_stderr(). <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-109832 --> * Issue: gh-109832 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,1,6,0,1,0,236ac3df6d02dc77efc0b59cf10ecf3dd481e05c::
https://api.github.com/repos/python/cpython,109886,backport-8ac2085-3.12::3.12,0,merged,type-bug::,Counting for signal checking now continues in new match from the point where it ended in the previous match instead of starting from 0. (cherry picked from commit 8ac2085b80eca4d9b2a1093d0a7da020fd12e11a) Co-authored-by: Serhiy Storchaka <storchaka@gmail.com> <!-- gh-issue-number: gh-109631 --> * Issue: gh-109631 <!-- /gh-issue-number --> ::,Miss Islington (bot),31488909,73,1,8,2,3,0,1f422cc56e07120686660f1c54af8465a72ab93d::
https://api.github.com/repos/python/cpython,109885,backport-8ac2085-3.11::3.11,0,merged,type-bug::,Counting for signal checking now continues in new match from the point where it ended in the previous match instead of starting from 0. (cherry picked from commit 8ac2085b80eca4d9b2a1093d0a7da020fd12e11a) Co-authored-by: Serhiy Storchaka <storchaka@gmail.com> <!-- gh-issue-number: gh-109631 --> * Issue: gh-109631 <!-- /gh-issue-number --> ::,Miss Islington (bot),31488909,73,1,8,2,3,0,b5538c6de14458cfd5c75f0894038ee35b9c3993::
https://api.github.com/repos/python/cpython,109884,backport-7c61a36-3.12::3.12,0,merged,skip news::,"(cherry picked from commit 7c61a361fc2e93375e22849fffbc20b60e94dbde) <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-101100 --> * Issue: gh-101100 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--109884.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::",Hugo van Kemenade,1324225,628,1,9,11,2,1,358adc0ebd2357ca34e9e7fb7136ca40e4b6118a::
https://api.github.com/repos/python/cpython,109883,backport-7c61a36-3.11::3.11,0,merged,skip news::,(cherry picked from commit 7c61a361fc2e93375e22849fffbc20b60e94dbde) Co-authored-by: Nikita Sobolev <mail@sobolevn.me> <!-- gh-issue-number: gh-101100 --> * Issue: gh-101100 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--109883.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::,Miss Islington (bot),31488909,73,1,9,11,2,0,65f9fd3aff077dcd08b6eb4d94e13ec74f37aadf::
https://api.github.com/repos/python/cpython,109882,backport-0b4e090-3.11::3.11,0,merged,type-bug::skip news::,Follow-up of gh-107219. * Only close the connection writer on Windows. * Also use existing constant _winapi.ERROR_OPERATION_ABORTED instead of WSA_OPERATION_ABORTED. (cherry picked from commit 0b4e090422db5f959184353d53552d1675f74212) Co-authored-by: Serhiy Storchaka <storchaka@gmail.com> <!-- gh-issue-number: gh-109370 --> * Issue: gh-109370 <!-- /gh-issue-number --> ::,Miss Islington (bot),31488909,73,1,3,3,2,0,4e08e35a0bc2f342009dfd0c06ff8c37d171c690::
https://api.github.com/repos/python/cpython,109881,issue-101100-lib-weakref::main,0,merged,docs::skip news::,It used to be: ``` /Users/sobolev/Desktop/cpython/Doc/library/weakref.rst:112: WARNING: py:meth reference target not found: __del__ /Users/sobolev/Desktop/cpython/Doc/library/weakref.rst:223: WARNING: py:meth reference target not found: keyrefs /Users/sobolev/Desktop/cpython/Doc/library/weakref.rst:281: WARNING: py:meth reference target not found: __del__ /Users/sobolev/Desktop/cpython/Doc/library/weakref.rst:526: WARNING: py:meth reference target not found: __del__ /Users/sobolev/Desktop/cpython/Doc/library/weakref.rst:534: WARNING: py:meth reference target not found: remove /Users/sobolev/Desktop/cpython/Doc/library/weakref.rst:537: WARNING: py:meth reference target not found: __del__ /Users/sobolev/Desktop/cpython/Doc/library/weakref.rst:556: WARNING: py:meth reference target not found: __del__ /Users/sobolev/Desktop/cpython/Doc/library/weakref.rst:561: WARNING: py:meth reference target not found: __del__ ``` <!-- gh-issue-number: gh-101100 --> * Issue: gh-101100 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--109881.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::,Nikita Sobolev,4660275,4663,1,9,11,2,1,a6317d40009228e53f7de493aeb4683bd3aa5bce::
https://api.github.com/repos/python/cpython,109880,backport-86e7c61-3.12::3.12,0,merged,docs::skip news::,(cherry picked from commit 86e7c611ac5bf067a697afbee6f9162704fd22db) <!-- gh-issue-number: gh-109190 --> * Issue: gh-109190 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--109880.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::,Adam Turner,9087854,89,1,47,47,1,1,a6e585b87adc1690441b15473ad2631150f55ba7::
https://api.github.com/repos/python/cpython,109877,backport-e5186c3-3.11::3.11,0,merged,skip news::,Increase timeouts. Barrier default timeout should be long enough to spawn 4 threads on a slow CI. (cherry picked from commit e5186c3de4194de3ea8c80edb182d786f5e20944) Co-authored-by: Victor Stinner <vstinner@python.org> <!-- gh-issue-number: gh-109401 --> * Issue: gh-109401 <!-- /gh-issue-number --> ::,Miss Islington (bot),31488909,73,1,6,4,1,0,dfb63364d821ba5c3bc8f47e493ff026ff28b428::
https://api.github.com/repos/python/cpython,109876,backport-e5186c3-3.12::3.12,0,closed,awaiting review::skip news::,Increase timeouts. Barrier default timeout should be long enough to spawn 4 threads on a slow CI. (cherry picked from commit e5186c3de4194de3ea8c80edb182d786f5e20944) Co-authored-by: Victor Stinner <vstinner@python.org> <!-- gh-issue-number: gh-109401 --> * Issue: gh-109401 <!-- /gh-issue-number --> ::,Miss Islington (bot),31488909,73,2,6,4,1,0,fd12e85ff56b0db5d43debe361a1f20a6b13000b::ed86ab07f8c3cc6bf474574795c7f9b8b06fd47e::
https://api.github.com/repos/python/cpython,109875,barrier_timeout::main,0,merged,tests::skip news::,"Increase timeouts. Barrier default timeout should be long enough to spawn 4 threads on a slow CI. <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-109401 --> * Issue: gh-109401 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,1,6,4,1,0,ca0d11ee6ba5536a7a7da0f0dbc8f8d2d104d354::
https://api.github.com/repos/python/cpython,109874,backport-25bb266-3.11::3.11,0,merged,tests::,"Fix test_zippath_from_non_installed_posix() of test_venv: don't copy __pycache__/ sub-directories, because they can be modified by other Python tests running in parallel. (cherry picked from commit 25bb266fc876b344e31e0b5634a4db94912c1aba) Co-authored-by: Victor Stinner <vstinner@python.org> <!-- gh-issue-number: gh-109748 --> * Issue: gh-109748 <!-- /gh-issue-number --> ::",Miss Islington (bot),31488909,73,1,12,1,2,0,80f594cb84b6e03adc2aa76c2f7d331aa1e6da82::
https://api.github.com/repos/python/cpython,109873,backport-25bb266-3.12::3.12,0,closed,tests::awaiting core review::,"Fix test_zippath_from_non_installed_posix() of test_venv: don't copy __pycache__/ sub-directories, because they can be modified by other Python tests running in parallel. (cherry picked from commit 25bb266fc876b344e31e0b5634a4db94912c1aba) Co-authored-by: Victor Stinner <vstinner@python.org> <!-- gh-issue-number: gh-109748 --> * Issue: gh-109748 <!-- /gh-issue-number --> ::",Miss Islington (bot),31488909,73,1,12,1,2,0,fab06b4a5ba98f63930c3dced95a14c651a836e0::
https://api.github.com/repos/python/cpython,109872,test_venv::main,0,merged,tests::,"Fix test_zippath_from_non_installed_posix() of test_venv: don't copy __pycache__/ directories because they can be modified by other Python tests running in parallel. <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-109748 --> * Issue: gh-109748 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,1,12,1,2,0,374e0fe73f094c82d423acc5e5c78aadee055f4d::
https://api.github.com/repos/python/cpython,109871,regrtest_load_tracker::main,0,merged,,"Disable the Windwos load tracker when hunting reference leak. <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-109739 --> * Issue: gh-109739 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,1,16,3,2,0,582f4bd273db35660131e7fcf8513b6ea5f171d0::
https://api.github.com/repos/python/cpython,109869,deepcopy_skip_memo::main,0,merged,performance::skip news::,"In the `copy.deepcopy` method we can skip the initial memo check if the memo was just created. Benchmark: ``` from copy import deepcopy obj={'simple': 'dict'} %timeit deepcopy(obj) ``` ``` main: 1.91 µs ± 1.38 ns per loop (mean ± std. dev. of 7 runs, 1,000,000 loops each) pr: 1.82 µs ± 8.18 ns per loop (mean ± std. dev. of 7 runs, 1,000,000 loops each) ``` <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-109868 --> * Issue: gh-109868 <!-- /gh-issue-number --> ::",Pieter Eendebak,883786,14,2,5,5,1,0,2260fca5203f0a2c21741e696f1db44688a98502::0816d78cc664d1ac86fc0aa59795e1ae0cbab12d::
https://api.github.com/repos/python/cpython,109867,re-interrupt-repeated-matches::main,0,merged,type-bug::performance::,Counting for signal checking now continues in new match from the point where it ended in the previous match instead of starting from 0. <!-- gh-issue-number: gh-109631 --> * Issue: gh-109631 <!-- /gh-issue-number --> ::,Serhiy Storchaka,3659035,401,1,8,2,3,0,cb45bd232f6099e7d3147e7afbfc122c89981b5a::
https://api.github.com/repos/python/cpython,109866,test_gettext::main,0,merged,tests::skip news::,"<!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-109864 --> * Issue: gh-109864 <!-- /gh-issue-number --> ::",Serhiy Storchaka,3659035,401,1,13,2,1,0,345e7d9d86f1ba972877b4c25ac4b25331ce3f62::
https://api.github.com/repos/python/cpython,109865,backport-d73c12b-3.12::3.12,0,merged,,(cherry picked from commit d73c12b88c2275fd44e27c91c24f3ac85419d2b8) Co-authored-by: Irit Katriel <1055913+iritkatriel@users.noreply.github.com> <!-- gh-issue-number: gh-109823 --> * Issue: gh-109823 <!-- /gh-issue-number --> ::,Miss Islington (bot),31488909,73,1,15,1,3,1,9368b885e8ca616d247bbc59068d149dc022a037::
https://api.github.com/repos/python/cpython,109863,wasm-readme-embuilder::main,0,merged,docs::skip issue::skip news::build::topic-WebAssembly::,::,,14360110,0,2,1,1,1,1,9437bad51342b2031b39c4ba2361f2f0130c8bf8::a2b82e0dc133f222499edb322756cc6a2a544c74::
https://api.github.com/repos/python/cpython,109859,re-look-behind-width::main,0,merged,,Now re.error is raised instead of OverflowError or RuntimeError for too large width of look-behind pattern. The limit is increased to `2**32-1` (was `2**31-1`). <!-- gh-issue-number: gh-109747 --> * Issue: gh-109747 <!-- /gh-issue-number --> ::,Serhiy Storchaka,3659035,401,1,46,13,6,0,940b85fa3df5600e6094d8bbaf8184b9310ad643::
https://api.github.com/repos/python/cpython,109856,backport-bc06743-3.11::3.11,0,merged,skip news::,Skip test_is_alive_after_fork() of test_threading if Python is built with Address Sanitizer (ASAN). (cherry picked from commit bc06743533b5fea2d5ecdad6dd3caa372c67439f) Co-authored-by: Victor Stinner <vstinner@python.org> <!-- gh-issue-number: gh-89363 --> * Issue: gh-89363 <!-- /gh-issue-number --> ::,Miss Islington (bot),31488909,73,1,5,1,2,0,42aaca00135e338bc1741102a75b3edc9891b3b5::
https://api.github.com/repos/python/cpython,109855,backport-bc06743-3.12::3.12,0,merged,skip news::,Skip test_is_alive_after_fork() of test_threading if Python is built with Address Sanitizer (ASAN). (cherry picked from commit bc06743533b5fea2d5ecdad6dd3caa372c67439f) Co-authored-by: Victor Stinner <vstinner@python.org> <!-- gh-issue-number: gh-89363 --> * Issue: gh-89363 <!-- /gh-issue-number --> ::,Miss Islington (bot),31488909,73,1,5,1,2,0,bcb6a790642fb7c0f33d8d4c626b217b4faea722::
https://api.github.com/repos/python/cpython,109854,patchcheck-docs-whitespace::main,0,merged,skip news::,"<!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> Moves one of the patchcheck checks to pre-commit. # 1. patchcheck's `normalize_docs_whitespace` runs on files where `fn.startswith('Doc') and fn.endswith(('.rst', '.inc')` pre-commit's `trailing-whitespace` is already running on `c`, `python` and `rst` in the whole codebase. So this widens the check to cover `inc` files in the whole codebase, not just in `Doc`. I think this is a good thing. # 2. patchcheck substitutes matches of `re.compile(br'\s+(\r?\n)$')` with `br'\1`. That is, it strips multiple trailing `\r` and `\n` characters. pre-commit's `trailing-whitespace` trims all trailing whitespace by default ([docs](https://github.com/pre-commit/pre-commit-hooks#trailing-whitespace)). This also widens the check, I think this is a good thing. # 3. ~Remove `docs_modified(doc_files)` from patchcheck, it merely printed out whether any docs files were modified. I don't think it's useful now patcheck does no docs checking, and I'd like to eventually remove patchcheck.~ # 4. ~Some people might be still running `make patchcheck`? If so, to maintain some kind of parity, I've added steps to install and run pre-commit as part of the Makefile command.~ We're doing a similar thing in the PEPs repo: https://github.com/python/peps/blob/a159a9ac58ca73dc1da0b626b6df77807af455d0/Makefile#L62-L77 (And Pillow: https://github.com/python-pillow/Pillow/blob/main/Makefile) Does this seem useful, or better to leave it out? # 5. Finally, some cleanup of `patchcheck.py`: whitespace, f-strings, consistent pluralised outputs, fix typo. <!-- gh-issue-number: gh-109408 --> * Issue: gh-109408 <!-- /gh-issue-number --> ::Won't this result in sentences like ""Please fix the 52 52 files with whitespace issues""? ```suggestion print(f'Please fix the {n_files_str(count)} with whitespace issues') ```::Yes, that's a little too much pluralising! 🙃 ::I don't think `make patchcheck` should run pre commit, especially if the goal is to remove it. Hence I'd say this is a docs point to communicate. ```suggestion ``` ::I quite like the 's' variable approach, it's more readable: ```suggestion s = ""s"" if count != 1 else """" return f""{count} file{s}"" ``` ::Remove the split call?: ```suggestion cmd = (""git"", ""remote"", ""show"", remote_name) ``` ::This will currently check if the user has written documentation for their patch (Docs updated... NO). If we delete from patchcheck, could we look into adding a check in pre-commit for if a user has added a NEWS entry or docs? We should also delete the function, if deleting the only usage.::Let's keep the original, it's more greppable for the actual command.::`docs_modified` doesn't really fit in pre-commit: it only reports and doesn't pass/fail. And pre-commit hides output by default when it passing. So I think I'll reinstate this for now, it's just a couple of lines.::I'm thinking it would be a good idea to add a `make lint` target like we have for the PEPs repo (and Pillow), which seems to work there. Perhaps we should add `make lint` now and have it run pre-commit; and maybe also patchcheck?::```suggestion c_files = [fn for fn in file_paths if fn.endswith(('.c', '.h'))] doc_files = [fn for fn in file_paths if fn.startswith('Doc') and fn.endswith(('.rst', '.inc'))] ```::I'd agree. We should also update the devguide (currently only [patchcheck is mentioned](https://devguide.python.org/getting-started/pull-request-lifecycle/#patchcheck))::Perhaps we could modify the goal to be removal of ``patchcheck`` just from CI rather than entirely? I think it does provide useful features to remind contributors (especially newer contributors) what a PR needs. (But also if there is a way to improve this, I'd be interested)::I'd prefer it if we don't need to maintain the same linter/fixer in two places. I also wonder how many newer contributors run patchcheck, and for that matter how many older contributors too. Anyway, once we move linters/fixers to pre-commit, if it's still useful to output a summary, then we can definitely keep that in some form or other.::Good idea ;)::I've removed the `Makefile` changes from this PR, let's decide what to later after discussion: https://discuss.python.org/t/do-you-use-make-patchcheck/34743?u=hugovk::",Hugo van Kemenade,1324225,628,12,13,33,2,0,dff437b42ca53f884444e87f90ba3118e26b5517::97c6ccfe5061a0bd90edb8a8c0f248feefa58dcd::029a9a4c16cda106cacd0fc70177880f84469c5f::d7690a3588a7f32117a730c35a2697fa9cc17688::5cfcd19a69f2f63dcad5e4be31cec478efad3e63::1eb8042bcd2f21dfdd1f7acc291e3edb45037e94::a85cd1c27ecde5e4e4d33afcae094b855b06a27e::433153d6fd65581e1cb538c45c4e04dad874cc72::a4293442f25a2078ca54b2e68b219da1f6841264::63c6d17a895e7a0abb19f08781ac82390c283d88::05a5d357d83932441d1e7834523d07c686c6aa6d::f4b16ecf675f58e04c037cd87c016a2a1c4a38ff::
https://api.github.com/repos/python/cpython,109852,thread311::3.11,0,merged,skip news::,"…g raw memory allocator (#109808) (cherry picked from commit 1b8f2366b38c87b0450d9c15bdfdd4c4a2fc3a01) <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-109795 --> * Issue: gh-109795 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,1,6,3,1,0,75e36a4540c3250aa2f7c686a2ab6615cbdc06ea::
https://api.github.com/repos/python/cpython,109850,test_rot13_func::main,0,merged,tests::skip news::,<!-- gh-issue-number: gh-109848 --> * Issue: gh-109848 <!-- /gh-issue-number --> ::,Serhiy Storchaka,3659035,401,1,2,1,1,0,9fe17cac87b88153b6e5933164293f617d76b9ff::
https://api.github.com/repos/python/cpython,109846,tidy-up-eval-breaker::main,0,merged,,"Merge the various eval-breaker flags and monitoring version into a single atomic value to allow faster checking by combining the eval-breaker check and the monitoring version check. <!-- gh-issue-number: gh-109369 --> * Issue: gh-109369 <!-- /gh-issue-number --> ::Isn't this fully covered by the places we call `SIGNAL_PENDING_CALLS()`?::I would be nice to preserve this comment.  Would it make sense at the top of `update_eval_breaker_from_thread()`?::Isn't this fully covered by the places we call `SIGNAL_PENDING_CALLS()`?::Where are we not already setting the bit when `tstate->async_exc` is set, such that we must do so here?::I'm guessing this is something the signals module can't do directly.  Is that right?::This seems less critical since we have the single source of truth now.::FWIW, I'm guessing the Windows failures have to do with signals.  In particular, the comment here imples that your use of `_Py_ThreadCanHandleSignals()` here might need rethinking.::Yes it is. In earlier version, I set the bit to zero or one, depending on the calls to do. In which case it could be set from 1 to 0 when switching from the main thread. Now, we only set to 1 as it is faster, so this isn't needed.::Not in this case. When running a non-main thread with `pending_mainthread.calls_to_do` we don't want  `_PY_CALLS_TO_DO_BIT` set, to avoid constantly calling `_Py_HandlePending`. So when we switch to the main thread, we need to set  `_PY_CALLS_TO_DO_BIT` if `pending_mainthread.calls_to_do`::If `tstate->async_exc` is set on a sleeping thread, then we need to set the bit when that thread gets the GIL.::Only the main thread can handle signals. So if the main thread is not the running thread when a signal happens, we don't want to set the eval breaker bit then, but we do want to set it when the main thread gets the GIL.::This is important, as `_PY_CALLS_TO_DO_BIT`, `_PY_SIGNALS_PENDING_BIT` and `_PY_ASYNC_EXCEPTION_BIT` are, to varying degrees, per-thread. Whenever we switch thread we need to update them.::When the main thread acquires the GIL, `update_eval_breaker_from_thread` should ensure that `_PY_SIGNALS_PENDING_BIT` is set.::Doesn't the bit being set imply an exception is set?  If so, this should be an assert.  Furthermore, `PyThreadState_SetAsyncExc()` should probably be fixed to unset `_PY_ASYNC_EXCEPTION_BIT` when `NULL` is passed in.::Let's see if I understand things correctly.  A thread will only ever acquire the GIL either by the eval loop itself or via the C-API: * C-API[^1] * before the eval loop has started * while the eval loop is running * after the eval loop has finished * running eval loop--for some bytecode instructions[^2] On the other hand, all the ""pending"" actions[^3] happen only are performed in a running eval loop, driven by the eval breaker[^2].  The eval loop calls `_Py_HandlePending()`, which executes in this order: 1. handle signals, if any (**main thread only**) 2. make per-interpreter pending calls 3. make global pending calls (**main thread only**) 4. run GC[^4] 5. release & re-acquire the GIL (if another thread has asked for it) 6. apply the async exception, if applicable (**sort of thread-specific**) When the GIL is acquired via the C-API (outside a running eval loop), none of that will happen until at least one eval loop is running and it reaches one of the instructions that checks the eval breaker[^2]. When the GIL is acquired by a running eval loop, the first 4 pending events have already just been handled, and the last one (async exception) is about to be. [^1]: e.g. `PyEval_RestoreThread()` (after earlier releasing it), or for the first time when an interpreter is created or with `threading.Thread.start()`. [^2]: the small set of instructions that invoke `CHECK_EVAL_BREAKER()`: the intermediate end of loops; after calls; sometimes for `RESUME`; `_JUMP_TO_TOP` and `ENTER_EXECUTOR` (whatever those are for). [^3]: which are driven by the events represented in this PR [^4]: GC is also triggered in other places, like the signal-related C-API ---- With all that in mind, the question is: how does the effect of `PyThreadState_SetAsyncExc()` relate to acquiring the GIL?  Hence, why should we worry about `_PY_ASYNC_EXCEPTION_BIT` in `update_eval_breaker_from_thread()`?  `PyThreadState_SetAsyncExc()` always sets `tstate->async_exc` and then sets the eval breaker for the target interpreter.  That eval breaker bit never gets cleared until the targeted thread takes care of event.  So why do we need to set the bit when taking the GIL, regardless of if the thread is sleeping or not?  It seems unnecessary. That does lead to another question:  why have the async exception be part of the eval breaker at all?  It only only applies to the target thread, but the eval breaker bit is set it will interrupt all threads.  Would it make sense to have a per-thread eval breaker?  Then again, it only matters if async exceptions are used by the community often enough.::There's a similar question for signals and the main thread pending calls,.  However, unlike async exceptions, we know that signals are somewhat prevalent.  Maybe a separate per-thread eval breaker would be worth it?  Perhaps it would help to have a separate (generated) variant of the eval loop that also checks a per-thread eval breaker (or checks it exclusively)?::Similarly to https://github.com/python/cpython/pull/109846#discussion_r1341646682, why does acquiring the GIL require that we reproduce what was already done via `Py_AddPendingCall()`? Is it because we always flip the bit in `_make_pending_calls()`, even if we're not in the main thread but there are global pending calls waiting.  That seems like we could use a separate bit for the global pending calls. Is i because we don't want to interrupt all the other threads while waiting for the main thread to handle its pending calls?  I suppose the current approach sort of addresses that, but (as indicated in https://github.com/python/cpython/pull/109846#discussion_r1341646682) that means we put off those extraneous interruptions only until the main thread takes the GIL again.  Then the interruptions resume until the main thread handles its pending calls.  That feels very jumpy.  ISTM, a per-thread eval breaker would be a clearer solution. This all applies to the signal-related code here in `update_eval_breaker_from_thread()` too.::I'm not suggesting that we change things up in this PR.  Rather, **if** a less jumpy approach makes sense then we could do it in a follow-up PR.::See https://github.com/python/cpython/pull/109846#discussion_r1341658257.::Yeah, it comes back to how we are being a little tricky with unsetting certain bits when the apply to the main thread and setting them again here when the main thread takes the GIL.::FWIW, I don't think we have much room to change the order of actions in `_Py_HandlePending()`.::It would be more clear to use `_Py_ThreadCanHandleSignals()` only for the signals part, even if it's currently correct. ```suggestion if (_Py_IsMainThread() && _Py_IsMainInterpreter(interp)) { int32_t calls_to_do = _Py_atomic_load_int32_relaxed( &_PyRuntime.ceval.pending_mainthread.calls_to_do); if (calls_to_do) { _Py_set_eval_breaker_bit(interp, _PY_CALLS_TO_DO_BIT, 1); } } if (_Py_ThreadCanHandleSignals(interp)) { ```::",Mark Shannon,9448417,435,20,188,234,13,0,dba7b7e59604e0eef23eb537920f89b3a90a7f77::2b8766e808782b742e47970b0b3c4601d5cf7dce::f7205ff07fc70a8e5f0b9c19f5a559637f954bef::4da67aaf42bc98a6985410d29647c6459e931db8::4fa77bcc881dc8a9ff499bde7b05b7a0aaf44408::b8258df797cd695e69faf188acaabcdf8964fa61::44c7900b9844c5c01833a71c7fcc8ebcc3e69e10::558923333f098c56646329daa6c9e50a98be5fe1::66cd1c33154f40e4e7bad3af8bbb3c3d645ce9d5::0b85608af5e77188a70acb6902c028962d50740f::558a4f985cf682733022a9de5f43832cbbe7d403::36f85b7a41591117bf9fb6076e5dc826da93454c::964329039861020b463231a157ef29e1634aad64::b6a49f501160db316166d7f5da95aa4cad415173::94b05156559794f72f302e1c499c242da3022893::0bb8bd2f3a3add3d86fe53b9cb9889c6ec855968::7c74435962e954c6a66cf5c4112913a44c46b67f::92cf1ffc913901ef712b12b24b04650a23aff62f::134ae8225af827babb756ee6002048cd41aa687d::da0d844321737f59682dd053ef4ec18df7d38303::
https://api.github.com/repos/python/cpython,109844,docs/whatsnew/c-api-fixup::main,0,merged,docs::skip news::,* Not for backporting * xref #109830 <!-- gh-issue-number: gh-109190 --> * Issue: gh-109190 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--109844.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::,Adam Turner,9087854,89,1,0,2,1,0,cd2c0dfb535f8ceb8592365537b50401269aa1bc::
https://api.github.com/repos/python/cpython,109842,fix_testclinic_limited::main,0,merged,skip news::,"Make sure that the Py_BUILD_CORE macro is not defined. <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-109723 --> * Issue: gh-109723 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,1,6,0,1,0,51b8b7b6d6a2238889f523c6fcd24baac0e554a1::
https://api.github.com/repos/python/cpython,109839,gh-109823::main,0,merged,,Fixes #109823. <!-- gh-issue-number: gh-109823 --> * Issue: gh-109823 <!-- /gh-issue-number --> ::,Irit Katriel,1055913,162,3,15,1,3,0,29070c544096cdd611cfe073a69efc2feff2ce88::8a3399014bbd1bbceacc5e0c27cdd75ea351fe2a::c62fd3bf472dc6cc70d254bcdb6df0bbcaec730c::
https://api.github.com/repos/python/cpython,109838,backport-f29bc9c-3.11::3.11,0,merged,tests::skip news::,"Expect the test to be ""short"" but don't measure the exact performance of the CI. SHORT_TIMEOUT is about 30 seconds whereas the cancelled coroutine takes around 1 hour. (cherry picked from commit f29bc9c9a0a6794c6b8a9e84a7ba9237b427a10a) Co-authored-by: Victor Stinner <vstinner@python.org> <!-- gh-issue-number: gh-109833 --> * Issue: gh-109833 <!-- /gh-issue-number --> ::",Miss Islington (bot),31488909,73,1,3,2,1,0,ffdcbc047dc2089a31839a38b3e8c931a60e1d18::
https://api.github.com/repos/python/cpython,109837,backport-f29bc9c-3.12::3.12,0,merged,tests::skip news::,"Expect the test to be ""short"" but don't measure the exact performance of the CI. SHORT_TIMEOUT is about 30 seconds whereas the cancelled coroutine takes around 1 hour. (cherry picked from commit f29bc9c9a0a6794c6b8a9e84a7ba9237b427a10a) Co-authored-by: Victor Stinner <vstinner@python.org> <!-- gh-issue-number: gh-109833 --> * Issue: gh-109833 <!-- /gh-issue-number --> ::",Miss Islington (bot),31488909,73,1,3,2,1,0,2ef4f9dc1b44872604545b793fd3329645eba138::
https://api.github.com/repos/python/cpython,109836,docs/whatsnew/olc-alpha::main,0,merged,docs::skip news::,* Ordering used: parser; assignment expr; exceptions; GC; builtins; modules; other <!-- gh-issue-number: gh-109190 --> * Issue: gh-109190 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--109836.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::,Adam Turner,9087854,89,1,47,47,1,1,0bb39ecc9c776ad0dc8cd8d0a2cf19671b4cef78::
https://api.github.com/repos/python/cpython,109835,asan_test_is_alive_after_fork::main,0,merged,skip news::,"Skip test_is_alive_after_fork() of test_threading if Python is built with Address Sanitizer (ASAN). <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-89363 --> * Issue: gh-89363 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,1,5,1,2,0,6b2201ea6e203ef0bdd70a49bab3f0888b48cd22::
https://api.github.com/repos/python/cpython,109834,fix_test_wait_for::main,0,merged,tests::topic-asyncio::skip news::,"Expect the test to be ""short"" but don't measure the exact performance of the CI. SHORT_TIMEOUT is about 30 seconds whereas the cancelled coroutine takes around 1 hour. <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-109833 --> * Issue: gh-109833 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,1,3,2,1,0,9f980e70f1f507e47ad4c6f527c557b7c45ca572::
https://api.github.com/repos/python/cpython,109831,regrtest_rerun_env_changed::main,0,merged,,"When a test fails with ""env changed"" and --rerun option is used, the test is now re-run in verbose mode in a fresh process. <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-109276 --> * Issue: gh-109276 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,1,21,7,3,0,a090e590fc7cd53c3e64b3055d34578918bc8594::
https://api.github.com/repos/python/cpython,109830,backport-bccc1b7-3.12::3.12,0,merged,docs::skip news::,(cherry picked from commit bccc1b78002c924e8f4121fea5de7df5eb127548) Co-authored-by: Adam Turner <9087854+AA-Turner@users.noreply.github.com> Co-authored-by: Serhiy Storchaka <storchaka@gmail.com> <!-- gh-issue-number: gh-109190 --> * Issue: gh-109190 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--109830.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::,Miss Islington (bot),31488909,73,2,94,13,1,1,ee25e38d2f13bbbc1e7fe31d00cdb9f01d8eebfd::4fb1d03c2cc22dcfdb60d2276be370f95976673c::
https://api.github.com/repos/python/cpython,109828,libregrtest_results::main,0,merged,skip news::,"* Factorize code listing ""bad / env changed / ..."" tests. * Add TestResults.is_all_good() method. * Move ""All 400 tests OK."" to the end * Move ""Test suite interrupted by signal SIGINT."" to the end. <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-109276 --> * Issue: gh-109276 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,1,31,39,2,0,259bcbf05176909ad3cabc20b77693a52cdb8737::
https://api.github.com/repos/python/cpython,109827,backport-4e47853-3.12::3.12,0,merged,docs::skip news::,(cherry picked from commit 4e478534d73e46aea5d10fb4e0ddf2c34440d0f6) Co-authored-by: Adam Turner <9087854+AA-Turner@users.noreply.github.com> <!-- gh-issue-number: gh-109190 --> * Issue: gh-109190 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--109827.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::,Miss Islington (bot),31488909,73,1,30,30,1,1,4124992e223b9f1df98346a1f1a93c3248ef91aa::
https://api.github.com/repos/python/cpython,109826,backport-f08772c-3.12::3.12,0,merged,docs::skip news::,(cherry picked from commit f08772cfd8f6602077e0989c1daa8bf74a8c15f1) Co-authored-by: Adam Turner <9087854+AA-Turner@users.noreply.github.com> <!-- gh-issue-number: gh-109190 --> * Issue: gh-109190 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--109826.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::,Miss Islington (bot),31488909,73,1,4,7,1,1,f079f0195e8ff9b5cef46ef56c2c1b20381fc623::
https://api.github.com/repos/python/cpython,109825,backport-7495a93-3.12::3.12,0,merged,docs::skip news::,(cherry picked from commit 7495a93e0f843c40ebc5925c6a35225d41e52654) Co-authored-by: Adam Turner <9087854+AA-Turner@users.noreply.github.com> <!-- gh-issue-number: gh-109190 --> * Issue: gh-109190 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--109825.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::,Miss Islington (bot),31488909,73,1,4,4,1,1,c76ba35f0b83ee4169019bb89d1d2b1c49f17e06::
https://api.github.com/repos/python/cpython,109824,email-message-import::main,0,merged,type-feature::performance::topic-email::3.13::,"This patch reduces the import time of `email.utils` by around 46%. Why do I care about `email.utils`? Well, `email.utils` is imported by `email.message`, and `email.message` is imported by lots of other stdlib modules: `urllib.parse`, `mailbox`, and `importlib.metadata`. Improving the import time of this module has a cascading effect through lots of the rest of the standard library. A lot of the import cost of `email.utils` has to do with the `make_msgid` function, which requires the `random` and `socket` modules. This function is used by many third-party libraries, but isn't used at all by any of the stdlib modules that import `email.utils`. This patch moves the function into a separate submodule. <!-- gh-issue-number: gh-109653 --> * Issue: gh-109653 <!-- /gh-issue-number --> ::```suggestion Alex Waygood. ``` :)::Ty!!::Minor: ``_utils_msgid`` for explicitness? Non-blocking though, clearly.::Appreciate this is import time not general refactoring -- but we could consider making this an f-string! ```suggestion msgid = f'<{timeval}.{pid}.{randint}{idstring}@{domain}>' ```::The other intra-package imports (at the top-level) use the spelled-out ``email.spam`` form: ```suggestion from email._msgid import make_msgid ```::copyedit (I've not been so picky as to insert the definite article, though!): ```suggestion # lazy import, to speed up module import time ```::I'd rather refrain from (what could be perceived as) gratuitous refactoring here, since I'm not the primary maintainer of this module — I'll defer to the `email` maintainers on what they'd like here 👍::I'm happy with either; I'll defer to whatever the `email` maintainers prefer :)::In general I don't like performance hacks like this, but they do have their place.  I can't speak to whether or not this is a worthwhile performance hack, you should seek approval from the maintainers of the impacted modules for that. That said, the stdlib itself makes no use of make_msgid, and email.utils is not itself considered part of the new email API.  Moving it into a separate module and making that part of the non-legacy public API of the email module would actually make some sense.  I guess we'd just call it 'msgid'?  Then this code should issue a deprecation warning pointing to the new way to import make_msgid.  It feels kind of weird to have a module with just one function, but there isn't really anything else related to it that I can think of.  (I wonder...maybe make_msgid actually belongs in the UUID module?  Probably not.  Wrong RFC.)::Style: ```suggestion import socket ``` (I think ``Charset`` can get away without the newline as there's only one line in the pertinent block; here we have a whole function.)::Not sure I like this one, only fine with it since `formataddr` doesn't look too widely used (a lot of the time it's nice to pay these costs upfront, predictable performance is important, e.g. don't want the first request your webserver serves to be randomly slow)::nit: import os is free::True, I'll revert that one!::> (a lot of the time it's nice to pay these costs upfront, predictable performance is important agreed. On the other hand, though, the `email` package goes in quite heavily for lazy imports in some other places, so this does seem in keeping with that general philosophy: https://github.com/python/cpython/blob/f7860295b16a402621e209871c8eaeeea16f464e/Lib/email/__init__.py#L28-L61::I'd be happy to change it so it's imported at the top of the function if you think that'd be better?::Nah that'd be worse, module level or here. I'm fine with this as is!::",Alex Waygood,66076021,141,12,11,5,2,0,0aca55330adfac2eec6e6586677ec7d7aac72510::f3c815da7bb7efbc73ebc5c969b2331362296cf2::992274f8d1aed901d45d750fc6216a08ac8bbdd8::493aa332405bc7841fe2aa4ce4dec1079122b2a4::a697d9d45a44b73f0a5925d05224100739277f66::03233f19d8b5a21df4e96dae4b480bd4526cc02a::f11bc987866fd9321d6ccba093505d0534b527d4::c5e7a611155cdbf77ca96db676c2d34528a3be61::bcaeb4cbfc2cde86921bd29d321f8a19dc3dedf0::b387dcd42d09ee114ef7b996d15678c2a48c8b86::c72ee5c94ecd1522d25bd321f3a79236de85474d::e2010284d0b1db6b3fd44d4be77e92adde27c599::
https://api.github.com/repos/python/cpython,109821,docs/whatsnew/bytecode::main,0,merged,docs::skip news::,"* Mostly cribbed from @MatthieuDartiailh's list in #107457, save for not covering FOR_ITER's new behaviour; the changes to the POP_JUMP_IF_* family of instructions; and the YIELD_VALUE change * I also noticed that ``sys.monitoring`` wasn't covered in ""improved modules"", so I've added that as it's somewhat related <!-- gh-issue-number: gh-109190 --> * Issue: gh-109190 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--109821.org.readthedocs.build/en/109821/whatsnew/3.12.html <!-- readthedocs-preview cpython-previews end -->::`CALL_INSTRINSIC_2` is listed twice::Can we document `CALL_INSTRINSIC_1`, `CALL_INSTRINSIC_2` and `END_SEND` opcodes on the `dis` module page, like the others, and then link to them?::This is @MatthieuDartiailh's PR (#108900). ~~Though CALL_INTRINSIC_1/2 seem to already be documented, unsure why these weren't being picked up.~~ A::Add credit for issue https://github.com/python/cpython/issues/101632 / PR https://github.com/python/cpython/pull/101633? ```suggestion * Add the :opcode:`RETURN_CONST` instruction. (Contributed by penguin_wwy in :gh:`101632`.) ```::@penguin-wwy please could we check how you'd like to be credited for this change? (I have a slight preference against using usernames in the documentation!) A::Tanks, if possible, then just use Wenyang Wang.::```suggestion * Add the :opcode:`RETURN_CONST` instruction. (Contributed by Wenyang Wang in :gh:`101632`.) ```::Thank you! ::",Adam Turner,9087854,89,7,28,8,2,1,01852102df3258535e001ac59fa16c60f3021632::a4c1d225890e36fe87bfa416cfd68a865b082298::d755483cf9a1ddc68d4c4062e68165c8dcf279c2::d6384a2b740eb4b5b20c697027ea887310a99eb1::4bd178d693fe95fe70de01e635ab99421f638e0b::6ddc85289e65242190a064a02dc0b8050851343f::c29a5bb49b8f0b8fbc957f98e698b76a5a2c52ca::
https://api.github.com/repos/python/cpython,109819,issue-109818::main,0,merged,,<!-- gh-issue-number: gh-109818 --> * Issue: gh-109818 <!-- /gh-issue-number --> ::```suggestion Fix :func:`reprlib.recursive_repr` not copying ``__type_params__`` from ```::,Nikita Sobolev,4660275,4663,2,14,0,3,1,cc26fa4c6efafb2b007fa67b77c6e092f7538eb7::fe9dbfa014752dbcbb155a5ef6930598d7509764::
https://api.github.com/repos/python/cpython,109816,backport-7b8bfe1-3.12::3.12,0,merged,docs::skip news::,(cherry picked from commit 7b8bfe1644c3d008c1b5c19a537ee7d19bc32c59) Co-authored-by: Adam Turner <9087854+AA-Turner@users.noreply.github.com> <!-- gh-issue-number: gh-109190 --> * Issue: gh-109190 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--109816.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::,Miss Islington (bot),31488909,73,1,3,2,1,1,f1b4d30e9b6b0bbba4d40303f4dbde447a72da17::
https://api.github.com/repos/python/cpython,109815,backport-09a73d5-3.12::3.12,0,merged,docs::skip news::,(cherry picked from commit 09a73d50f687b9b388b0386f400d9ba5a7c5f2a5) Co-authored-by: Adam Turner <9087854+AA-Turner@users.noreply.github.com> <!-- gh-issue-number: gh-109190 --> * Issue: gh-109190 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--109815.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::,Miss Islington (bot),31488909,73,1,7,0,1,1,da218efd5c81132752b6e8cde11bbb8243de938e::
https://api.github.com/repos/python/cpython,109814,issue-101100-__future__::main,0,merged,skip news::,"Before: ``` /Users/sobolev/Desktop/cpython/Doc/library/__future__.rst:54: WARNING: py:class reference target not found: _Feature /Users/sobolev/Desktop/cpython/Doc/library/__future__.rst:54: WARNING: py:meth reference target not found: getOptionalRelease /Users/sobolev/Desktop/cpython/Doc/library/__future__.rst:54: WARNING: py:meth reference target not found: getMandatoryRelease /Users/sobolev/Desktop/cpython/Doc/library/__future__.rst:57: WARNING: py:attr reference target not found: compiler_flag /Users/sobolev/Desktop/cpython/Doc/library/__future__.rst:57: WARNING: py:class reference target not found: _Feature ``` Changes: 1. I documented `_Feature` class and its members and added sphinx markup, because they were already documented but without the proper markup <img width=""883"" alt=""Снимок экрана 2023-09-25 в 09 12 59"" src=""https://github.com/python/cpython/assets/4660275/d558848a-a716-45c0-bed4-53b4ff9d2747""> This is now much more readable, has more metadata, and links to every part of the explanation. 2. I've also changed > *MandatoryRelease* may also be ``None``, meaning that a planned feature got > dropped. to be > *MandatoryRelease* may also be ``None``, meaning that a planned feature got > dropped or that it is not yet decided. Because of the note below: > No final decision has been made yet. See also :pep:`563` and :pep:`649`. <!-- gh-issue-number: gh-101100 --> * Issue: gh-101100 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--109814.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::",Nikita Sobolev,4660275,4663,2,32,27,2,0,1553efbd7be74e4ae34d1872c6d3ee0decaad9ea::784886dfc02806664d28cb5769df34900ff2df2d::
https://api.github.com/repos/python/cpython,109813,gh-109812::main,0,merged,docs::skip news::,"<!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> This changes the wording for an incorrect `collections.Counter` piece. <!-- gh-issue-number: gh-109812 --> * Issue: gh-109812 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--109813.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::Maybe just ```suggestion c.items()                       # convert to a iterator of (elem, cnt) pairs ``` ?::It's not an iterator. I'd just change ""list"" to ""view"". And ""convert to"" to ""create"", since the view doesn't really contain the data, so ""convert to"" seems wrong to me.::Yes, it is just an iterable 👍 ``` >>> {}.items().__iter__ <method-wrapper '__iter__' of dict_items object at 0x102cd1250> >>> {}.items().__next__ Traceback (most recent call last): File ""<stdin>"", line 1, in <module> AttributeError: 'dict_items' object has no attribute '__next__'. Did you mean: '__ne__'? ```::Maybe this is more in line with the rest of the examples ```suggestion list(c.items())                 # convert to a list of (elem, cnt) pairs ```::I disagree.  The doc for c.items() should say what c.items returns.::",Jacob Coffee,45884264,29,1,2,1,2,0,6758fedf361a2385b7e11a73398aca1d5ebeb4fe::
https://api.github.com/repos/python/cpython,109810,cf_finalization_error::main,0,merged,,"concurrent.futures: The 'executor manager thread' now catches PythonFinalizationError, it calls terminate_broken(). The exception occurs while Python is being finalized when adding an item to the 'call queue' tries to create a new 'queue feeder' thread. Add test_python_finalization_error() to test_concurrent_futures. concurrent.futures._ExecutorManagerThread changes: * terminate_broken() no longer calls shutdown_workers() since the queue is no longer working anymore (read and write ends of the queue pipe are closed). * terminate_broken() now terminates child processes. * wait_result_broken_or_wakeup() now uses the short form of traceback.format_exception(). multiprocessing.Queue changes: * Add _terminate_broken() method. * _start_thread() sets _thread to None on exception to prevent leaking ""dangling threads"" even if the thread was not started yet. <!-- gh-issue-number: gh-109047 --> * Issue: gh-109047 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--109810.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::",Victor Stinner,194129,1148,2,88,22,4,1,f94feb13e5c94dbc4dd5f6b522740f9997991afb::2136c57049a0867b1f2a712191188eb37440b479::
https://api.github.com/repos/python/cpython,109809,python_finalization_error::main,0,closed,,"Add PythonFinalizationError. This exception derived from RuntimeError is raised when an operation is blocked during the Python finalization. The following functions now raise PythonFinalizationError, instead of RuntimeError: * _thread.start_new_thread() * os.fork() * os.fork1() * os.forkpty() Morever, _winapi.Overlapped finalizer now logs an unraisable PythonFinalizationError, instead of an unraisable RuntimeError. <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-109047 --> * Issue: gh-109047 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--109809.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::",Victor Stinner,194129,1148,1,46,6,13,0,6d969f3f860dc68adf926362b986fbdddd4139e7::
https://api.github.com/repos/python/cpython,109808,_thread-start-new-thread-use-raw-malloc-for-bootstate::main,0,merged,skip news::,"Fixes #109795 When new thread is starting, but Python is finalizing, `PyMem_Free` can't be called on new thread `bootstate`, because this thread doesn't own the GIL. We should use raw memory allocator to allocate/free `bootstate` to avoid crashes/other unexpected behaviour. <!-- gh-issue-number: gh-109795 --> * Issue: gh-109795 <!-- /gh-issue-number --> ::Please add a comment to explain why PyMem_RawMalloc() is used instead of PyMem_Malloc(). Mention gh-109795.::```suggestion // gh-109795: Use PyMem_RawMalloc() instead of PyMem_Malloc(), // because it should be possible to call thread_bootstate_free() // without holding the GIL. ``` ::Oh. Please remove this Changelog entry. I don't think that it's worth it. It doesn't impact directly users and it's a recent regression, no?::",Radislav Chugunov,52372310,4,8,6,3,1,1,4e1d6df44c6f556bb54590d8d2a67fb4a656be56::96659986ca22c8fd5e9db5e10a2a4245ab6637c7::9b32580c005b85e15aa0e04b0b978d5570bde4a8::e5c0f9281753c65d054907dc1834e4389b4ab60c::b2f5e37fdfedb337c53eec52a382d2104f6a2e58::0fdd943b0f37ad73b0ea6143063cae43191320a2::7c776a7f3dfae029a75307776304e641edf87a14::1d9c95a7376c92d5f31c00ac02bcf30c746c6725::
https://api.github.com/repos/python/cpython,109807,docs/whatsnew-3.12-sync::main,0,merged,docs::skip issue::skip news::,A post main merge edit to the text was added in the 3.12 backport PR. https://github.com/python/cpython/pull/109773/commits/e38d7104b8f245e5db6d487932c44edf0d2c4762 This includes that in main.  It's a minor edit over #109767 to resolve the comment there. <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--109807.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::,Gregory P. Smith,68491,234,1,3,1,1,0,aa753f72452d4a6aa9ff05dc4207a9e3a7a51a3d::
https://api.github.com/repos/python/cpython,109806,backport-8d365b6-3.12::3.12,0,merged,docs::skip news::,(cherry picked from commit 8d365b60bacf0a7edda24eba2d45aba1c2626fbc) Co-authored-by: Adam Turner <9087854+AA-Turner@users.noreply.github.com> Co-authored-by: Hugo van Kemenade <hugovk@users.noreply.github.com> <!-- gh-issue-number: gh-109190 --> * Issue: gh-109190 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--109806.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::,Miss Islington (bot),31488909,73,1,11,11,1,1,313be3093e309a0b3a18e1414781294bb4c94b4f::
https://api.github.com/repos/python/cpython,109804,functools-import-time::main,0,merged,,"This reduces the import time of `functools` by around 13%, according to my measurements (using a PGO-optimised non-debug build, on Windows) <!-- gh-issue-number: gh-109653 --> * Issue: gh-109653 <!-- /gh-issue-number --> ::",Alex Waygood,66076021,141,1,4,1,2,0,46cf001c97ae13acd022f4e264b25af20ebf6e77::
https://api.github.com/repos/python/cpython,109803,unused-imports::main,0,merged,skip news::,"As suggested in https://github.com/python/cpython/issues/109653#issuecomment-1732329802 by @hugovk. Nearly all of these are in `Lib/test/`, but there is also one in `Lib/asyncio/tasks.py`. <!-- gh-issue-number: gh-109653 --> * Issue: gh-109653 <!-- /gh-issue-number --> ::",Alex Waygood,66076021,141,3,6,25,20,0,e62f238b0dad091175f47df25a0ae41042a54382::82d73a08b73af78e9db4e3a046e8209608ba1515::61a1a35e222304bed04fa056417fc992f4253a1b::
https://api.github.com/repos/python/cpython,109801,backport-649768f-3.11::3.11,0,merged,skip news::,(cherry picked from commit 649768fb6781ba810df44017fee1975a11d65e2f) Co-authored-by: Nikita Sobolev <mail@sobolevn.me> gh-101100: Fix shpinx warnings in `Doc/library/xml.etree.elementtree.rst` <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--109801.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::,Miss Islington (bot),31488909,73,1,6,2,2,0,2150f9a54c903aa1f44ec3ba14b8575c1b4062cd::
https://api.github.com/repos/python/cpython,109800,backport-649768f-3.12::3.12,0,merged,skip news::,(cherry picked from commit 649768fb6781ba810df44017fee1975a11d65e2f) Co-authored-by: Nikita Sobolev <mail@sobolevn.me> gh-101100: Fix shpinx warnings in `Doc/library/xml.etree.elementtree.rst` <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--109800.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::,Miss Islington (bot),31488909,73,1,6,2,2,1,a26631a9672a67eb07d78e8f04e58d4128e99b72::
https://api.github.com/repos/python/cpython,109799,issue-101100-etree::main,0,merged,skip news::,"It used to be like this: ``` /Users/sobolev/Desktop/cpython/Doc/library/xml.etree.elementtree.rst:20: WARNING: py:mod reference target not found: xml.etree.cElementTree /Users/sobolev/Desktop/cpython/Doc/library/xml.etree.elementtree.rst:765: WARNING: py:mod reference target not found: xml.etree.ElementInclude ``` Now I define correct module where we define functions in this module, later I switch the module back to the default one. Preview: <img width=""826"" alt=""Снимок экрана 2023-09-24 в 11 09 41"" src=""https://github.com/python/cpython/assets/4660275/f541bf3b-a197-48d3-b1fb-00b5953cb874""> <!-- gh-issue-number: gh-101100 --> * Issue: gh-101100 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--109799.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::",Nikita Sobolev,4660275,4663,1,6,2,2,0,c436dcc47cb6152ba5de1cc91af92798a6bcb1f1::
https://api.github.com/repos/python/cpython,109797,shutil_which_no_extv2::main,0,closed,,"Implement the change described in https://github.com/python/cpython/issues/109590. Without this: ``` shutil.which('npm') ``` Can resolve a file named `npm`. (I thought): To match Windows CMD, it should only try that if a '.' is one of the PATHEXT While here also fix up the test cases to make better use of the bytes vs str for testing. <!-- gh-issue-number: gh-109590 --> * Issue: gh-109590 <!-- /gh-issue-number --> ::",Charles Machalow,5749838,18,164,76,12,3,0,41cb29962a04fae45536f94730c055d80f00b3ad::d505afdf588f0cbcade5bc2eb1a4a6b97fa6ff00::287a3fa534acc016aafccc052625e1641766af77::99d114e4bfbaebe7ce10d6c33319dc98036e1582::f9cabbffe3d1fa74a64b9b71ad7e82bda35f4a3a::a4284f92d046ddd8899c380678e48a46c7b40c01::691fd9c82b6e6d6cc07aeb317bbae414e50d614f::b7ff008aa0048a3cfe4da6aa7ba2ca947fc18012::d152179f3cc1ec6d45d18790f52f9f1ebb524629::0174f87a8a30fd60f96ec8e8f2804fb57b23568e::b14d6083ccfdc1d9334445171e1fca5aad045796::be22f098370fcbde306c46fc1d8cee9263f205d1::ea912a62629ef047cc74440b1e8f2790f5a83038::657f884f5005f9ab7ea77786cffd25c35ca9753f::5e484bf616c8a4645be71f2822ea7028ca82a80e::0722ddf2c619481b34d101c1e22c3b7f7fae11ab::7c24e26fef9a813c816e3efc0ad2579e5f5e0698::3394750985ea546e26494016151ff232ebe40466::0fe458ecc46d2f2a2e82e324d860dff932d848d4::ea219242e8ecbb5120be5485d078f0d0ee336807::aad8670e9f9c9fc029877a2192b6f0d6efbd040a::6d4c96a24d96984bb5745029079be3e2568a9348::ebfa90b7972c2432bdefc4e0d05a4e665e121d3e::6d6ceb93bd7499437df355b0e14cdb4c05d8cbc7::be83a3aab6bdde078fb28926ae2515830d4c1a71::3eb65fb93ac2347a4f5ef6254e59c033d09df2a4::c0a0a8aabfa9a91e2e13c11f48c6ac7dab8814bd::20b9e40ddca61656aa11de509f13de3ba0d9bafb::a116a0492d19b176d1c9e4bacc45e7c12f03a308::7921882c0e1b3fe69cf199dc47c1e5f46a6b5a5c::24c6ae9cbb6744a17795e215d9440eacbe9b1789::9e4d048141ae08765cc6565523a86fa9f0c8926e::416dda9c4e298c03cf5252719787fb1398b2dec6::867e79e2b9b5605f0608b5d7247a2b2bbfd660ae::cd452fb1544868630fb93c4ea5db3377cd806cd3::856df53782ef41c4a5a0bc26df7707886d0333fd::fad1dace8ac623ec89c50b29e525d314f17f84a6::fd59071851a2c9366a53188ee5357ed32dbfff6e::67622e5831485baed3c74236a14b7af08a6a4b55::1ab89407a392ff6ccb47a9980ea4e688010ee432::b7fe6dac3d3d47c0ad710cae3bdd870867e94dde::cd91e0b9a55f29845b7e66e0c9d00b945988d540::f9b55bd675882cbd0289b6518512046d21415441::7d7587c0167ac0707094e1fae11fa15134e3205f::b7c7d8cd79395ab33f78266b862107a923b4dae4::e2f97a8c59ae6255c9981e0a1c83c0bb69bd0dd8::7611b2bcb6dfbba79ea67a60b920ed203d450863::3f7755fa9b55d7504320d4b48e97c64360f88302::1606625adff762638910f16d01c88a6f45f9efa7::1d9f0f3508a4ee26929c0a529915f6372bfe2727::949922ecb7204fbe6c785194cecc91f8b32d8a39::4806a15b35690d198ed85f4526b2dc94d82c2a8a::14103aa24816c4f756addd01caef3d7041aa9c4f::4d30c4f045c04a9a87be0d77587bccf98261a653::ff83b9d1beeb592825fb1225ce20ece608b8acf7::382fff8e6af1312e8641f5694686532ee3671e43::08cdf0e3e029866dc8e6f019ce3890b89570dd0e::03328a3d1cf3aba89f7d11c3f0621358fcf15ae6::01638c0e8a7154a9f8aa69d272dbe16c699085ce::c31a6a237adca79f9a09f8b9d2e8091c4b7f0966::cd529b4ba84c680bcaa4143e5d05a1ae4ec07959::78d3ba2dec32ea2e40858c6e41bd4c9f70c7d449::a6fc8f3990b69898151538dca4d28a225ac71a00::c91677e91c6e93d8dc0c323db9675d146078e9ce::8e0eaa739d368e0467ef67bfd08dd0abe38aa481::9e38e69b4a27e9030a82a372fa3119d629a9dc88::4ba84744cc99f5e488b816a755c30ad1678d8b8a::034b950612a855ad8c82fe2a474a8d54df04ec26::b26e23f6bbda83c913527af3f5fe4b9df9b69adc::1a67122b6a4f4bb8c45cd38469dd70365a26331f::53fda7090610d3d6fbc6c64ce1058cc714d1d0ec::96824247bb52aa3ad513adf380cd68517460d5d8::1a54072c39c05f140ec378fb8f91d8227c59c46b::9a05c035a5f790f6b2cf8cbf228ddc5a78466889::c7d4b0b1d5356d2d58459ba1bec57e8407219038::8862990591572c6ea1847d43b5337d22945a58c7::ba232d59a5163f468fd4fb9c18e630521b9c9437::b099d5652a32795c524a6bcb95be31842973e58d::588f1d1b599b8b06b3e434d3856347b90c8587c8::118a20fb20b9054536a065ef16c862698e59a270::ff9ecae85dd2347b8c904c8afbd8f4595a9735dc::7ae8f6bb120ed5394ea1c870eacb1b6285cbdd88::4c4a2f567f39b51cf7fffbe3c45658db15f328bc::65a74e3ad5377cbd981067f6f2f2deb721fefc5c::2e0277d0f5515ff6450eeb2d3f6f6158f58ed907::df173c481d1a048177d9f40c05635ff5c82d53e2::199ad020e4626359b0192b3889c4b50f5a4b4a52::0066283216b3ef284d3392509684a38036ccf436::f9543048197650a2ddeef39ed1fa3f10646422b3::a87a43b0eacd53727d3b9b3b77f74eda4b44f9f5::74e0150bc74bd04bb36f7d84be3e9aa022ad17eb::f1cffd7c13da86ff2c2c13735b6a251d6b57d307::ca1edfee5208b9154ac3e2c99a41e75749d63d1c::58bb3df95f53283ef0416323c0ebbf92fa282b39::309ff279e195a3b2aec9d1e3c7d2daa6ad146e98::973823d3e1a51d09ec268362d7535f75763187fe::9087a1428fbb3ff896cc1bf16d056544d8dc9e88::a113eea8da603588714e0e765c477e68df5b8cc7::1b27fe3c960ecc14a88991c1527e13c55a5c22d3::0cac4f0603ece4ef5ab2a395470489d6ebb16cd3::bb9da70acb315726e889ebb42f1196507c42de36::2c0fa661d84a768b42bedddea474c8dde5a874ea::d030ecf8b3f44fa5a30ec47613a246520084cc00::58ed0264283d801b12db24783de1dfc6ab69e97e::4b65aa2488867637c3cf6522fc1d380ca80a9843::4ede466afe75edacea32383c68cabdbc6975a464::0de2bc30705afe6e7660cdbc28a66c4b5918316c::bc9058736141a0e0c5653d91cd43bd557d857f35::0b852ff26abe2f5eca1f0efc8e1362702e396da2::1908ddbb6439c3b9b5e00b7af0df684a82b9290d::a66308292a04d6e360c610a221e6f475ec055cce::a4a3be1f58916b8e674b34e5efc479a5885f775e::9f395fc9cf0d24b9e565b4bc3f510c8aae45d946::e905fdaa18ebc0552b033188e143912f6cd0919c::82ab866dc18bcad18f063e4f5bee7b9437520ffe::8fb8db6d22abb3f5684b300034246ebaa81ca8ab::4113684b787f8f9f464d1b29cfdddda2d715dde5::904514225074ab24a3719b383f8123fa9ef47ff1::f3d62b309a116223b7f038f3a85faef1810e1872::00310f64ce643c40ee4d64c95530d8890e770ae5::9334268e94a8cf52e1d6cb6e3ccb6242a26c0f9b::a262c6e910488a4e4395fb8f36c87d94c5b8770d::fe9f2a8ea174a435649e12f7549b3aa1ab9bb2e3::b3ee6d06ed1133959284f06396251ddb9260a902::f93446f3ab50bf42b64cc514426c7cdeebe9cf09::8e7d778c38761479ce2ba622ae7b41d53f92f3e4::4ddd6fa6c8f7a9c0ed07c7b30e720c506a4c4ff0::c8a95e235079df8582b66b95c0198d639cee6d21::b65bed648631007312c35d8b12dcda2c3479c44d::a9ed4b231875a458465ef34152a07c7daea1f19b::80619be6da052f3892d307d3fd9fc2f17ee69f8a::dc0c068bfadb83c94278e3069e3f44d37b26fa3e::5a1b96a5246b02157a7ed09e7c5453be4cc62b5b::a3c41613473f9eb173b47d3d8077ee9a099b8040::7de1cc0e83efaae56ad929326ccd36c9fbaae72f::fdd4e67261f9b74695e25263e918e8b85d618ea5::3c55b150f6c193e159e1f64b9f44117d9907cb96::5c99caf25cfe4c14d7489ebfcaaa245f7e79f50b::925b25e9ee65133449f827e1f928196a88f72518::aef7403c1225d19aa1d5060e734c49e1a094aa4f::5ca9552c1c403cdcc6c32c2a5ad19ad7b8994ada::b46c07ac18f7b96ddd9409f725338fc7f3078c8e::0933e14980b37294cd2ca8d3773d6e2ac03559b6::6608db34db08507a89ef4cd0f8e54d9c3e96674c::8ab8b6e29c4548580b565ed8105fffc469901ccf::14530dd55ea9b835a75e1e5bdf7c9d052b93a4f8::d31993ec55d0967e9cc3a7c11424f0356a017c4a::a6dd426c46057862973af878a0e490808b393cc3::cb42e836527c68fec34cb6264f6d884a4c555c99::f13088c7d7405539273f1619d7e1c51dffe61f70::387cdc7c55c8ec1c7db01d475aff4cb727ac8a81::64fcb92a558ce3c3205021027e3e7a75731ae346::467a22bdb6d81aad03a212d0afa26bb0e2ef5e17::5e4b590b589f5198cd9c758914fcf41c198c33e4::c72255921cf6f76ddfc89cdcffce27877a83728b::9e0dbb912e56797f9a5c713706d5819fb685e65e::c98e6ba7fff57e9f01a475508adec5141dcbf4ee::e5576c0ee90da597da306d4b369e1aacc6b85465::d2bd511f5368869bc531aaed36e99bae49e8e020::93da346e8da95e3e195de2155ff6f1e8bd1b2d4a::bd9e1cb9b1df70f87f3a8c6600a41f9f964c4ff6::e3cdf36e9a61b84a9becac4b5917ccda24af5aeb::9dd1e2f19fb4549094c7d81c37dff3968c8edd7f::10e3394535b48a436e6cbfff44ca72ba6495eb93::
https://api.github.com/repos/python/cpython,109794,fix-finalization-other-tstate::main,0,merged,,"Essentially, we should check the thread ID rather than the thread state pointer. <!-- gh-issue-number: gh-109793 --> * Issue: gh-109793 <!-- /gh-issue-number --> ::Could you use either `_Py_atomic_load_uint32` or `_Py_atomic_load_uint64` instead of defining your own. Since thread id is an `unsigned long`, you'll need to use a macro, but it seems better to use the pre-existing functions. ```C #if SIZEOF_LONG == 8 #define _Py_atomic_load_ulong _Py_atomic_load_uint64 #elif SIZEOF_LONG == 4 #define _Py_atomic_load_ulong _Py_atomic_load_uint32 #else #error ""long must be 4 or 8 bytes in size"" #endif ``` ::done::",Eric Snow,1152074,290,9,96,3,7,1,5e2224fb1f72e7133cd522d931f1dd34f7b7ba43::a1014a924ce126707d6b525eef5794a45eb19deb::d46103d487c7e7cac977ca4732b7f8e009d96439::2e13a75928057758f650ad22eaeb7d56ec728120::756cc3b16e71cdf10f42deff1aeb35164ddb2db2::ad312b989a7a51be03528f057e71ad4f96875d38::8feeb4c54d5b3318f758b38e0e7c1a5523c24ba1::9e589a789ab49e78d764a669c88906b10ece441d::9829315813b4593fd1b56a6df72cc26b742616f6::
https://api.github.com/repos/python/cpython,109790,fix-nt-os-path-isdir-signature::main,0,merged,,"To fix the `os.path.isdir` signature for Windows to be the same as genericpath version. ```py # in genericpath.py def isdir(s) -> bool: ... # in optimized nt module def isdir(path) -> bool: ... ``` <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-109782 --> * Issue: gh-109782 <!-- /gh-issue-number --> ::",Amin Alaee,19784933,248,3,15,13,3,1,13d10dfcb5800fdd676a8ddd47395578b765a2c0::2e995911d9d46af1b3fd31734a0311b645da96d5::9cc53cda6c593811fabd9e2f71f439b4068d782f::
https://api.github.com/repos/python/cpython,109789,enum-import-time::main,0,merged,type-feature::performance::stdlib::3.13::,"This reduces the import time of `enum` by over 50% on my machine (PGO-optimised, non-debug build on Windows), from around 0.007s to around 0.003s <!-- gh-issue-number: gh-109653 --> * Issue: gh-109653 <!-- /gh-issue-number --> ::",Alex Waygood,66076021,141,1,3,3,2,0,de366dc4cbb99eab8225535d25ca3bba50d92678::
https://api.github.com/repos/python/cpython,109784,backport-405b063-3.12::3.12,0,merged,,"This fixes issue GH-105829, https://github.com/python/cpython/issues/105829 (cherry picked from commit 405b06375a8a4cdb08ff53afade09a8b66ec23d5) <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> ::",,13905184,0,1,87,4,3,0,9cf695b63b6e6b91954b650658337d39bdf4bc45::
https://api.github.com/repos/python/cpython,109783,backport-405b063-3.11::3.11,0,merged,,"This fixes issue GH-105829, https://github.com/python/cpython/issues/105829 (cherry picked from commit 405b06375a8a4cdb08ff53afade09a8b66ec23d5) <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> ::",,13905184,0,1,87,4,3,0,8b162d5d37ce8a7f95793dac522152642fed9cb8::
https://api.github.com/repos/python/cpython,109781,backport-62c7015-3.11::3.11,0,merged,,"PyImport_GetImporter() now sets RuntimeError if it fails to get sys.path_hooks or sys.path_importer_cache or they are not list and dict correspondingly. Previously it could return NULL without setting error in obscure cases, crash or raise SystemError if these attributes have wrong type. (cherry picked from commit 62c7015e89cbdedb5218d4fedd45f971885f67a8) <!-- gh-issue-number: gh-109521 --> * Issue: gh-109521 <!-- /gh-issue-number --> ::",Serhiy Storchaka,3659035,401,1,18,2,2,0,10337d09d3f53999dea3e6743943941fbbe9105d::
https://api.github.com/repos/python/cpython,109780,gh-109370::main,0,merged,type-bug::skip news::needs backport to 3.12::,"Follow-up of gh-107219. * Only close the connection writer on Windows. * Also use existing constant _winapi.ERROR_OPERATION_ABORTED instead of WSA_OPERATION_ABORTED. <!-- gh-issue-number: gh-109370 --> * Issue: gh-109370 <!-- /gh-issue-number --> ::Why is it an issue on other platforms? See also PR gh-109810 which goes further in terminate_broken(), to try harder to close everything, and terminate the child processes.::Because of scenarios described in https://github.com/python/cpython/pull/109397#discussion_r1334943876. It is not possible to safely close a file descriptor in other thread without using some kind of locking, and it is difficult if possible without rewriting the way the GIL or all IO works even to use locking. It may be lesser issue on Windows (if handles are never reused, I do not know if it is so), but I am not sure that it is bug-free there. It may be simply that bugs are rarely manifested on Windows because most time the queue thread spends in `WaitForMultipleObjects()`.::> It is not possible to safely close a file descriptor in other thread without using some kind of locking It's maybe time to add ""some kind of locking"". There are two cases: * Thread B sets the file descriptor / handle to None, and then close FD / handle. No other thread was using it, no problem. Next, when thread A tries to use it, ""closed FD/handle"" exception is raised. * Thread B closes the FD/handle while thread A is using it. That's an important use case to be able to unblock multiprocessing when it goes into troubles with a sick worker progress, sick manager process, well, when things ""go wrong"". For me, the case that we should care about is terminate_broken() of concurrent.futures ProcessPoolExecutor and the associated BrokenProcessPool exception. When everything goes wrong, we should just cleanup resources: terminate processes, close queue, close file descriptors/handles, etc. I don't think that we can still expect worker processes to handle ""please stop"" commands from the main process. For example, PR #109810 is when the executor cannot even create new threads. In that case, multiprocessing and concurrent.futures cannot work properly, and it's time to exit as soon as possible.::> It's maybe time to add ""some kind of locking"". Actually, I do not think how is it possible, even with cooperation with GIL. It needs a support in the kernel to allow switching to other thread only when a system call waits. We can reduce the window for race condition, but it will always be possible with some small probability to close and replace file descriptor just before system call. > There are two cases: There are many other cases, depending on definition of ""use it"". If the file descriptor is closed or the attribute is set to None between the place where you can realistically check this and the place where it is used, you have an unsolvable problem. For now, I am worried about regression introduce by #107219 on non-Windows platforms. Since the original issue was Windows-only, I prefer to apply the solution (even if it may be non-perfect) on Windows where it fixes serious issue and not apply it other platforms where it seems unnecessary but causes visible regression.::",Serhiy Storchaka,3659035,401,1,3,3,2,1,3030774c40ca19bd946dead9780e1a2086a8579a::
https://api.github.com/repos/python/cpython,109778,backport-92af0cc-3.11::3.11,0,merged,docs::skip news::,"(cherry picked from commit 92af0cc580051fd1129c7a86af2cbadeb2aa36dc) <!-- gh-issue-number: gh-109634 --> * Issue: gh-109634 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--109778.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::```suggestion |                    |         | :samp:`\\U{XXXXXXXX}`    | ``` An extra backtick here::Is this missing the `\`? - it just renders as `{ooo}` in the preview docs. ```suggestion | :samp:`\{ooo}`         | Character with octal value      | (2,4) | ```::```suggestion covers the implications of using custom :samp:`sys.std{xxx}` objects. ```::Prod: ![image](https://github.com/python/cpython/assets/45884264/c05a7a5b-a148-464a-a570-85be08a2a220) Preview: ![image](https://github.com/python/cpython/assets/45884264/0e2f7424-961b-4bdf-bf72-0b7ca741939c)::It should be replaced with a space, not removed, to preserve the table formatting. ```suggestion |                    |         | :samp:`\\U{XXXXXXXX}`     | ```::No, it needs more backslashes, not less. ```suggestion | :samp:`\\\\{ooo}`       | Character with octal value      | (2,4) | ```::",Serhiy Storchaka,3659035,401,2,96,92,27,0,5d323f47bbf86f9ad5327380c1434b97d5124c17::63c33d2125b0084bdf384db7cff9384bce5c8557::
https://api.github.com/repos/python/cpython,109777,backport-62c7015-3.12::3.12,0,merged,,"PyImport_GetImporter() now sets RuntimeError if it fails to get sys.path_hooks or sys.path_importer_cache or they are not list and dict correspondingly. Previously it could return NULL without setting error in obscure cases, crash or raise SystemError if these attributes have wrong type. (cherry picked from commit 62c7015e89cbdedb5218d4fedd45f971885f67a8) Co-authored-by: Serhiy Storchaka <storchaka@gmail.com> <!-- gh-issue-number: gh-109521 --> * Issue: gh-109521 <!-- /gh-issue-number --> ::",Miss Islington (bot),31488909,73,1,26,5,2,0,04c479cc1a3d91f71afcf2b65d605a674fc96ee9::
https://api.github.com/repos/python/cpython,109776,backport-92af0cc-3.12::3.12,0,merged,docs::skip news::,(cherry picked from commit 92af0cc580051fd1129c7a86af2cbadeb2aa36dc) Co-authored-by: Serhiy Storchaka <storchaka@gmail.com> <!-- gh-issue-number: gh-109634 --> * Issue: gh-109634 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--109776.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::,Miss Islington (bot),31488909,73,1,99,95,30,0,fe887592e874d573ed0dcb6114d6a7072c83e614::
https://api.github.com/repos/python/cpython,109775,issue-109774::main,0,closed,tests::awaiting review::skip news::,<!-- gh-issue-number: gh-109774 --> * Issue: gh-109774 <!-- /gh-issue-number --> ::,Nikita Sobolev,4660275,4663,1,3,24,1,0,2a020371bbc01af0f09cf32e22321c23951c2a24::
https://api.github.com/repos/python/cpython,109773,backport-5e7ea95-3.12::3.12,0,merged,docs::skip news::,"Document the `os.fork` posix threads detected `DeprecationWarning` in 3.12 What's New, os, multiprocessing, and concurrent.futures docs. Many reviews and doc cleanup edits by Adam & Hugo. 🥳 (cherry picked from commit 5e7ea95d9d5c3b80a67ffbeebd76ce4fc327dd8e) Co-authored-by: Gregory P. Smith <greg@krypto.org> Co-authored-by: Adam Turner <9087854+AA-Turner@users.noreply.github.com> Co-authored-by: Hugo van Kemenade <hugovk@users.noreply.github.com> <!-- gh-issue-number: gh-100228 --> * Issue: gh-100228 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--109773.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::",Miss Islington (bot),31488909,73,2,60,4,4,1,951212b0e9457b9ea5459e4fa83b369847455bf7::e38d7104b8f245e5db6d487932c44edf0d2c4762::
https://api.github.com/repos/python/cpython,109772,backport-b10de68-3.11::3.11,0,merged,docs::skip news::,(cherry picked from commit b10de68c6ceae1076cdc98c890b9802dc81a7f44) Co-authored-by: Adam Turner <9087854+AA-Turner@users.noreply.github.com> <!-- gh-issue-number: gh-95913 --> * Issue: gh-95913 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--109772.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::,Miss Islington (bot),31488909,73,1,1,2,2,0,736e5cf62b463614731a5e65d82f010e097580e3::
https://api.github.com/repos/python/cpython,109771,backport-b10de68-3.12::3.12,0,merged,docs::skip news::,(cherry picked from commit b10de68c6ceae1076cdc98c890b9802dc81a7f44) Co-authored-by: Adam Turner <9087854+AA-Turner@users.noreply.github.com> <!-- gh-issue-number: gh-95913 --> * Issue: gh-95913 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--109771.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::,Miss Islington (bot),31488909,73,1,1,2,2,1,febcd5aa3b8308ee5f58e2fd068f4668ddf63a1f::
https://api.github.com/repos/python/cpython,109770,docs/whatsnew/release-highlights::main,0,merged,docs::skip news::,"* Categorise PEP 695 as a change to the syntax, rather than ""typing features"" * Categorise PEP 688 as a change to the datamodel (couldn't think of a better category!) * Highlight some library improvements * Note security improvements * Note C API improvements in the release summary * Note improvements to CPython's implementation * List the removal of top-level modules and the ``unittest`` aliases as major removals * Sort the PEP overviews by the order that they appear in the release summary * Write a brief narrative overview of Python 3.12 <!-- gh-issue-number: gh-109190 --> * Issue: gh-109190 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--109770.org.readthedocs.build/en/109770/whatsnew/3.12.html <!-- readthedocs-preview cpython-previews end --> ::I went through the changelog for security items, it seemed HACL* was worth noting. I'd welcome suggestions for any other security changes in 3.12 we should note. cc: @gpshead::cc @Yhg1s on the high-level overview of the release -- take this as a sketch; I don't know if you'd prefer to focus on other things or just write something completely different!::cc: @markshannon -- I thought it was worth noting the stack overflow change (#91079) given there've been a few comments about the change to the recursion limit & C stack, would welcome views. Also cc @mdboom @Fidget-Spinner @iritkatriel (unsure who else) -- are there any other implementation improvements e.g. from Faster CPython that we should draw out in the release summary?::Explaining the change here -- I've moved improved errors to a subsection of *New Features* & by moving all the PEPs to the top this drifted down to the bottom--I've no strong view on ordering, if anyone would want to move this.::This makes sense to mention, though it is worth pointing out that when linked against OpenSSL, which we do in our binary releases and most Linux distros do, the OpenSSL implementations of the algorithms are used first when available.::It succeeds! ```suggestion but instead gives a convenient overview. ```::How do we measure the size of releases? Features, PEPs, commits? I'd probably just leave out the size of the release.::It didn't feel small or big! The primary factor though was that the sentence felt empty otherwise ""Python 3.12 has a mix of changes to the language and the standard library."" Perhaps: ""Python 3.12 is the latest stable release of the Python programming language with a mix of changes to the language and the standard library.""? ```suggestion Python 3.12 is the latest stable release of the Python programming language with a mix of changes ```::Sounds good!::@iritkatriel -- should we note the 3.12 changes to the compiler/assembler/CFG (e.g. #87092) here under 'CPython implementation improvements'? ::",Adam Turner,9087854,89,14,254,167,1,0,783a4424f4aa80e1d8599456c98a2576ac36c416::9122fbaf4f70026c471166a482ee040bbe9df889::d7c1d331105ec600fbab7269645f73e4e00c3948::d965b56a7c8c8c27a9623f92f4bdeba4c8803fb3::2698b06ae717cf5365259f60ffbb0fcc6044c709::c7dc504e6a7439f91d8f9f5ec2175755a1541c1e::58e26962e090472d3dd45e1e42da2ee36d01e849::97b94d0f0fd38abeb962861fe3200ef6f462e664::d7004510f7e227d10ea1e299a9482c9718f26452::c1c76858676afc9ffe431bf0180e6c50af5a20ec::8685766f3a284c50520045f61e6460e15600ed1d::be5b9b6e3fb6256e1438fc2bc17d84f7b0258b29::1068379c118751f8b883cb6f6f2987709dbc8a9d::5fbe64125ce9f3dd3a6a021917abd24f0acb453f::
https://api.github.com/repos/python/cpython,109769,wn313::main,0,merged,docs::skip issue::skip news::,"The previous layout made it look like the other three deprecations are part of the first one, when in fact they are independent. The new layout is consistent with that used for sqlite3 in 3.12 (https://docs.python.org/3.13/whatsnew/3.12.html#deprecated). <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--109769.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::",Jelle Zijlstra,906600,635,1,6,4,1,0,eb9ca67ab4b502a60b0f69b8d12343532e20dc18::
https://api.github.com/repos/python/cpython,109768,docs/whatsnew/venv-setuptools::main,0,merged,docs::skip news::,* Per suggestion from @vstinner <!-- gh-issue-number: gh-109190 --> * Issue: gh-109190 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--109768.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::,Adam Turner,9087854,89,2,7,0,1,0,433b373877a6b61a099684ca8becfe78365cad53::7187a22a16e89a67a9ab014ff113b149aedf5abd::
https://api.github.com/repos/python/cpython,109767,docs/fork_threads_warning::main,0,merged,docs::skip news::,"Better document the os.fork warning to explain questions such as those raised in https://discuss.python.org/t/concerns-regarding-deprecation-of-fork-with-alive-threads/33555. <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--109767.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end --> <!-- gh-issue-number: gh-100228 --> * Issue: gh-100228 <!-- /gh-issue-number --> ::Please could we move this to the main section? xref #109766. A::```suggestion different start method. See the :func:`os.fork` documentation for further explanation. ```::```suggestion On POSIX systems, if your application has multiple threads and the :mod:`multiprocessing` context uses the ``""fork""`` start method: ```::```suggestion See the :func:`os.fork` documentation for further explanation. ```::Are we able to link to a more specific target for the SSL warning than the module itself? ```suggestion If you use TLS sockets in an application calling ``fork()``, see the warning in the :mod:`ssl` documentation. ```::```suggestion We chose to surface this as a warning, when detectable, to better inform developers of a design problem that the POSIX platform specifically notes as not supported. Even in code that *appears* to work, it has never been safe to mix threading with :func:`os.fork` on POSIX platforms. The CPython runtime itself has always made API calls that are not safe for use in the child process when threads existed in the parent (such as ``malloc`` and ``free``). Users of macOS or users of libc or malloc implementations other than those typically found in glibc to date are among those already more likely to experience deadlocks running such code. See `this discussion on fork being incompatible with threads <https://discuss.python.org/t/33555>`_ for technical details of why we're surfacing this long standing platform compatibility problem to developers. ```::good catch.  I wish I had a sidebar view in my `vim` config for ReST so I could see and outline and which section I was in. :)::```suggestion The :func:`os.fork` function called internally to spawn workers may raise a ```::Could be hyphenated, I prefer as one word. Style guides differ. ```suggestion for technical details of why we're surfacing this longstanding ```::I would copy the paragraph from the os.fork() docs here as well, to make it easier for people to find the reasoning behind this: ``` See `this discussion on fork being incompatible with threads <https://discuss.python.org/t/33555>`_ for technical details of why we're surfacing this longstanding platform compatibility problem to developers. ``` ::Thanks, I included that (edited) over in the 3.12 backport https://github.com/python/cpython/pull/109773. I'll make the same edit in `main` after that is merged.::",Gregory P. Smith,68491,234,9,58,4,4,0,c2c36c05b29ef2082e9b624877b176c1eb6ef7c8::d38b05649c29626c7ffd7e3812f943791b2da37b::d594072949468b6ddd572fe44af3762ce7647983::c8f7a73a50f5c9995beab3518933b14b805a0559::227c883c050efb1cb697b17b6b4e1d3670caf339::49fa6360b32b9fc4badfb2b20d3790de7d3616d5::126ed5ed8c5b4ce44e807b1d067333fc97ea8e25::f47b99c8dce17201167b480e86ccd4885e4cfa1c::5960e72c8a8264b9382e35791bc3b67635244e27::
https://api.github.com/repos/python/cpython,109766,docs/whatsnew/deprecations::main,0,merged,docs::skip news::,"Sorry in advance for the large PR. The main change here is ensuring that every deprecated API is listed under the ""*Deprecated*"" section. Previously, some deprecations were only listed under ""*Deprecated*"", some were listed under the ""*Pending Removal in Python 3.14*"" subheading, and some were listed under both. This was a confusing state of affairs, and unhelpful to readers. From this PR, the ""*Pending Removal in Python 3.14*"" section becomes a short list of APIs pending removal, reflecting the layout of the similar ""*3.13*"" and ""*Future Versions*"" sections. A <!-- gh-issue-number: gh-109190 --> * Issue: gh-109190 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--109766.org.readthedocs.build/en/109766/whatsnew/3.12.html#deprecated <!-- readthedocs-preview cpython-previews end -->::``asyncio`` had two deprecations noted in ""Improved Modules"", these have been moved::Copied from *Pending Removal*::Copied from *Pending Removal*::(1) and (2) copied from *Improved Modules*, (3) copied from *Pending Removal*. Note that I've deleted the entry for ``asyncio.Future.cancel`` & ``asyncio.Task.cancel`` as it was reverted in #97999::Copied from *Pending Removal*:: Copied from *Pending Removal* ::Copied from *Pending Removal*::Rephrased from *Pending Removal*::Copied from *Pending Removal* (& prepended with ""In Python 3.14,"")::Rephrased from *Pending Removal*::Copied from *Pending Removal*::Typo: as -> and::Copied from *Pending Removal*::Added explicit titles to avoid the text saying ``throw()``, ``throw()``, and ``athrow()``::Rephrased from *Pending Removal*::style -- this is both the conversion and inversion, so don't say ""with""::Rephrased from *Pending Removal*::Adapted from the *Pending Removal in Python 3.13* summary::",Adam Turner,9087854,89,4,153,92,1,0,6eee1176ff698983625e1c09676bcecdbb940d96::2118b1c52d1b80eb954507352766042e5f231440::d9f209c1cf50a1d0eaa859c01aee02f1e6af7ccf::d8de59a94be7bb1ae0d2515c58e14665ebacfe33::
https://api.github.com/repos/python/cpython,109763,backport-b03a791-3.11::3.11,0,merged,skip news::,"Don't check order, queue items can be written in any order. (cherry picked from commit b03a791497ff4b3c42805e06c73d08ac34087402) Co-authored-by: Victor Stinner <vstinner@python.org> <!-- gh-issue-number: gh-109706 --> * Issue: gh-109706 <!-- /gh-issue-number --> ::",Miss Islington (bot),31488909,73,1,3,1,1,0,9b81414f826a7d819e22fd409990d8a719c914de::
https://api.github.com/repos/python/cpython,109762,backport-b03a791-3.12::3.12,0,merged,skip news::,"Don't check order, queue items can be written in any order. (cherry picked from commit b03a791497ff4b3c42805e06c73d08ac34087402) Co-authored-by: Victor Stinner <vstinner@python.org> <!-- gh-issue-number: gh-109706 --> * Issue: gh-109706 <!-- /gh-issue-number --> ::",Miss Islington (bot),31488909,73,1,3,1,1,0,a83132f8999f4d86a49e94c179919e388f64b342::
https://api.github.com/repos/python/cpython,109760,docs/whatsnew/trivia::main,0,merged,docs::skip news::,"* Delete the pre-releases note * Add the (intented) release date * Note myself as editor, as suggested by @hugovk <!-- gh-issue-number: gh-109190 --> * Issue: gh-109190 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--109760.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::",Adam Turner,9087854,89,4,4,7,1,0,f5c73286700b9103341cb80bdad9fd8bc5f49163::fc1c5bb25ea0838f14bb07d225ccaa25f75c3050::b44f3cf147e7869f02cd143773b446efcec3be43::12489eaf08f8e0c5a8e28cf7329cf3dbc929af35::
https://api.github.com/repos/python/cpython,109759,3.11-name-donghee-na-docs::3.11,0,merged,skip issue::skip news::,"<!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--109759.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::",Hugo van Kemenade,1324225,628,3,130,130,38,0,ac6c7bcf94b7aff31d7e736c60cc9be1c4169163::782a967a31f0c55a99025c085b6cbb9c650e6888::5558a06e5b2dc93f9c989ed6405afd9cfa18a40d::
https://api.github.com/repos/python/cpython,109758,3.12-name-donghee-na-docs::3.12,0,merged,skip issue::skip news::,"<!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--109758.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::",Hugo van Kemenade,1324225,628,3,142,142,42,1,9551bff825a85362d6d306104e68f0765540fbd6::d1b9fa4b1b562a419994c35490339d0ce8f0e59a::cdb8520d70c973ceec8e4551439aade20e594822::
https://api.github.com/repos/python/cpython,109756,docs/whatsnew/use-file::main,0,merged,docs::skip news::,"* Use semantic markup for files where appropriate <!-- gh-issue-number: gh-109190 --> * Issue: gh-109190 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--109756.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::Let's avoid re-wrapping text. It's okay for revisions to extend beyond the line limit, and it makes it much easier to review.::My error -- I assumed that the sphinx-lint's line-limit check was enabled without verifying this, and I preemptively wrapped to avoid the lint failure!::De-re-wrap: ```suggestion * Removed the ``suspicious`` rule from the documentation :file:`Makefile`, and removed ``Doc/tools/rstlint.py``, both in favor of `sphinx-lint ```::```suggestion objects that have been interned. This is now needed for :file:`refleak.py` to correctly track reference counts and allocated blocks ```::",Adam Turner,9087854,89,4,11,11,1,0,eea069f1f2df73d3a5c493f8195ace4386ab483f::145c8cc7dfd327d15e5edc2dab4996761e289d9f::8c17bc5d167d062cf503b904413904c3b2185605::3980e2693dfb183ad144ca83a83acbef77f6efd3::
https://api.github.com/repos/python/cpython,109755,docs/whatsnew/imp-porting::main,0,merged,docs::skip news::,"* This merges three bullets into one, and rewords the lead to make it clear that this is a guide to porting rather than an internal change to Python. <!-- gh-issue-number: gh-109190 --> * Issue: gh-109190 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--109755.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::",Adam Turner,9087854,89,1,3,2,1,0,675f5fa53ec66a361aaec73bb13fa24a9f2dddb5::
https://api.github.com/repos/python/cpython,109754,docs/whatsnew/present-tense::main,0,merged,docs::skip news::,* Use the present tense when describing changes <!-- gh-issue-number: gh-109190 --> * Issue: gh-109190 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--109754.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::Note that this change to using ``:file:`` is included to avoid merge conflicts due to potential out-of-order merges::,Adam Turner,9087854,89,2,30,30,1,0,1d0572f625e848c5968f41b7ffb8f30f35e8ff98::ee2f4519955ad8014ac0fb0f30c492172a7837a2::
https://api.github.com/repos/python/cpython,109753,docs/whatsnew/bpo::main,0,merged,docs::skip news::,<!-- gh-issue-number: gh-109190 --> * Issue: gh-109190 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--109753.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::,Adam Turner,9087854,89,1,4,4,1,0,aacec569c0c0a73487b01dd40a1ab6c44c95e4e5::
https://api.github.com/repos/python/cpython,109752,backport-b28ffaa-3.12::3.12,0,merged,,"(cherry picked from commit b28ffaa193efc66f46ab90d383279174a11a11d7) <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-109596 --> * Issue: gh-109596 <!-- /gh-issue-number --> ::",Pablo Galindo Salgado,11718525,847,1,1203,1219,7,0,123c724e46088b9093bb61ba122b0041e6bcded3::
https://api.github.com/repos/python/cpython,109751,docs/whatsnew/c-api::main,0,merged,docs::skip news::,"* Per @vstinner's [note](https://github.com/python/cpython/issues/109190#issuecomment-1731675152), move deprecations of ``ma_version_tag`` and immutable types / mutable bases to the C-API section * Introduce Pending Removal in Python 3.14 / Python 3.15 / Future Versions sections * Copy the list of deprecations from 3.13 What's New to these sections (with minor copyediting) <!-- gh-issue-number: gh-109190 --> * Issue: gh-109190 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--109751.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::Note this entry was duplicated; I've only kept one of them::```suggestion * :c:func:`PySlice_GetIndicesEx`: use :c:func:`PySlice_Unpack` and :c:func:`PySlice_AdjustIndices` ```::```suggestion * :c:func:`PyOS_AfterFork`: use :c:func:`PyOS_AfterFork_Child` ```::```suggestion * :c:func:`!PyUnicode_AsDecodedObject`: use c:func:`PyCodec_Decode` ```::```suggestion * :c:func:`!PyUnicode_AsDecodedUnicode`: use c:func:`PyCodec_Decode` ```::```suggestion * :c:func:`!PyUnicode_AsEncodedObject`: use c:func:`PyCodec_Encode` ```::```suggestion * :c:func:`!PyUnicode_AsEncodedUnicode`: use c:func:`PyCodec_Encode` ```::I am not sure about this. It is an internal convenient function, and it can be removed or changed in incompatible way without warning.::We're recommending a private replacement to a private function here, so I *think* it's fine. This isn't saying that readers should use the functions, just what the replacements for the deprecated versions are.::Fix sphinx-lint: ``` Doc/whatsnew/3.12.rst:2207: role missing opening tag colon ( c:func:`). (missing-space-before-role) ``` ```suggestion * :c:func:`!PyUnicode_AsDecodedObject`: use :c:func:`PyCodec_Decode` * :c:func:`!PyUnicode_AsDecodedUnicode`: use :c:func:`PyCodec_Decode` * :c:func:`!PyUnicode_AsEncodedObject`: use :c:func:`PyCodec_Encode` * :c:func:`!PyUnicode_AsEncodedUnicode`: use :c:func:`PyCodec_Encode` ```::",Adam Turner,9087854,89,9,96,13,1,0,02824ae90e9637c28749f094d7f3003bc9c59653::f9a6a95c35a107315996a84cb44161c845dbc476::5d875539f619551d8a9c6f061f3b380528305cae::1653e42d57c784adea95504e09663ea5326bdae1::ac8849c7e06c0721daffe5bf624459c7a4c3f537::4502df21d019f1913b223cb61209eafef9339f46::a9241e2e1644d4378d4ef2fd24ff0ba4f69f6ca1::7312d08ebeb2b0d9af3d45925680dfe26f08f2e9::242093774a916ee27d8c733d6e309ef25e04777b::
https://api.github.com/repos/python/cpython,109750,docs/whatsnew/3.11-release-date::main,0,merged,docs::skip news::,Also remove a newline between the date and the changelog note in 3.9 whatsnew. A <!-- gh-issue-number: gh-95913 --> * Issue: gh-95913 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--109750.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::,Adam Turner,9087854,89,1,1,2,2,0,c28e9c8d7521758faf6509bfadf166503af2760c::
https://api.github.com/repos/python/cpython,109749,backport-7c55399-3.12::3.12,0,merged,type-crash::,(cherry picked from commit 7c553991724d8d537f8444db73f016008753d77a) Co-authored-by: Irit Katriel <1055913+iritkatriel@users.noreply.github.com> <!-- gh-issue-number: gh-109719 --> * Issue: gh-109719 <!-- /gh-issue-number --> ::,Miss Islington (bot),31488909,73,1,17,0,3,1,0005e65bf8eeb42be77f2241c5f7001d5a754e96::
https://api.github.com/repos/python/cpython,109745,random_docstrings::main,0,merged,docs::skip issue::skip news::needs backport to 3.11::,"Add the expected mean and variance to the docstrings.  It helps with understanding the parameters which is important because conventions vary.  Also, it would save someone like me from having to look these up periodically.::Should we note that this is the mean, for users that might be unfamilliar with the expectation operator? ```suggestion (mean): E[X] = (a + b) / 2 ```::",Raymond Hettinger,1623689,3560,7,34,5,1,1,b66783bb031a66c2ba6ed1ba9f828a015ede616d::d30c2153c62adc2459d7610d894691445b341c7b::0aecb973838ad5c037843508ccaf140a1de317c8::c17d2eb466680405018e4cd1d8420ca53bfdd4e5::75d96b1cecaa00cc73cf26a8bf07f8ad2e7a658d::6703fad3b66f1e6e997c021566ce90471333bdb4::a99a800c9186e1dffbd71ee14c0e782229c39da1::
https://api.github.com/repos/python/cpython,109744,name-donghee-na-code::main,0,merged,skip issue::skip news::,"<!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> Opened separately from the docs changes in https://github.com/python/cpython/pull/109743, because we can't backport non-docs things to 3.12 until after 3.12.0 is out on 2023-10-02. ::It's copied from libexpat. https://github.com/libexpat/libexpat I am not sure that updating legal name for expat is proper :(::https://github.com/libexpat/libexpat/pull/754 I sent the PR to the upstream too :) Let's wait ::I'm positive that (1) we'll have a version of https://github.com/libexpat/libexpat/pull/754 merged upstream shortly and that (2) there will be a release >=2.5.1 this year bringing these changes to CPython ""for free"" just by upgrading the bundled copy of libexpat.::Sounds good, I'll revert the changes to `Modules/expat/` here, and we can wait for the upstream changes to filter through.::",Hugo van Kemenade,1324225,628,2,4,4,4,1,2ee941c03dbd16e54d97d9c3d93b20265a547674::476cefbafc75cd4447b13059dea948e20e4fdec2::
https://api.github.com/repos/python/cpython,109743,name-donghee-na-docs::main,0,merged,skip issue::,"<!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--109743.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::",Hugo van Kemenade,1324225,628,3,149,149,49,1,75e955cdb5fcb6bddd28b146af0860cf5c6b3c55::65cde180e0a2a6182b18091ba1d5a554b7cc375e::3514340be4126b8e0c588f36e0d7b0abcbb2cad4::
https://api.github.com/repos/python/cpython,109742,backport-3e8fcb7-3.11::3.11,0,merged,skip issue::skip news::,(cherry picked from commit 3e8fcb7df74248530c4280915c77e69811f69c3f) Co-authored-by: Adam Turner <9087854+AA-Turner@users.noreply.github.com>::,Miss Islington (bot),31488909,73,1,3,2,1,0,6a5cca68f12657da72c40cbdd94507043f2d69e6::
https://api.github.com/repos/python/cpython,109741,backport-3e8fcb7-3.12::3.12,0,merged,skip issue::skip news::,(cherry picked from commit 3e8fcb7df74248530c4280915c77e69811f69c3f) Co-authored-by: Adam Turner <9087854+AA-Turner@users.noreply.github.com>::,Miss Islington (bot),31488909,73,1,3,3,1,0,2f6939b3f6586e3e2f0ed79dfc09e9ae03374cee::
https://api.github.com/repos/python/cpython,109738,recipe_double_docstring::main,0,closed,docs::skip issue::awaiting review::skip news::,<!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--109738.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::,Raymond Hettinger,1623689,3560,1,0,1,1,0,90174f9db0ebe9147400fdb0379826d0d27b78de::
https://api.github.com/repos/python/cpython,109737,docs/ostricher-oren::main,0,merged,docs::skip issue::skip news::,"cc: @itamaro Following on from #109661, hope you don't mind me opening the PR! A::Andrey was removed here but not re-added::That's because Andrey is already present at the correct alphabetically-ordered spot in the list. This is just removing a duplicate.::He's already present in the right order: https://github.com/python/cpython/blob/c32abf1f21c4bd32abcefe4d601611b152568961/Misc/ACKS#L465 xref: * GH-18639 * GH-22277::I DEMAND HIM TO BE PRESENT TWICE okay, okay, j/k j/k::",Adam Turner,9087854,89,3,3,3,1,0,21cb483dd685d997ed5d02af53e0b97ba9bac042::5207565d888c729c923ac19624e7ced9df046de3::29b253e15a44a665be70e9c9c78620f00716c438::
https://api.github.com/repos/python/cpython,109735,test_stdin_broken_pipe311::3.11,0,merged,skip news::,"Replace harcoded sleep of 500 ms with synchronization using a pipe. Fix also Process._feed_stdin(): catch also BrokenPipeError on stdin.write(input), not only on stdin.drain(). (cherry picked from commit cbbdf2c1440c804adcfc32ea0470865b3b3b8eb2) <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-109709 --> * Issue: gh-109709 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,1,49,15,2,0,1bcc1a325d84fcf4c91bfb58a97d76b55f203a47::
https://api.github.com/repos/python/cpython,109734,gh-109719::main,0,merged,release-blocker::type-crash::,Fixes #109719. <!-- gh-issue-number: gh-109719 --> * Issue: gh-109719 <!-- /gh-issue-number --> ::Duplicate NEWS?::,Irit Katriel,1055913,162,6,17,0,3,0,0251780a12c39f9026962ff21b6845b335766b9d::f9eb3016085e7d5b12e3d35f25caffec4b55fb7f::8aad689a55bfbfc1e86eb4afd1d20a34e06a23e1::9cb6a3daa3b8d19748687410f617d6dff2f1525a::6a5e675c3f20a1521e9b515d20915bbafcca52dd::62d79d8e5b849b9b8de69f80d268abaed3abb92b::
https://api.github.com/repos/python/cpython,109733,backport-c32abf1-3.12::3.12,0,merged,docs::skip news::,(cherry picked from commit c32abf1f21c4bd32abcefe4d601611b152568961) Co-authored-by: Adam Turner <9087854+AA-Turner@users.noreply.github.com> Co-authored-by: Łukasz Langa <lukasz@langa.pl> Co-authored-by: Itamar Oren <itamarost@gmail.com> Co-authored-by: Hugo van Kemenade <hugovk@users.noreply.github.com> <!-- gh-issue-number: gh-109190 --> * Issue: gh-109190 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--109733.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::,Miss Islington (bot),31488909,73,1,4,4,1,0,1cba83347b2557dee5bed7c0c9905a85b2ca9abc::
https://api.github.com/repos/python/cpython,109732,backport-168c3a8-3.12::3.12,0,merged,docs::skip news::,(cherry picked from commit 168c3a8a893fcb42f8a4d078a1e9a6bd7ad65253) Co-authored-by: Adam Turner <9087854+AA-Turner@users.noreply.github.com> Co-authored-by: Łukasz Langa <lukasz@langa.pl> Co-authored-by: Hugo van Kemenade <hugovk@users.noreply.github.com> <!-- gh-issue-number: gh-109190 --> * Issue: gh-109190 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--109732.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::,Miss Islington (bot),31488909,73,1,5,3,1,0,922682988156b92a7c83d6fd8f0ef69515dcdf10::
https://api.github.com/repos/python/cpython,109731,backport-cbbdf2c-3.12::3.12,0,merged,skip news::,"Replace harcoded sleep of 500 ms with synchronization using a pipe. Fix also Process._feed_stdin(): catch also BrokenPipeError on stdin.write(input), not only on stdin.drain(). (cherry picked from commit cbbdf2c1440c804adcfc32ea0470865b3b3b8eb2) Co-authored-by: Victor Stinner <vstinner@python.org> <!-- gh-issue-number: gh-109709 --> * Issue: gh-109709 <!-- /gh-issue-number --> ::",Miss Islington (bot),31488909,73,1,50,16,2,0,8aa841d332ac66d2759418c47d3283fc01b6efb9::
https://api.github.com/repos/python/cpython,109730,backport-cade596-3.12::3.12,0,merged,docs::skip news::,(cherry picked from commit cade5960ae5949899bccbec3af72b0287d0f6749) Co-authored-by: Adam Turner <9087854+AA-Turner@users.noreply.github.com> <!-- gh-issue-number: gh-109190 --> * Issue: gh-109190 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--109730.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::,Miss Islington (bot),31488909,73,1,8,8,1,0,ab89afffdbbdfe12be4da0d0ae070968b39c31d8::
https://api.github.com/repos/python/cpython,109729,backport-e94a223-3.12::3.12,0,merged,docs::skip news::,(cherry picked from commit e94a2232eac07eb526ec93ef01699513cf9b0fa3) Co-authored-by: Adam Turner <9087854+AA-Turner@users.noreply.github.com> <!-- gh-issue-number: gh-109190 --> * Issue: gh-109190 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--109729.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::,Miss Islington (bot),31488909,73,1,4,4,1,0,e5972a4ae350bce2a0dfd94456462acbf288b6fb::
https://api.github.com/repos/python/cpython,109728,backport-d9415f6-3.12::3.12,0,merged,docs::skip news::,(cherry picked from commit d9415f6a45c2c4163b593713ef765cb2a60f8aa7) Co-authored-by: Adam Turner <9087854+AA-Turner@users.noreply.github.com> bytecode: suppress reference to removed LOAD_METHOD <!-- gh-issue-number: gh-109190 --> * Issue: gh-109190 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--109728.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::,Miss Islington (bot),31488909,73,1,2,2,1,0,7066c60cf370c2398fa3aad9ba7fa9f8c0edefe1::
https://api.github.com/repos/python/cpython,109727,testcapi_disable_core::main,0,merged,skip news::,"Make sure that the internal C API is not tested by mistake by _testcapi. Undefine Py_BUILD_CORE_BUILTIN and Py_BUILD_CORE_MODULE macros in Modules/_testcapi/parts.h: move code from _testcapimodule.c. heaptype_relative.c and vectorcall_limited.c are using the limited C API which is incompatible with the internal C API. Move test_long_numbits() from _testcapi to _testinternalcapi since it uses the internal C API ""pycore_long.h"". Fix Modules/_testcapi/pyatomic.c: don't include Python.h directly, just include _testcapi/parts.h. <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-109723 --> * Issue: gh-109723 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,2,114,101,8,0,225f0763a44ec50977429f15599bedfceee5976b::ee89db44e773000d876997433fd6ee3e7112565e::
https://api.github.com/repos/python/cpython,109726,gh-109555-followup::main,0,merged,docs::skip issue::skip news::,This was left in gh-109555. <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--109726.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::,Łukasz Langa,55281,1995,1,0,1,1,0,62ba1d7f081417eb965ae230d1eaa0006a5f59d5::
https://api.github.com/repos/python/cpython,109725,backport-8fc0713-3.12::3.12,0,merged,,(cherry picked from commit 8fc071345b50dd3de61ebeeaa287ccef21d061b2) Co-authored-by: EliseevEgor <egor.eliseev@jetbrains.com> Co-authored-by: sunmy2019 <59365878+sunmy2019@users.noreply.github.com> Co-authored-by: Nikita Sobolev <mail@sobolevn.me> <!-- gh-issue-number: gh-106584 --> * Issue: gh-106584 <!-- /gh-issue-number --> ::,Miss Islington (bot),31488909,73,1,18,12,5,0,95fcc0d7802ee65e3c887830b1a5349891670bdb::
https://api.github.com/repos/python/cpython,109724,backport-4dd47c6-3.11::3.11,0,merged,skip news::,(cherry picked from commit 4dd47c63a97b3c39cd964ad12431fcdaf76dc823) <!-- gh-issue-number: gh-108303 --> * Issue: gh-108303 <!-- /gh-issue-number --> ::,Nikita Sobolev,4660275,4663,2,8,8,4,0,b248118ade37ab13bc9b3af72a2b997bbac175ac::64e29bf87b420523d4aabd9b74852d68e75b035f::
https://api.github.com/repos/python/cpython,109722,issue-109721::main,0,merged,skip news::,"Why? 1. `test_cmd_line.py` only imports it without a guard in `check_pythonmalloc`, which is only used in `test_pythonmalloc`, so marking it as `@cpython_only` is good enoug 2. `test_import/__init__.py` already has several guards like `requires_singlephase_init` which implies `@cpython_only`, so only a `except ImportError` is needed 3. `test_opcache` can be skipped without `_testinternalcapi`, because most (all?) tests are cpython-only and require it <!-- gh-issue-number: gh-109721 --> * Issue: gh-109721 <!-- /gh-issue-number --> ::",Nikita Sobolev,4660275,4663,2,11,3,3,0,b38ffeadd644a405116a652f6afbab585f6dae5f::c00a68bd037ac43d016a32e421c3cc66694e2e7f::
https://api.github.com/repos/python/cpython,109718,backport-115c49a-3.11::3.11,0,merged,skip news::,(cherry picked from commit 115c49ad5a5ccfb628fef3ae06a566f7a0197f97) <!-- gh-issue-number: gh-109625 --> * Issue: gh-109625 <!-- /gh-issue-number --> ::,Nikita Sobolev,4660275,4663,1,35,34,3,0,752e96fbeffbf72611f2cd57ad10dfcd070066ed::
https://api.github.com/repos/python/cpython,109716,backport-34ddcc3-3.12::3.12,0,merged,docs::skip news::,"(cherry picked from commit 34ddcc3fa118168901fa0d3a69b3b5444fc2f943) <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-109190 --> * Issue: gh-109190 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--109716.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::",Hugo van Kemenade,1324225,628,1,2,1,1,1,55c1056f6381fdb7b82696d768d8a0f9bdb27520::
https://api.github.com/repos/python/cpython,109715,backport-d3fe1a9-3.12::3.12,0,merged,docs::skip news::,(cherry picked from commit d3fe1a902fd060cc9fb41b768cc1e3ca5b52244d) Co-authored-by: Adam Turner <9087854+AA-Turner@users.noreply.github.com> <!-- gh-issue-number: gh-109190 --> * Issue: gh-109190 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--109715.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::,Miss Islington (bot),31488909,73,1,2,2,1,1,f01b916ae8e6cf1a2fc5eac8be0de39b3541b9c6::
https://api.github.com/repos/python/cpython,109713,backport-2914013-3.12::3.12,0,merged,docs::skip news::,Consistently show module names (cherry picked from commit 291401389bf76981688d82a0d7bb61fb8355ff14) Co-authored-by: Adam Turner <9087854+AA-Turner@users.noreply.github.com> <!-- gh-issue-number: gh-109190 --> * Issue: gh-109190 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--109713.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::,Miss Islington (bot),31488909,73,2,19,19,1,1,bb7cc6af1bac83d660a5a16a4be5a98da371e8b6::d45156d22bc1560bb0ab4bf9e7ac3447aac0de6b::
https://api.github.com/repos/python/cpython,109711,Shafiq9494-patch-1::main,0,closed,docs::awaiting review::skip news::,Aaa #109709::,Fuyos94,145241895,0,1,1,241,1,0,6281a9033608a6be528b468da5e9b59215a1cf4e::
https://api.github.com/repos/python/cpython,109710,test_stdin_broken_pipe::main,0,merged,tests::topic-asyncio::skip news::,"Replace harcoded sleep of 500 ms with synchronization using a pipe. <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-109709 --> * Issue: gh-109709 <!-- /gh-issue-number --> ::On Windows, passing pipes as stdin, stdout and stderr is well supported. Passing an additional pipe is not supported by msvcrt (CreateProcess). Passing a handle is possible, but it requires to convert FD to handle and then handle to FD.::Ok, if I understand correctly this change is here because write() could raise BrokenPipeError when registering a writer. Is this expected behavior? _UnixWritePipeTransport.write() tries hard not to raise if the os.write() call fails. Could it be that this was not noticed on Linux because the error is raised only by the kqueue selector?::Could the process be synchronized in a way that requires less boilerplate for Windows? Is just calling terminate() not enough?::Sorry, I didn't keep the traceback. I got a BrokenPipeError on **FreeBSD**, yeah, it was somewhere in the kqueue selector. You can revert my change, and stress-test the test as I described in the issue / PR, to easily trigger the bug. > Could it be that this was not noticed on Linux because the error is raised only by the kqueue selector? Maybe on Windows and Linux, write() cannot trigger these exceptions, but write() does on FreeBSD.::I like using a pipe as a sync primitive, but I'm unhappy by the quantity of code needed for that :-( In practice, what is needed is that the child process hangs until the parent decides to terminate it in a clean fashion.::Simple snippet to trigger the exception: ```python import os, selectors sel = selectors.DefaultSelector() rfd, wfd = os.pipe() os.close(rfd) sel.register(wfd, selectors.EVENT_WRITE) ``` Tested on modern releases of Linux, macOS, FreeBSD, and I only see it raise on FreeBSD. See discussion here for some details: https://github.com/tokio-rs/mio/issues/582 (older versions of macOS used to fail in the same case, and NetBSD/OpenBSD report different errors). I think this should be considered a bug. _UnixWritePipeTransport.write() should not be expected to raise, otherwise exception handling code would have to be sprinkled all over user code. In the linked issues (both Tokio and libevent) it's solved at an abstraction level similar to the selectors module in Python. If we agree it could be considered a bug, it's either a selectors bug, or an asyncio bug.::wait, registering a closed FD is bad: don't do that. It wasn't the issue that I got (I hope).::> I think this should be considered a bug. _UnixWritePipeTransport.write() should not be expected to raise, otherwise exception handling code would have to be sprinkled all over user code. If you think that there is a bug, please open a new issue.::It's not a closed FD! Only the other end of the pipe is closed. The write fd is still valid. On Linux/Mac you will always get an event, so you get the error when you try to write. On other BSDs you get the error preemptively, when registering.::Sorry i was confused between rfd and wfd.::I opened a new issue here https://github.com/python/cpython/issues/109757. I'd be glad to work on it.::",Victor Stinner,194129,1148,2,50,16,2,1,24b415d929a834286fd17adaa307ef4263c45415::441861cc320ccc64de112d982335af8207222d4e::
https://api.github.com/repos/python/cpython,109708,backport-1eb1b45-3.11::3.11,0,merged,tests::skip news::,Replace SHORT_TIMEOUT with LONG_TIMEOUT in test_deadlock of test_concurrent_futures. (cherry picked from commit 1eb1b45183c3b8aeefe3d5d27694155741e82bbc) Co-authored-by: Victor Stinner <vstinner@python.org> <!-- gh-issue-number: gh-109702 --> * Issue: gh-109702 <!-- /gh-issue-number --> ::,Miss Islington (bot),31488909,73,1,1,1,1,0,d6c31c5cbb759b97a61eeade837d2d41d9253437::
https://api.github.com/repos/python/cpython,109707,test_nested_startmethod::main,0,merged,tests::skip news::,"Don't check order, queue items can be written in any order. <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-109706 --> * Issue: gh-109706 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,1,3,1,1,0,06aa63b03fd3e906736bb80aa10cf737b79b8862::
https://api.github.com/repos/python/cpython,109705,backport-1eb1b45-3.12::3.12,0,merged,tests::skip news::,Replace SHORT_TIMEOUT with LONG_TIMEOUT in test_deadlock of test_concurrent_futures. (cherry picked from commit 1eb1b45183c3b8aeefe3d5d27694155741e82bbc) Co-authored-by: Victor Stinner <vstinner@python.org> <!-- gh-issue-number: gh-109702 --> * Issue: gh-109702 <!-- /gh-issue-number --> ::,Miss Islington (bot),31488909,73,1,1,1,1,0,c0280d1221c0397e93b0eedc64c34695604900cc::
https://api.github.com/repos/python/cpython,109704,test_concurrent_package311::3.11,0,merged,skip news::,"<!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-108388 --> * Issue: gh-108388 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,2,1577,1677,14,0,b3574d8b7b69e7cf33f9a2c6985f9608240b18be::0b7d75022b2c9343f1460567b6fb0cbdbd861e17::
https://api.github.com/repos/python/cpython,109703,deadlock_timeout::main,0,merged,tests::skip news::,"Replace SHORT_TIMEOUT with LONG_TIMEOUT in test_deadlock of test_concurrent_futures. <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-109702 --> * Issue: gh-109702 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,1,1,1,1,0,064aeae1ae15607484f28364a29edeed9fffa402::
https://api.github.com/repos/python/cpython,109701,regrtest_fail_rerun::main,0,merged,skip news::,"<!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-109566 --> * Issue: gh-109566 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,1,1,1,1,0,5d1c46f286018c6747fa49004d034fc3586e7780::
https://api.github.com/repos/python/cpython,109699,test_tarfile_modes_311::3.11,0,merged,tests::skip news::,"On FreeBSD, regular users cannot set the sticky bit. Skip the test if chmod() fails with EFTYPE error. (cherry picked from commit 26e06ad617bb416201c769fea91cd33d544c6a1c) <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-108948 --> * Issue: gh-108948 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,1,16,3,1,0,9c52c653c3c2091f8638c974675a41a5b7170599::
https://api.github.com/repos/python/cpython,109698,test_tarfile_modes_312::3.12,0,merged,skip news::,"On FreeBSD, regular users cannot set the sticky bit. Skip the test if chmod() fails with EFTYPE error. (cherry picked from commit 26e06ad617bb416201c769fea91cd33d544c6a1c) <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-108948 --> * Issue: gh-108948 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,1,16,3,1,0,71a615dcdb3bc2fa2d64a015dfe0e47ef6225672::
https://api.github.com/repos/python/cpython,109697,test_tarfile_modes::main,0,merged,tests::skip news::,"On FreeBSD, regular users cannot set the sticky bit. Skip the test if chmod() fails with EFTYPE error. <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-108948 --> * Issue: gh-108948 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,1,21,8,1,1,7c568a42a7871d4b7c9120d8101a5829100dd280::
https://api.github.com/repos/python/cpython,109696,unique::main,0,merged,docs::skip news::,"The ""Which Docstrings Are Examined"" part of Doctest documentation is ambiguos, This change explained it cleary with an example. <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--109696.org.readthedocs.build/en/109696/library/doctest.html#which-docstrings-are-examined <!-- readthedocs-preview cpython-previews end --> <!-- gh-issue-number: gh-109510 --> * Issue: gh-109510 <!-- /gh-issue-number --> ::```suggestion An example is to place this block of code at the top of :file:`example.py`. ```::```suggestion tests. If ``M.__test__`` exists and is True, it must be a dict, and each ``` Would this fit better? Going off of other documentation for reference.::```suggestion important to note that the value can also be mapped to a function, class object, or module. If the value is a function, class, or module, doctest searches them recursively for docstrings, which are then scanned for tests. ```::```suggestion class object or module. If the value is a class, Function or module, :mod:`doctest` ``` Do we link?::```suggestion In addition, there are cases when you want tests to be part of a module but not part of the help text, which requires that the tests should not be placed in the docstring. Doctest looks for a module-level variable called ``__test__`` and uses it to locate other tests. If ``M.__test__`` exists and is ``True``, it must be a dict, and each ```::`pycon` means ""Python console"" and will apply appropriate syntax highlighting: ```suggestion .. code-block:: pycon ```::```suggestion The value of ``example.__test__[""numbers""]`` will be treated as a docstring and all the tests inside it will be run. It is important to note that the value can be mapped to a function, class object, or module. If the value is a function, class, or module, :mod:`doctest` searches them recursively for docstrings, which are then scanned for tests. ```::thanks::```suggestion of the help text, which requires that the tests not be included in the docstring. ``` Fix grammar/semantics::```suggestion For example, place this block of code at the top of :file:`example.py`: ``` * Fix phrasing * Use appropriate punctuation to introduce example::```suggestion ``M.__test__`` appears with name :samp:`{name of M}.__test__.K`. ``` Avoid mistyped `::` sytanx and use the appropriate role instead of a separate, Python-highlighted block.::`pycon` lexes this incorrectly, since the example inputs and outputs are actually in a multi-line string, but are displayed as literal Python console lines, while the surrounding Python code is displayed as Python output, greatly confusing me at first. Furthermore, when clicking the button to remove the prompts, the string content is kept while the surrounding code is removed. Changing this to `python` _should_ fix this (haven't tested this particular edge case, though). ```suggestion .. code-block:: python ```::```suggestion class object, or module; if so, :mod:`!doctest` ``` * Avoid repeating these twice and make it easier for the reader to connect the two pieces of information without having to laboriously check if the two sets are identical. * This is the current module that the reader is already on, so silence the link (per our general agreed convention).::Good question. We use the appropriate role to get the appropriate formatting, but add `!` to not resolve the link, since it is to the current module docs that the reader is already on, which isn't particularly helpful.::One last thing I'm a little confused on reading this—how is `name of M` different from just `M`, the placeholder for the name of the module? Shouldn't this just be _M_, just like everywhere else? Same as `K` is the placeholder for the key name? Is there something I'm missing here, or should this in fact read: ```suggestion ``M.__test__`` appears with name ``M.__test__.K``. ``` (Unless we want to do `` :samp:`{M}.__test__.{K}` ``, which is more semantically correct and perhaps a bit tad clearer for readers, but probably not enough to be worth the extra syntax everywhere?)::Let's not say ""is ``True``"" and ""must be a dict"", it can't be both: ```pycon >>> __test__ = { ...     'numbers': """""" ... >>> factorial(6) ... 720 ... ... >>> [factorial(n) for n in range(6)] ... [1, 1, 2, 6, 24, 120] ... """""" ... } >>> __test__ is True False ``` The original was ""is true"" (in quotes) to imply it has a truthy value, rather than literally being `True`. Can we reword it?::Actually, we could just use the word truthy, we've used it elsewhere. ```suggestion tests. If ``M.__test__`` exists and is truthy, it must be a dict, and each ```::I tend to say ""evaluates true"" but truthy is concise, and used other places (I believe js uses the term liberally)::@Unique-Usman Please use either `is truthy` or `evaluates true` instead of `""is true""`.::",,86585626,12,15,24,3,1,0,df550a1d16bafc1f43c23f93973a0a4433bc3c14::ae033f3503ac0e8333348f55fc1b486a5ff68165::24483b8af1d653ad83670cb24f480bab011ce83c::3dd6b79716566f3ab07dc79fc672098ddf5bd042::50d1bb4d7cc402705f78f08288c284f34c33c116::b0fa4fd032b89124f609cc5418af78e01a385bc9::92da9230656f28415e3b7da77f86b0c03d2dbfe8::f59961c9bf00f7f0cfc0d15d692f56659a23e37b::b45acd9bd88ab544be61c8ce1c88d87f3f16b617::d67276dcd6a1860e90654eadf427c00714b9b108::23d3b50497c4b78bd5de8f61697bd6fb4424b0ba::0cbac0fb925279137d5c7cd86952974e66422793::6857842d35a2f06ad930c9b824c1d8d6548bca7d::728717ede1aaca1a6ba6f9bc71d85e5641a69f4d::cbb1434739edd0a9f4c8fa41b59a20ab76c1703b::
https://api.github.com/repos/python/cpython,109695,backport-608c1f3-3.12::3.12,0,merged,tests::skip news::,"Sometimes the child_handled event was missing because either the child quits before it gets a chance to handle the signal, or the parent asserts before the event notification is delivered via IPC.  Synchronize explicitly to avoid this. (cherry picked from commit 608c1f3083ea1e06d383ef1a9878a9758903de4b) Co-authored-by: Davide Rizzo <sorcio@gmail.com> <!-- gh-issue-number: gh-109582 --> * Issue: gh-109582 <!-- /gh-issue-number --> ::",Miss Islington (bot),31488909,73,1,11,2,1,0,f89b35975d6f75af6d25e8da1a0d6cea1b3d806d::
https://api.github.com/repos/python/cpython,109694,pycore_atomic_funcs_delete::main,0,merged,skip news::,Use functions from `pyatomic.h` instead. <!-- gh-issue-number: gh-109693 --> * Issue: gh-109693 <!-- /gh-issue-number --> ::,Sam Gross,655866,1625,1,3,116,6,0,0b45f71cc1112557cfe390e0c0e8c7278310acef::
https://api.github.com/repos/python/cpython,109691,testcapi_vectorcall_limited::main,0,merged,skip news::,"<!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-104469 --> * Issue: gh-104469 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,2,47,5,2,0,8004d7933a30688fc01c11383efd884a502e86c2::9c2841b7509a94f6a3c5d4471b8e6623ad4701a4::
https://api.github.com/repos/python/cpython,109690,limited_core::main,0,merged,skip news::,"<!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-104469 --> * Issue: gh-104469 <!-- /gh-issue-number --> ::""define"" (instead of ""defines"")::oops, fixed!::",Victor Stinner,194129,1148,1,11,2,2,0,3dcbb4615eed5969aa9e72678d62d4e826b21a42::
https://api.github.com/repos/python/cpython,109689,backport-e47d12e-3.12::3.12,0,merged,docs::skip news::,(cherry picked from commit e47d12e222507b1873a81f6955fdd3cfb8293b65) Co-authored-by: Adam Turner <9087854+AA-Turner@users.noreply.github.com> <!-- gh-issue-number: gh-109190 --> * Issue: gh-109190 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--109689.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::,Miss Islington (bot),31488909,73,1,17,15,1,1,2a2115f425b8843f4673eef60e529c1e1537feb9::
https://api.github.com/repos/python/cpython,109688,backport-aa9a359-3.11::3.11,0,merged,,"Split test_multiprocessing_fork, test_multiprocessing_forkserver and test_multiprocessing_spawn into test packages. Each package is made of 4 sub-tests: processes, threads, manager and misc. It allows running more tests in parallel and so reduce the total test duration. (cherry picked from commit aa9a359ca2663195b0f04eef46109c28c4ff74d3) Co-authored-by: Victor Stinner <vstinner@python.org> <!-- gh-issue-number: gh-108388 --> * Issue: gh-108388 <!-- /gh-issue-number --> ::",Miss Islington (bot),31488909,73,1,117,27,19,0,9ae765081b0125f7ff338db1b7a85645a22c8a8d::
https://api.github.com/repos/python/cpython,109687,backport-16c2402-3.12::3.12,0,merged,docs::skip news::,(cherry picked from commit 16c24023c1f69f66d1e3313033be275a43329030) Co-authored-by: Adam Turner <9087854+AA-Turner@users.noreply.github.com> <!-- gh-issue-number: gh-109190 --> * Issue: gh-109190 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--109687.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::,Miss Islington (bot),31488909,73,1,5,6,1,1,44042baa6d2dd52c6f77f707531057d0fe18b280::
https://api.github.com/repos/python/cpython,109686,test_fractions::main,0,merged,tests::skip news::,"<!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-108303 --> * Issue: gh-108303 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,1,1,1,1,0,39f8c6225f057e1a2c8b60343292fe4d102b2b89::
https://api.github.com/repos/python/cpython,109685,test_float_format_testfile311::3.11,0,merged,tests::skip news::,"(cherry picked from commit beb5ec5817b645562ebbdd59f25683a93061c32c) <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-109546 --> * Issue: gh-109546 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,1,7,2,1,0,6f0c59948101aff81917f3b84c77c071b0392f30::
https://api.github.com/repos/python/cpython,109684,backport-1163678-3.12::3.12,0,merged,docs::skip news::,(cherry picked from commit 11636788da9e5e64ceef2ac80df330e8170a8d08) Co-authored-by: Adam Turner <9087854+AA-Turner@users.noreply.github.com> <!-- gh-issue-number: gh-109190 --> * Issue: gh-109190 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--109684.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::,Miss Islington (bot),31488909,73,1,6,4,1,1,1f5c3b0ea27abdeca7978e22cec1a4af484b9ec5::
https://api.github.com/repos/python/cpython,109683,backport-e57ecf6-3.11::3.11,0,closed,awaiting review::skip news::,(cherry picked from commit e57ecf6bbc59f999d27b125ea51b042c24a07bd9) Co-authored-by: Nikita Sobolev <mail@sobolevn.me> <!-- gh-issue-number: gh-108303 --> * Issue: gh-108303 <!-- /gh-issue-number --> ::,Miss Islington (bot),31488909,73,1,31,28,41,0,7e992615903f11d23f07e18695bbe3b40b3ce0e4::
https://api.github.com/repos/python/cpython,109682,backport-e57ecf6-3.12::3.12,0,merged,skip news::,(cherry picked from commit e57ecf6bbc59f999d27b125ea51b042c24a07bd9) Co-authored-by: Nikita Sobolev <mail@sobolevn.me> <!-- gh-issue-number: gh-108303 --> * Issue: gh-108303 <!-- /gh-issue-number --> ::,Miss Islington (bot),31488909,73,6,32,29,42,0,613a540c5c8fec4cb979be3849fdc17c319fe780::4b2abeebd1afee7ac530ec3dc9a62a110df7d3a6::e591ab46d162edba6f51176b8ceabb0b291c4ab7::721b213566a54ffb86d90ecf6dc6bc09893d6059::840110ef0657c1a95172b8ba20edf5989e6f1625::758a58882e95d15f5aa07427a90d8a80dedc85b2::
https://api.github.com/repos/python/cpython,109681,backport-22b70ca-3.12::3.12,0,merged,docs::skip news::,(cherry picked from commit 22b70ca480f5a2d19d3123cd35ab968fa65f224d) Co-authored-by: Adam Turner <9087854+AA-Turner@users.noreply.github.com> <!-- gh-issue-number: gh-109190 --> * Issue: gh-109190 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--109681.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::,Miss Islington (bot),31488909,73,1,5,7,1,1,ee7be5df067e1de45117d556946499ee0c2e1a08::
https://api.github.com/repos/python/cpython,109680,test_future311::3.11,0,merged,skip news::,"(cherry picked from commit 82505dc351b2f7e37aa395218709b432d83292cd) <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-108303 --> * Issue: gh-108303 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,1,37,19,18,0,ed5cb83f7527e1b8ef584cf4dee3da0224ee14e4::
https://api.github.com/repos/python/cpython,109679,test_future312::3.12,0,merged,skip news::,"(cherry picked from commit 82505dc351b2f7e37aa395218709b432d83292cd) <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-108303 --> * Issue: gh-108303 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,1,37,19,18,0,ad072be6c8029cfb900f77748b9586f32f88da97::
https://api.github.com/repos/python/cpython,109678,tokenizedata311::3.11,0,merged,skip news::,"<!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-108303 --> * Issue: gh-108303 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,2,40,24,18,0,905a5eeffcc438c316e75e5adcfb284444965c45::df28ede899d14c073262b004d3d7f10fd2932517::
https://api.github.com/repos/python/cpython,109677,tokenizedata312::3.12,0,merged,skip news::,"<!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-108303 --> * Issue: gh-108303 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,2,41,25,19,0,b8e290821fae28caa382e322557462d6a56f6d10::2bf3cc8e145b03376007b7f42bea108135b89a80::
https://api.github.com/repos/python/cpython,109675,test_dataclasses311::3.11,0,merged,skip news::,"Move test_dataclasses.py and its ""dataclass_*.py"" modules into the new Lib/test/test_dataclasses/ subdirectory. (cherry picked from commit 14d6e197cc56e5256d501839a4e66e3864ab15f0) <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-108303 --> * Issue: gh-108303 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,1,7,6,8,0,77cb5e86148bdac685128922660f2dbf0c9aca03::
https://api.github.com/repos/python/cpython,109674,backport-14d6e19-3.12::3.12,0,merged,skip news::,"Move test_dataclasses.py and its ""dataclass_*.py"" modules into the new Lib/test/test_dataclasses/ subdirectory. (cherry picked from commit 14d6e197cc56e5256d501839a4e66e3864ab15f0) Co-authored-by: Victor Stinner <vstinner@python.org> <!-- gh-issue-number: gh-108303 --> * Issue: gh-108303 <!-- /gh-issue-number --> ::",Miss Islington (bot),31488909,73,2,7,6,8,1,16afb366cd993bd356ebbedb099ab36d94a40781::6ac9e9bb934ceed48a2418641bc527df3d3f727e::
https://api.github.com/repos/python/cpython,109673,issue-108303-311::3.11,0,merged,skip news::,"(cherry picked from commit 3f61cf646d0506baa0c0c2118f05110446519c62) <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-108303 --> * Issue: gh-108303 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,1,13,9,13,0,7ca3fc6914eae4a77146cb48d2acb0515f84cd7c::
https://api.github.com/repos/python/cpython,109672,backport-3f61cf6-3.12::3.12,0,merged,skip news::,(cherry picked from commit 3f61cf646d0506baa0c0c2118f05110446519c62) Co-authored-by: Nikita Sobolev <mail@sobolevn.me> <!-- gh-issue-number: gh-108303 --> * Issue: gh-108303 <!-- /gh-issue-number --> ::,Miss Islington (bot),31488909,73,1,13,8,13,1,86a4f676d582e4b990a37a546aaefc09786d0c52::
https://api.github.com/repos/python/cpython,109671,backport-d2879f2-3.12::3.12,0,merged,skip news::,"In Python 2.7, the file was used by Lib/test/test_sgmllib.py to test Lib/sgmllib.py. The sgmllib module and its tests have been removed in Python 3.0. (cherry picked from commit d2879f2095abd5c8186c7f69c964a341c2053572) Co-authored-by: Victor Stinner <vstinner@python.org> <!-- gh-issue-number: gh-108303 --> * Issue: gh-108303 <!-- /gh-issue-number --> ::",Miss Islington (bot),31488909,73,1,0,212,1,1,af09b12caa93e922744d71d9c24fe76ece371ddb::
https://api.github.com/repos/python/cpython,109670,backport-d2879f2-3.11::3.11,0,merged,skip news::,"In Python 2.7, the file was used by Lib/test/test_sgmllib.py to test Lib/sgmllib.py. The sgmllib module and its tests have been removed in Python 3.0. (cherry picked from commit d2879f2095abd5c8186c7f69c964a341c2053572) Co-authored-by: Victor Stinner <vstinner@python.org> <!-- gh-issue-number: gh-108303 --> * Issue: gh-108303 <!-- /gh-issue-number --> ::",Miss Islington (bot),31488909,73,1,0,212,1,0,0da5046e67a9d0c8d12e19353d684e6e5eb14696::
https://api.github.com/repos/python/cpython,109668,fromstructstat311::3.11,0,merged,,"Fix os.stat() and os.DirEntry.stat(): check for exceptions. Previously, on Python built in debug mode, these functions could trigger a fatal Python error (and abort the process) when a function succeeded with an exception set. _pystat_fromstructstat() now exits immediately if an exception is raised, rather only checking for exceptions at the end. It fix following fatal error in fill_time(): Fatal Python error: _Py_CheckSlotResult: Slot * of type int succeeded with an exception set (cherry picked from commit d4cea794a7b9b745817d2bd982d35412aef04710) <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-109613 --> * Issue: gh-109613 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,1,71,46,2,0,d1bb70c898e8cdb44454f657137657a19ef99959::
https://api.github.com/repos/python/cpython,109667,gh-109595::main,0,merged,type-feature::docs::3.13::,"<!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-109595 --> * Issue: gh-109595 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--109667.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::Can you integrate this text in the doc above, and here just mention that the function takes -X cpu_count in account? ```suggestion if :samp:`-X cpu_count={n}` is given, :func:`cpu_count` will return the overrided value *n*. ```::> will override the number of cpu count from system Honestly, that's vague. Just describe what it does: ```suggestion * ``-X cpu_count=<n>`` overrides :func:`os.cpu_count`. ```::```suggestion This option will be useful for users who need to limit CPU resources of a container system. ``` Please document that *n* must be at least 1.::```suggestion The ``-X cpu_count`` option. ```::Maybe we should start adding version to this complex structure: ```suggestion // Python 3.13 int cpu_count; ```::Why not just testing that you get ``b""4321\n""``? Is it useful to parse the string? I hate assert_python_ok() API which doesn't let using text=True parameter.::```suggestion Add :samp:`-Xcpu_count={n}` command line option for limiting system CPU resources from ``` Hum, maybe just say that it overrides os.cpu_count()?::```suggestion const PyConfig *config = _Py_GetConfig(); ```::it's already set by config_init_defaults(), no ned to repeat the default here.::```suggestion return _PyStatus_ERR(""-X cpu_count=n option: n is missing or an invalid number""); ```::```suggestion * :samp:`-X cpu_count={n}` will override the number of CPU count from system. ```::If you prefer to write ""number"" instead of ""n"", please update the whole PR for that. ```suggestion -X cpu_count=n: limit CPU count of os.cpu_count().\n\ ``` Why is it a ""limit""? Your unit test shows that it can be BIGGER than the real number of logical CPUs of the system! Maybe just say ""override""?::```suggestion This helps for users who need to limit CPU resources of a container system."" ```::Search for ""int_max_str_digits"", you should also modify: * config_check_consistency() * _PyConfig_AsDict() * _PyConfig_FromDict() You should update test_embed, and maybe set cpu_count in test_init_from_config() of Programs/_testembed.c. See also my notes: https://pythondev.readthedocs.io/pyconfig.html::```suggestion return _PyStatus_OK(); error: ```::Can you please set a more interesting value like 1234?::```suggestion * :samp:`-X cpu_count={n}` overrides the number of CPU count from system: :func:`os.cpu_count` returns *n*. The value *n* must be greater than or equal to 1. ```::```suggestion This option is useful for users who need to limit CPU resources of a container system. ```::```suggestion Add :samp:`-Xcpu_count={n}` command line option to override CPU count of :func:`os.cpu_count`. This option is useful for users who need to limit CPU resources of a container system. Patch by Donghee Na. ```::Oh, that's interesting that the value cannot be zero :-)::You can move the variable declaration inside the ""if (sep)"" block. Does it *have* to be initialized? If you are afraid of undefined behavior, maybe config_wstr_to_int() should set ``*result`` to 0 on error.::```suggestion return _PyStatus_ERR(""-X cpu_count=n option: n is missing or an invalid number, ""); ""n must be greater than 0""); ```::Now I added `PYTHONCPUCOUNT` envvar, so the current structure will be needed.::```suggestion *n* must be greater than or equal to 1. ``` I prefer >= 1, it's more human friendly :-)::```suggestion environment variable :envvar:`PYTHONCPUCOUNT` and the new command-line option ```::That's a lot of CPUs, it's exciting! Until *recently*, Linux was limited to 4096 CPUs! https://unix.stackexchange.com/questions/4507/how-many-cores-can-linux-kernel-handle::```suggestion } int ncpu = 0; ```::If you want, you *can* move the variable declaration inside each ""if (env)"" block and duplicate the variable, to better show its scope. But well, that's just a personal preference. Feel free to ignore my coding style remark ;-)::```suggestion } const wchar_t *xoption = config_get_xoption(config, L""cpu_count""); ```::Would it not be better to document the feature instead of the version? Using simple Git tricks, it is very easy to find out which Python version a field was added in; I don't see the value in duplicating Git log in the source code :)::All PyConfig must be documented at: https://docs.python.org/dev/c-api/init_config.html See my notes on adding a new member to PyConfig: https://pythondev.readthedocs.io/pyconfig.html::> All PyConfig must be documented at: https://docs.python.org/dev/c-api/init_config.html Yes, so IMO: - remove the superfluous `// Python 3.13` comment from initconfig.h - add an entry accompanied with a `.. versionadded` to [Doc/c-api/init_config.rst](https://github.com/python/cpython/blob/main/Doc/c-api/init_config.rst)::Sure, in the doc, versionadded must be used, obviously. > remove the superfluous // Python 3.13 comment from initconfig.h I think that it would nice to *also* document the version in PyConfig structure, in addition to the init_config.rst doc. But I will not insist :-)::Will a `// Python 3.13` comment make sense on its own? IMO: no. How would a random contributor interpret it? :) How will you or I interpret it in five years time? Isn't it better to leave the version control to the version control system? :)::... so you can count me -1 on sprinkling the source code with `// Python x.y` comments :)::Ok, let's remove the ""// Python 3.13"" comment.::This syntax emits a warning in Doc. Use ``*cpu_count*`` or ``:c:member:`~PyConfig.cpu_count` ``.::```suggestion the return value of :func:`os.cpu_count` and :func:`os.process_cpu_count` into *cpu_count*. ```::```suggestion Default: ``-1``. ```::Please document ``default`` value.::```suggestion If *n* is ``default``, it follows default :func:`os.cpu_count` even if :envvar:`PYTHONCPUCOUNT` ```::```suggestion :func:`os.cpu_count` and and :func:`os.process_cpu_count` result. ```::```suggestion See also the :opt:`-X cpu_count <-X>` command-line option. ```::Document it *after* the item below which documents the addition of process_cpu_count().::```suggestion CPU resources of a container system. (Contributed by Donghee Na in :gh:`109595`) ```::Honestly, you can merged this test with test_cpu_count(): test the two functions at once: ``` code = ""import os; print(os.cpu_count(), os.process_cpu_count())"" ```::You should set the env var to a value.::I would prefer to expose PyConfig.cpu_count value using a private function, rather than having two functions parsing env var / cmdline option. Otherwise, the two implementations may become inconsistent later. Also, PyConfig can be modified with the PyConfig API, not only using env var / cmdline. I'm even working on configuration file-like API: https://github.com/python/cpython/pull/110145::```suggestion the return value of :func:`os.cpu_count` and :func:`os.process_cpu_count` functions into *cpu_count*. ```::I suggest: ```suggestion If *n* is ``default``, :func:`os.cpu_count` and  :func:`os.process_cpu_count` are not overridden. ```::In init_config, you used ""result"". I would prefer consistency, either ""result"" in both docs, or ""return value"" in both docs. ```suggestion :func:`os.cpu_count` and and :func:`os.process_cpu_count` return value. ```::```suggestion CPU resources of a container system without having to modify the container (application code). ```::nitpick: you can use res2int = self.res2int, to keep the tests unchanged.::and process_cpu_count(). You may document ""default"" as well.::What about raising an error, rather than silently ignoring invalid value? For consistency, you should accept default.::This function will return ""process"" for the process mode with the separate PR.::Which will be, but will be done with a separate PR. ```python if _exists('sched_getaffinity') and _get_cpu_count_config() != 'overridden': def process_cpu_count(): """""" Get the number of CPUs of the current process. Return the number of logical CPUs usable by the calling thread of the current process. Return None if indeterminable. """""" return len(sched_getaffinity(0)) if _get_cpu_count_config() == ""process"": cpu_count = process_cpu_count ```::This means it is only possible to override cpu_count on posix?::This doesn't belong in posixmodule, it is not platform specific.  `Python/sysmodule.c` perhaps? and rather than an internal API returning two magic strings, how about an internal API that just returns the overridden value. Code calling it should only use it if it returns an int > 0, anything <= 0 means invalid/default/not-overridden. That way os_cpu_count_impl below could just call the c impl function from sysmodule directly rather than having a copy of similar code.::> and rather than an internal API returning two magic strings, how about an internal API that just returns the overridden value. Code calling it should only use it if it returns an int > 0, anything <= 0 means invalid/default/not-overridden. Well, Victor and I worry about someone get the CPU count from the `_get_cpu_count_config()`... I want to prevent the API from being used for root of data :(::FYI, -2 will be the process mode.::Reasonable!::I am worrying about this kinds of code, we never expect but somebody can do. ```python cpu_count = sys._get_cpu_count_config() if sys._get_cpu_count_config() > 0 else os.process_cpu_count() ```::They could also `import posix` and do that from this location. I'm not worried about anyone using an `_` prefixed private undocumented api to shoot themselves in the foot. Bikeshedding could come up with other more or less tempting names, but I don't think it matters too much. If it starts with `_` and we keep it undocumented, it isn't for public consumption.  `_get_overridden_cpu_count()` `_get_eaten_by_a_grue()` `_get_do_not_press_this_button_press_count()` ... we've got plenty of other _ functions in this category in modules already.::@gpshead I wrote the comment about the need of magic string in https://github.com/python/cpython/pull/109667#discussion_r1343351179 PTAL::>  I'm not worried about anyone using an _ prefixed private undocumented api to shoot themselves in the foot. > we've got plenty of other _ functions in this category in modules already. Okay!::Agreement with https://github.com/python/cpython/pull/109667#discussion_r1343372035::",Donghee Na,5110323,401,71,192,11,15,0,41be17016ef71d39725a088f4561232c323e0e7b::f7a7428efd387c9fae0cdd08c6538250afb276e4::7009bbe8d16f7c3be79d05e884a7a5e4699b1132::d1f91d8a336c679660a8d20f601d0c7338149093::8c92ed6a40908ca69691b7e2fbbefa89d1796e77::c27bdfca61f5d8f495adf9fba06bc54792c8f82c::b13e5ee3b8547edefe28c0766a5323915d7ea46e::45fce16d31118a8f5706b6d416911b2b0e611e50::49a48e4645f7a89ca8abde26fef71c188b183e09::829a8e87fbc2d27735315a1b7f7faddb8057ba32::cfb33a44773f02a4b9474982aef7c2a9ae32274b::95a2173e9a3d8acfc1d1156267ad0dc8c65c60fb::0394d1d75b9f1437eae1c82dcc31b06e40c850f0::f4a3f01393a5d8f4a4b7aa9043a53adf554fb7da::60a28fe70d336a9192dcf95982941d80b0b7c765::7e5595c202d4a9fb2e16471e32c2a9fa5d52d65e::86780126a72ab6b8fa5cea2f7a1d30172fecf81c::cbc5484e3b402d6bd020120bd6c6cdd6db38d1a1::4622b60f1d1978b48d04dae13cae46e53e6346b1::50f0178849f1fecb4f313514c0bee979d5898e74::5c3ac68b288e249cabe5a182f18309ff3ce3037a::a276bfd96855538f03746b12bcffc3526508183d::9c582be6a1ccf74a1e5d1fc82415c3afcc407276::35b952f993c783315ba7c7b2d2e728d4517846ba::f04ea58a135cb7a49d9b87d93d1eedb9985805c9::7ecf7056fdef3d62950ac6ff81bd8765f8ccdd00::18dcd44db21ebb46ce4e061c7eb9a5e7cd622b7c::b344f4f8dd0082986120ab85520e7b9bc751ec91::8069d216b3ab32f017c7e391d02c6ec4b0eb2fb9::c70bc82241c00bdb147f29e14db5f7df655ac934::c8abc2983d62c844d27d5b98844ed5f9da78e8a2::2ac6901e4351a837180d928b96e460bd53aafe3c::f0a3ebfe2c4e9f89c393260443b489533eb01067::89d8bb203e8a0e8172db6cc3d82afdc7f1341c1a::66c617f2591646dcf5b25b1121307cfc801d7ad5::4a72ed4396c88963508c707bf21a555f919f281c::0426e3e84c793cd076d36c94a1aec3932b37f147::ac5329be407a81487452a48daca5884eb268c4e9::e50e678957ab4ae62bfb74ea78ce680805eb9462::24fe0e4ff8f146bc5b099842e55fb19762461eae::32843edd696f715b53616f3dfc6ae444bac6d63c::a954f1c6c3e7b1d48c4afb92d15ee7ba186ec463::3ab2bc4f457cc562cda87a410139339a9ecafdb6::7231697892fa48997e91fc9702a456cabad19829::b18da0dd42e0aaecee5506d345c2e3e5544432d9::3579fc4e501054ba24bcf00fd9b9677436eaa45a::134ed9eea8fc89d888b9ae27a04ccad8ff5f8864::2bec7f41cec494209f9a09f2becf7f532f15e8e6::9f7cb5ed12b7f0f7caea24bbc36ed6ed28a31867::1217ab518adc50989a299803f4925d743f831c2a::64da2f9557e9e3f6fff936ace4a6697b60ac3582::64c732960da3527a3d51effc9116d5bf7df3cd26::cc54afbdfe578fe218c25eb9ea4a78dbaaddae3a::ba421c77f14d97a92efebac48602e4e987aa6000::5f20bf6868c6088d835888eb26a7cca69cbd6864::c11789b01a60aee3b523199d41994d55a132207b::936c182f1fb6cc99079a6f00b3d33c901d51155c::2f0dc1cefad8138df37620daece40397b547df70::a7b2c883678489fd9cfcae03ca318dc8ab7aa0db::551c76d2db08c127da07d4e575af2f70df6c851e::75021be4560c950ec30dcfe7e9799eb2b0ac3c04::57dd53bb131491fda8171d90423e04d009cde2aa::3f9da50d130de208107ae7a62dab4f8b31dc88b8::57e82c57d3d896040a01d28a97223a80ac6aeb68::c37c8d0ce8c5b1ebaf5da353fdc7d940652c7339::c7726e5f57ba2cc596ffd6f064f2ac50fec62ab1::de8bf53f5e2820ea855409265b22c9d61048b4e8::633914be017ca1fad816662572e20063f99855b6::37fbdfe123db097c6d47fe8f2c1719c65e048893::a0cfb2171e8611e00119811b16831a930305e284::8daa3b7886725ba0abc2fb31debe3b705406e302::
https://api.github.com/repos/python/cpython,109665,docs/whatsnew/bytecode-LOAD_METHOD::main,0,merged,docs::skip news::,"- Suppress an incorrect cross reference to ``LOAD_METHOD``. This opcode was removed in #93429, but #94216 introduced new pseudo instructions reusing the name. I believe that this cross reference is consequently currently wrong. <!-- gh-issue-number: gh-109190 --> * Issue: gh-109190 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--109665.org.readthedocs.build/en/109665/whatsnew/3.12.html#cpython-bytecode-changes <!-- readthedocs-preview cpython-previews end -->::Sorry, my rST is rusty. What does `!` do?::https://www.sphinx-doc.org/en/master/usage/restructuredtext/roles.html#cross-referencing-syntax::",Adam Turner,9087854,89,1,2,2,1,0,4050a96156867bb8f8f97b19cc124962fd6e1cd1::
https://api.github.com/repos/python/cpython,109664,docs/whatsnew/show-module-names::main,0,merged,docs::skip news::,"In most of the ""Improved Modules"" list, we show the full module name (i.e. no ``~`` in the cross-reference role). This standardises so that we always show the module name for cross-referenced objects. <!-- gh-issue-number: gh-109190 --> * Issue: gh-109190 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--109664.org.readthedocs.build/en/109664/whatsnew/3.12.html#improved-modules <!-- readthedocs-preview cpython-previews end -->::",Adam Turner,9087854,89,1,20,20,1,0,194afaaa7c6df6f6c480f9b8cd58d210a4af94a3::
https://api.github.com/repos/python/cpython,109663,docs/whatsnew/improved-tokenize::main,0,merged,docs::skip news::,- Standardise the brackets for contribution credits <!-- gh-issue-number: gh-109190 --> * Issue: gh-109190 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--109663.org.readthedocs.build/en/109663/whatsnew/3.12.html#tokenize <!-- readthedocs-preview cpython-previews end -->::,Adam Turner,9087854,89,1,2,2,1,0,e1fd7ea6d70d947acf763bc29e19e3c5e112cae6::
https://api.github.com/repos/python/cpython,109662,docs/whatsnew/improved-calendar::main,0,merged,docs::skip news::,- Expand the description of the new ``Day`` and ``Month`` enums <!-- gh-issue-number: gh-109190 --> * Issue: gh-109190 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--109662.org.readthedocs.build/en/109662/whatsnew/3.12.html#calendar <!-- readthedocs-preview cpython-previews end -->::,Adam Turner,9087854,89,2,2,1,1,1,63aa2ad90a540ae858844047f863cf79533644c8::25c74bb79d7c35f1c5bd50cfddcb056513201a11::
https://api.github.com/repos/python/cpython,109661,docs/whatsnew/improved-asyncio::main,0,merged,docs::skip news::,"- Standardise Itamar's name <!-- gh-issue-number: gh-109190 --> * Issue: gh-109190 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--109661.org.readthedocs.build/en/109661/whatsnew/3.12.html#asyncio <!-- readthedocs-preview cpython-previews end -->::```suggestion (Contributed by Jacob Bower & Itamar Oren in :gh:`102853`, :gh:`104140`, and :gh:`104138`) ```::```suggestion (Contributed by Itamar Oren in :gh:`103793`.) ```::",Adam Turner,9087854,89,3,4,4,1,0,688c391bd55feb03ae6da6ea223cad6716332ae7::ea548136bcdb381330d03692a477774f5a38e67d::979a0b16e914c67de276ce189fbedf598db65559::
https://api.github.com/repos/python/cpython,109660,docs/whatsnew/other-language-changes::main,0,merged,docs::skip news::,"- Copyedit ``perf`` support - Use an explicit title for the link to ``perf-profiling`` - Use an explicit title for the link to ``tarfile-extraction-filter`` - Fix the bracket position for the invalid escapes note - Avoid the unfamiliar ""typeobject"" in favour of ""class or type"" <!-- gh-issue-number: gh-109190 --> * Issue: gh-109190 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--109660.org.readthedocs.build/en/109660/whatsnew/3.12.html#other-language-changes <!-- readthedocs-preview cpython-previews end -->::",Adam Turner,9087854,89,4,8,8,1,0,543202c66cdeacfa24c02ba57c8dc0f110c366b8::55a429c49a57649968251eb2792c004422082e21::1e7f49a64a48183cb480354de017068dd076627e::0d5a379dcad719295b2a782f481c8b1ec5d708e2::
https://api.github.com/repos/python/cpython,109659,docs/whatsnew/typing-peps::main,0,merged,docs::skip news::,- Inline the reference to PEP-484 - Add a link to PEP-692 - Add a link to PEP-698 - Override the case of the rendered link for lazy evaluation in PEP 695's overview <!-- gh-issue-number: gh-109190 --> * Issue: gh-109190 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--109659.org.readthedocs.build/en/109659/whatsnew/3.12.html#new-features-related-to-type-hints <!-- readthedocs-preview cpython-previews end -->::,Adam Turner,9087854,89,4,6,4,1,0,c5e77bd1b7b4b916475008aa3de19aa54e77931e::324910114954148d6acb402c7058a2026bd1e257::3f726d5821872e6fc6b4ec2111f12dec40ef2502::c044f5e12c9fd09e4a41984b0123b832170ffbbe::
https://api.github.com/repos/python/cpython,109658,docs/whatsnew/pep-669::main,0,merged,docs::skip news::,"- Add a link to the PEP - Copyedit and expand the introductory paragraph - Add contribution credits <!-- gh-issue-number: gh-109190 --> * Issue: gh-109190 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--109658.org.readthedocs.build/en/109658/whatsnew/3.12.html#pep-669-low-impact-monitoring-for-cpython <!-- readthedocs-preview cpython-previews end -->::```suggestion (Contributed by Mark Shannon in :gh:`103083`.) ```::Can we avoid ""instrumentation"". It is how it works, but it isn't (mostly) visible in the API and might hypothetically be changed in the future. How about ""PEP 669 supports monitoring of a wide range ...""::```suggestion It covers a wide range of events, including calls, ```::",Adam Turner,9087854,89,3,5,3,1,0,418d21d773b1f442836959f3a2e0802195b18e00::830e69713c823b7912e80007ff271c46fa9faafa::eaab463a552330f8a3c3c6f6f591b30f05874a1b::
https://api.github.com/repos/python/cpython,109657,docs/whatsnew/pep-684::main,0,merged,docs::skip news::,- Add an introduction to the section - Add a bridging note about the expected Python API and the C-API <!-- gh-issue-number: gh-109190 --> * Issue: gh-109190 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--109657.org.readthedocs.build/en/109657/whatsnew/3.12.html#pep-684-a-per-interpreter-gil <!-- readthedocs-preview cpython-previews end -->::,Adam Turner,9087854,89,2,4,4,1,0,61d0bd1864faf876f94bd841c57f334c33d270f6::ebe97ad9d92b6b5c788f50e605b2fe050e919975::
https://api.github.com/repos/python/cpython,109656,docs/whatsnew/pep-709::main,0,merged,docs::skip news::,- Write out '2x' in words - Add a link to PEP-709 in the summary paragraph - Merge two sentences & remove implemenetation detail from What's New - Standardise brackets for contribution credits <!-- gh-issue-number: gh-109190 --> * Issue: gh-109190 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--109656.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::,Adam Turner,9087854,89,3,5,7,1,0,b48ea4a1a69ffe2d23e78c44c4a2f4067370f449::b66458f00aa45ed5d901d0730da40a19659d7248::c19e271f1d6c51cddb1863c23eb112a0114b0595::
https://api.github.com/repos/python/cpython,109655,docs/whatsnew/pep-701::main,0,merged,docs::skip news::,- Reflect the order of the explanatory paragraphs in the order of the summary text - Add a link to f-strings in the glossary - Minor copyedits to the prose - Add a link to escape sequences - Inline the link to PEP-617 <!-- gh-issue-number: gh-109190 --> * Issue: gh-109190 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--109655.org.readthedocs.build/en/109655/whatsnew/3.12.html#pep-701-syntactic-formalization-of-f-strings <!-- readthedocs-preview cpython-previews end -->::,Adam Turner,9087854,89,2,17,15,1,0,df9d1b340e0b0068aa7855230070302c95353029::83973bad96aaba6ffa7474c4e784317c0b798e3e::
https://api.github.com/repos/python/cpython,109654,docs/whatsnew/error-messages::main,0,merged,docs::skip news::,- Standardise the brackets for contribution credits - Standardise code block whitespace <!-- gh-issue-number: gh-109190 --> * Issue: gh-109190 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--109654.org.readthedocs.build/en/109654/whatsnew/3.12.html#improved-error-messages <!-- readthedocs-preview cpython-previews end -->::,Adam Turner,9087854,89,2,5,6,1,0,9db42e987ab4d7fe6752c0b2451f102db0fc0cf2::088c85e8bb73bb866d15978cb9669d792d2fcdb7::
https://api.github.com/repos/python/cpython,109652,cpu_count_usable::main,0,closed,,"Implement cpu_count(affinity=True) with sched_getaffinity() on Unix and GetProcessAffinityMask() on Windows. Changes: * Fix test_posix.test_sched_getaffinity(): restore the old CPU mask when the test completes! * Doc: Specify that os.cpu_count() counts *logicial* CPUs and mention that Linux cgroups are ignored. * _Py_popcount32() uses UINT32_C() for M1, M2 and M4 constants. * Add _Py_popcount64(). Add tests on _Py_popcount64(). <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-109649 --> * Issue: gh-109649 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--109652.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::```suggestion can use. If the :func:`sched_getaffinity` function is available, return ```::You have to update the documentation that it will return the number of logical CPUs for the **process** if the usable is True. Because the current os.cpu_count returns the available CPU counts from the system not the process. It's different layer.::The doc says: > If *affinity* is true, return the number of logical CPUs the current process can use. It's not clear enough? Do you want to propose a different phrasing?::In English, sentences are separated by 2 spaces. My text editor implements English grammar :-)::That is reasonable. I'd add ""this may be less than the number of logical cpus returned by affinity=False due to OS or container limitations imposed upon the process"" to make it more clear _why_ people should want to use the `affinity=True` argument. PS thanks for making it keyword only! I do wish this API never used the term ""cpu""... everything these days is really a ""logical_core"" and what that even means depends a lot on underlying infrastructure and platform that Python may not be able to introspect.  Way too late for that though. :)::My PR adds ""logical CPU"" to the doc. In previous bug reports, I saw some confusion between physical CPU core, CPU packages, CPU threads, and logical CPUs.::I feel like people wanting such an API may also want cgroups to also be considered when the real question being answered is really _""How parallel am I usefully allowed to be?""_. Does that need to be separated out into its own `cgroups_cpuset=True` flag so that people could query one or the other or both?  The use cases I have in mind are all around the above question where I'd always want the combination aka `min(logical_cpus, affinity_cores, cgroups_cpuset_cores)`.::Why not just always call `__builtin_popcountl(x)` without the #if conditional?  No platform I've ever seen that we support has an `int` who's size is > 32-bits.::This effectively means the tests can all pass when our impementation is broken.  Our tests should assume that the return value will not be `None` on some known platforms.  At a minimum even if we don't do that, raise SkipTest when `None` is returned to indicate that no functionality testing could actually performed.::assert that the invariant of the returned affinity value <= the non-affinity return value?::My PR just fix the documentation to avoid any misunderstading. > I feel like people wanting such an API may also want cgroups to also be considered It is discussed in PR #80235. So far, nobody proposes any PR to implement this. Maybe this PR is a baby step forward :-)::In practice, it should never return None. Maybe it's time to enforce that and make the test fails in this case. If we discover real cases where None is returned, we can investigate and only skip on these platforms, as you say.::Even if we decide to support `cgroup` in the future, I would like to propose not to use the flag name that can represent the implementation detail. If some platform suggests new things do we have to add a new flag for them?::Good idea, done.::Hum, for this PR, I prefer to keep self.skipTest(). Once it will be merged, I will propose a separated PR for None.::I reverted my changes for Windows for now. I may propose a follow-up PR for Windows.::",Victor Stinner,194129,1148,1,191,50,11,1,276214403af8c88f66a463109709538ca1668f61::
https://api.github.com/repos/python/cpython,109651,fewer-imports-in-typing::main,0,merged,performance::topic-typing::3.13::,"This cuts about 1/3 off the import time of `typing.py` for me locally (PGO-optimised, non-debug build). 0.012s -> 0.008s. <details> <summary>Benchmark script</summary> (There's probably a better way of benchmarking import times, but this seems to work pretty well.) ```py import sys import time import statistics import subprocess times = [] for _ in range(500): ret = subprocess.run( [sys.executable, ""-c"", f""import time; t0 = time.perf_counter(); import typing; print(time.perf_counter() - t0)""], check=True, capture_output=True, text=True ) times.append(float(ret.stdout.strip())) print(statistics.mean(times)) ``` </details> <!-- gh-issue-number: gh-109653 --> * Issue: gh-109653 <!-- /gh-issue-number --> ::module level `__getattr__` has mostly standardized on: ``` Lib/ast.py:    raise AttributeError(f""module 'ast' has no attribute '{name}'"") Lib/calendar.py:    raise AttributeError(f""module '{__name__}' has no attribute '{name}'"") Lib/concurrent/futures/__init__.py:    raise AttributeError(f""module {__name__!r} has no attribute {name!r}"") Lib/sqlite3/__init__.py:    raise AttributeError(f""module {__name__!r} has no attribute {name!r}"") Lib/sqlite3/dbapi2.py:    raise AttributeError(f""module {__name__!r} has no attribute {name!r}"") Lib/unittest/__init__.py:    raise AttributeError(f""module {__name__!r} has no attribute {name!r}"") Lib/zoneinfo/__init__.py:        raise AttributeError(f""module {__name__!r} has no attribute {name!r}"") ``` eg, lowercase ""m"" for module, using templated `{__name__!r}`  for the name and using the variable name ""name"" see also ```suggestion raise AttributeError(f""module {__name__!r} has no attribute {attr!r}"") ```::Thanks! I'll apply this after the refleak buildbots have finished, or I'll interrupt them in the middle of things.::",Alex Waygood,66076021,141,4,24,8,3,0,180461fd8a793f63340e86446844d79f59c9e374::75901019413d559c6acd21d55880bb60ae06730e::b57caaabb6729611948970010f7a0b3786797c62::9716ac6ad053351771b886eb770287e91616ed0f::
https://api.github.com/repos/python/cpython,109650,update-msvcrt-docs::main,0,merged,,"Previous discuss: https://github.com/python/cpython/issues/74481#issuecomment-1093747669: > msvcrt set_error_mode, CrtReportMode, CrtReportFile and the associated CRT constants should be documented for use with debug builds. Also, msvcrt is missing the set_error_mode constants _OUT_TO_DEFAULT, _OUT_TO_STDERR, _OUT_TO_MSGBOX, and _REPORT_ERRMODE. > > SetErrorMode [1](https://msdn.microsoft.com/en-us/library/ms680621) and the SEM_* constants are defined in msvcrt, for convenience I suppose. They're not related to the CRT. I think they should be aliased in the os module and documented there. GetErrorMode [2](https://msdn.microsoft.com/en-us/library/ms679355) can also be provided in Python 3.5+. It would be useful to also provide SetThreadErrorMode [3](https://msdn.microsoft.com/en-us/library/dd553630) and GetThreadErrorMode conditionally in Windows 7+, which is practically all Windows users nowadays. This PR finished it, except the `SetErrorMode` function and related constants alias to os module. I think it should be finished in another PR. And also removed the duplicated white spaces in this document. <!-- gh-issue-number: gh-74481 --> * Issue: gh-74481 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--109650.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::",AN Long,699636,487,4,107,13,3,0,c478caa5cd00e68dc8b68111b98ee4422d904df1::affbe6b3756297eca76cb4cb8d7a4abc4de17672::33ed350509878f0d382764b0d6f5896d7ad8822c::766f877c5a1be014076cb9aefc8d395b66ce7128::
https://api.github.com/repos/python/cpython,109648,fix-issue-106967::3.12,0,merged,docs::skip news::,"<!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> Backport of e8884529de9874783624615ac1ed34541e8a1373 from PR https://github.com/python/cpython/pull/107000. > python/release-tools template for ""What's New"" page automatically adds a ""Release"" field and a ""Date"" field with the date set to ""today"", which becomes the day the docs are built, which is forever increasing. This is the topic of https://github.com/python/release-tools/issues/34 which is yet to be fixed. In the meantime, this commit fixes it manually. <!-- gh-issue-number: gh-106967 --> * Issue: gh-106967 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--109648.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::",Hugo van Kemenade,1324225,628,1,1,2,1,1,126e306c4d1070e231b13f9edfcd910782174c04::
https://api.github.com/repos/python/cpython,109641,backport-d4cea79-3.12::3.12,0,merged,,"Fix os.stat() and os.DirEntry.stat(): check for exceptions. Previously, on Python built in debug mode, these functions could trigger a fatal Python error (and abort the process) when a function succeeded with an exception set. _pystat_fromstructstat() now exits immediately if an exception is raised, rather only checking for exceptions at the end. It fix following fatal error in fill_time(): Fatal Python error: _Py_CheckSlotResult: Slot * of type int succeeded with an exception set (cherry picked from commit d4cea794a7b9b745817d2bd982d35412aef04710) Co-authored-by: Victor Stinner <vstinner@python.org> <!-- gh-issue-number: gh-109613 --> * Issue: gh-109613 <!-- /gh-issue-number --> ::",Miss Islington (bot),31488909,73,1,76,49,2,0,bf871329c39ea39efad2ff86576b137bb2d11e7a::
https://api.github.com/repos/python/cpython,109640,backport-115c49a-3.12::3.12,0,merged,skip news::,(cherry picked from commit 115c49ad5a5ccfb628fef3ae06a566f7a0197f97) Co-authored-by: Nikita Sobolev <mail@sobolevn.me> <!-- gh-issue-number: gh-109625 --> * Issue: gh-109625 <!-- /gh-issue-number --> ::,Miss Islington (bot),31488909,73,1,35,34,3,0,1e40c023db8110732b4a672c96d753cca244b04d::
https://api.github.com/repos/python/cpython,109637,backport-712cb17-3.11::3.11,0,merged,,(cherry picked from commit 712cb173f8e1d02c625a40ae03bba57b0c1c032a) Co-authored-by: Adam Turner <9087854+AA-Turner@users.noreply.github.com> <!-- gh-issue-number: gh-109209 --> * Issue: gh-109209 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--109637.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::,Miss Islington (bot),31488909,73,1,7,8,4,0,efb0bc9630fc5998473de3a35af44ad7bf4eeb7e::
https://api.github.com/repos/python/cpython,109636,backport-712cb17-3.12::3.12,0,merged,,(cherry picked from commit 712cb173f8e1d02c625a40ae03bba57b0c1c032a) Co-authored-by: Adam Turner <9087854+AA-Turner@users.noreply.github.com> <!-- gh-issue-number: gh-109209 --> * Issue: gh-109209 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--109636.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::,Miss Islington (bot),31488909,73,1,7,8,4,1,0a8bbdca11b3a95b23a1d9e499f8eff97588f636::
https://api.github.com/repos/python/cpython,109635,docs-samp-role::main,0,merged,docs::skip news::,"<!-- gh-issue-number: gh-109634 --> * Issue: gh-109634 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--109635.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::You can also use it for -I in: https://docs.python.org/dev/using/configure.html#envvar-CPPFLAGS Compare with new doc: https://cpython-previews.readthedocs.io/en/latest/using/configure.html#cmdoption-arg-CPPFLAGS::Did the role not work here? (I think backslash-escaped spaces are a little ugly & we should avoid if possible; but not a blocker)::``:samp:`\N{\\{name\\}}` `` would work. But ungainly.::Same note on avoiding backslash-escaped spaces if possible::I do not think that U+DCxx should be rendered with typewriter font. ::Thank you for pointing out that backslash have a special meaning in the `:samp:` role. All other occurrences of backslash should be doubled. In this example it should be ``` :samp:`\\N\\{{name}\\}` ```, because curly braces should be outside of the variable part. I am surprised that `\` before `{` needs to be doubled, but it is how it works.::",Serhiy Storchaka,3659035,401,3,99,95,30,1,3023c0f01738685c4f3c009c22dbb54c9c242b42::6914956a73984f6197cf0674c8e3f0cab2a90cec::ad659c59cdadab2193d73e60e10e0470e2a91802::
https://api.github.com/repos/python/cpython,109632,backport-9ccf054-3.12::3.12,0,merged,type-bug::interpreter-core::release-blocker::,(cherry picked from commit 9ccf0545efd5bc5af5aa51774030c471d49a972b) <!-- gh-issue-number: gh-109627 --> * Issue: gh-109627 <!-- /gh-issue-number --> ::,Irit Katriel,1055913,162,1,28,5,3,1,faa80038e88e49b6a68e66e4b15513661421c1b7::
https://api.github.com/repos/python/cpython,109630,label-bug::main,0,merged,type-bug::interpreter-core::release-blocker::,"Fixes #109627. In order to ensure that function exits have a line number, the compiler duplicates small exit blocks which (1) do not have a line number in any instruction and (2) have more than one predecessor. Since these blocks are jump targets (at least one predecessor reaches this block via a jump or exception), they need to have labels assigned to them. This was missing, and is added in this PR. <!-- gh-issue-number: gh-109627 --> * Issue: gh-109627 <!-- /gh-issue-number --> ::This duplicates some code at the top of `translate_jump_labels_to_targets` that does the same thing. Should `translate_jump_labels_to_targets` just call `max_label` instead?::",Irit Katriel,1055913,162,2,28,5,3,1,5234f4d77d8f641d4423ed8b4f1a1232844de6b9::56d80a66bec9588355a2896f095f1579ab0f02d2::
https://api.github.com/repos/python/cpython,109629,gh109593-ensure-running-reentrant::main,0,merged,,"<!-- gh-issue-number: gh-109593 --> * Issue: gh-109593 <!-- /gh-issue-number --> ::Please add a comment with a reference to the gh issue to explain the rationale for using a RLock and for exiting here. Does it mean that on a reentrant code, ensure_running() doesn't do what it says, it does not ensure that the resource tracker is running? Is it because we know that something else in the call stack will start it soon? So it's not important that it runs when the reentrant call exits, but ""soon""?::Yeah, I will add a comment explaining it. Yes, on a reentrant call, it will not do what it says. I have no idea how to avoid that. Reentrancy is much harder than multi-threading: you cannot wait for the ""other thread"", since it's waiting for you :-) The real solution would be to avoid reentrant calls from finalizers, but that will be harder to solve and not backportable. ::@vstinner This might raise a warning from time to time during the test suite, will it fail the buildbots? ::If you prefer to raise an exception (I'm fine with it), do we still need a reentrant lock? Would it be possible to use a regular lock, try to acquire it, raise if it's a reentrant lock, or use the lock and release it afterwards?::Would it be possible to create the exception in the function and use **raise** here to make it more explicit that this line raises an exception? ``return func()`` which raises an exception is kinda surprising.::I don't get this code path. So it's possible that self._fd is None, since something is calling ensure_running(), no? But the code below doesn't check if self._fd is None or not.::Hum. If you run tests with -Werror, it will raises an UserWarning exception, and can make the tests fail, no?::Yes, it is.::How do you ""raise if it's a reentrant lock"" with a regular lock? If it fails locking, you don't know if it's because of a reentrant call, or simply another thread.::This is true, but `self._fd` could be non-None but point to a dead process. See `_check_alive()`.::I would prefer: ```suggestion raise self._reentrant_call_error() ``` or: ```suggestion self._reentrant_call_error() ``` Since the ``return`` here is a lie: the function never returns.::",Antoine Pitrou,1721820,455,3,95,2,7,0,f16a4479de6272fce665c4b63adaea1e794cc9a4::8471da5aa9dc35ae82a66b3eb28767598ae73d02::0583400f03ba4c079e146ed4146a4dc721fc8948::
https://api.github.com/repos/python/cpython,109626,issue-109625::main,0,merged,tests::skip news::,"Refs https://github.com/python/cpython/pull/109607 <!-- gh-issue-number: gh-109625 --> * Issue: gh-109625 <!-- /gh-issue-number --> ::Oh no, we should not make tests inter-dependents. This change goes to the right direction!::",Nikita Sobolev,4660275,4663,1,35,34,3,1,4839fd44dad421ee5f5a8fcd13d9c8e9a58eccad::
https://api.github.com/repos/python/cpython,109624,backport-14cdefa-3.11::3.11,0,merged,skip news::,"(cherry picked from commit 14cdefa667f211401c9dfab33c4695e80b4e5e95) <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-109408 --> * Issue: gh-109408 <!-- /gh-issue-number --> ::",Hugo van Kemenade,1324225,628,1,20,31,2,0,b40067d7123611c103ec1416e1f04c9c70a4a914::
https://api.github.com/repos/python/cpython,109623,backport-14cdefa-3.12::3.12,0,merged,skip news::,(cherry picked from commit 14cdefa667f211401c9dfab33c4695e80b4e5e95) Co-authored-by: Hugo van Kemenade <hugovk@users.noreply.github.com> <!-- gh-issue-number: gh-109408 --> * Issue: gh-109408 <!-- /gh-issue-number --> ::,Miss Islington (bot),31488909,73,1,20,31,2,1,ec5fdc7e3494367706aeb27e4a8c931915f1f400::
https://api.github.com/repos/python/cpython,109622,backport-109619-311::3.11,0,merged,tests::skip issue::skip news::,(cherry-picked from commit ef6d475db3af4d30a3104fa6301dcd36c71eacab) <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--109622.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::,Alex Waygood,66076021,141,1,5,5,5,0,446676b13a7f49839dc266077c7abfbc73dc0e00::
https://api.github.com/repos/python/cpython,109621,backport-109619-312::3.12,0,merged,skip issue::skip news::,(cherry-picked from commit ef6d475db3af4d30a3104fa6301dcd36c71eacab) <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--109621.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::,Alex Waygood,66076021,141,3,9,9,9,1,128f7d71982f31212649cd5f390ce506886cdf79::1e1b38656b8d6975b2e59722b4f642554edab335::dc82e27577dba996ff5471e7d11a3acba4587aad::
https://api.github.com/repos/python/cpython,109620,mp_ensure_running::main,0,closed,needs backport to 3.11::needs backport to 3.12::,"multiprocessing: Reduce the risk of reentrant calls to ResourceTracker.ensure_running() by running explicitly all finalizers before acquiring the ResourceTracker lock. <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-109593 --> * Issue: gh-109593 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,1,12,0,2,0,d11bc95c68f7234a40eefeb37531700cc46b1463::
https://api.github.com/repos/python/cpython,109619,fix-typos::main,0,merged,skip issue::skip news::,"# Proposed changes Hi, this is my first PR to the project. Please feel free to close if unwanted. As per the pull request template I did not open an issue first, because this PR only fixes typos. I found a few occurrences of ""the the"" and a few minor typos in the docs. Are these alright? Thank you. :) <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--109619.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::",Heinz-Alexander Fuetterer,35225576,7,1,15,15,14,1,2bd242a3eaca5c44aff0ee45af8c2154757cc5d8::
https://api.github.com/repos/python/cpython,109618,fromstructstat::main,0,merged,,"Fix os.stat() and os.DirEntry.stat(): check for exceptions. Previously, on Python built in debug mode, these functions could trigger a fatal Python error (and abort the process) when a function succeeded with an exception set. _pystat_fromstructstat() now exits immediately if an exception is raised, rather only checking for exceptions at the end. It fix following fatal error in fill_time(): Fatal Python error: _Py_CheckSlotResult: Slot * of type int succeeded with an exception set <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-109613 --> * Issue: gh-109613 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,1,76,49,2,1,b974fd70c9b0fbdd27c3e89dd804b8d6c6d9a9be::
https://api.github.com/repos/python/cpython,109616,skip_freeze_pgo311::3.11,0,merged,,"Skip test_freeze_simple_script() of test_tools.test_freeze if Python is built with ""./configure --enable-optimizations"", which means with Profile Guided Optimization (PGO): it just makes the test too slow. The freeze tool is tested by many other CIs with other (faster) compiler flags. test.pythoninfo now gets also get_build_info() of test.libregrtests.utils. (cherry picked from commit 81cd1bd713624c3d26b647f3d28f2fd905887a0d) <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-103053 --> * Issue: gh-103053 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,1,35,10,5,0,ac70f6dc5237fbe92de339b300592a5554c9d3e9::
https://api.github.com/repos/python/cpython,109614,skip_freeze_pgo312::3.12,0,merged,,"Skip test_freeze_simple_script() of test_tools.test_freeze if Python is built with ""./configure --enable-optimizations"", which means with Profile Guided Optimization (PGO): it just makes the test too slow. The freeze tool is tested by many other CIs with other (faster) compiler flags. test.pythoninfo now gets also get_build_info() of test.libregrtests.utils. (cherry picked from commit 81cd1bd713624c3d26b647f3d28f2fd905887a0d) <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-103053 --> * Issue: gh-103053 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,1,35,10,5,0,8b589b1afd5ee45c1968058bf79e0b2726ccb180::
https://api.github.com/repos/python/cpython,109612,_PyFile_Flush::main,0,merged,skip news::,"<!-- gh-issue-number: gh-109611 --> * Issue: gh-109611 <!-- /gh-issue-number --> ::Please add it to the internal C API instead, since it's a private API.::Please don't export a function unless it's technically needed: ```suggestion extern int _PyFile_Flush(PyObject *); ``` I prefer to make new private functions as private as possible :-)::",Serhiy Storchaka,3659035,401,3,54,97,11,0,f82a756381b8ca6e6d4a4bf280b24062e4e768df::ff47dbdb1e7f4335de68db1d39be8d7d3bfad52e::bd4c7d27f82fd291d163e3b959e85ccbd4252fe5::
https://api.github.com/repos/python/cpython,109610,test_subprocess_consistent_callbacks311::3.11,0,merged,docs::skip news::,"SubprocessProtocol process_exited() method can be called before pipe_data_received() and pipe_connection_lost() methods. Document it and adapt the example in the doc. Co-authored-by: Davide Rizzo <sorcio@gmail.com> (cherry picked from commit ced6924630037f1e5b3d1dbef2b600152fb07fbb) <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-108973 --> * Issue: gh-108973 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--109610.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::",Victor Stinner,194129,1148,1,23,6,2,0,5a7d444145707cf420f790032c0992431806258a::
https://api.github.com/repos/python/cpython,109609,backport-ced6924-3.12::3.12,0,merged,skip news::,SubprocessProtocol process_exited() method can be called before pipe_data_received() and pipe_connection_lost() methods. Document it and adapt the test for that. Revert commit 282edd7b2a74c4dfe1bfe3c5b1d30f9c21d554d6. _child_watcher_callback() calls immediately _process_exited(): don't add an additional delay with call_soon(). The reverted change didn't make _process_exited() more determistic: it can still be called before pipe_connection_lost() for example. (cherry picked from commit ced6924630037f1e5b3d1dbef2b600152fb07fbb) Co-authored-by: Victor Stinner <vstinner@python.org> Co-authored-by: Davide Rizzo <sorcio@gmail.com> <!-- gh-issue-number: gh-108973 --> * Issue: gh-108973 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--109609.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::,Miss Islington (bot),31488909,73,1,67,19,4,0,163cbf022953d2d1c79a70af124c0124f89c4c29::
https://api.github.com/repos/python/cpython,109607,issue-108303-inspect::main,0,merged,tests::skip news::needs backport to 3.11::,"This PR also moves `ready_to_import` helper to `test/support/import_helper`, because `test_inspect` was importing `test_import`, which is not good at all. <!-- gh-issue-number: gh-108303 --> * Issue: gh-108303 <!-- /gh-issue-number --> ::```suggestion else: sys.modules.pop(name, None) ```::Is it really important to create a temporary directory?::I personally find this a little hard to read. Is it a list of steps being followed? With no punctuation or capital letters I can't tell where something starts and another things begins.::This is not my code, I just moved it :) But, I can totally make it better, since I touch it anyway 👍 ::No idea :)::So, I would prefer to keep it as-is (general semantics).::Thanks!::Can you use relative imports? From . import...::You don't have to change this code to look in parent directory?::No :) This module was excluded from this test explicitly here. But, since now it is not a module, but a package - we can safely remove the ignore rule here.::Ah wait, this file is not moved into test_inspect/, we are good, ok. Nevermind.::@serhiy-storchaka: It would be nice if we could magically generate such function, instead of having to duplicate the same 4 lines in each test_xxx/ test package. Do you think that it would be possible?::",Nikita Sobolev,4660275,4663,5,15,7,11,1,83b6a1dfa6d406eea5143c29ab90f4efab42fe59::9e35f08cfbb5ca23d46dfce1db1b9d7f22b543e1::077ded83a15e60e1bc3d40a6351383e72cfdb118::8d791b9be95d4906fa2f95b59c4a4c6d3e692a91::44bd3782ed0b949952ccb8f50928e2e1a2d45547::
https://api.github.com/repos/python/cpython,109606,gh-109596::main,0,merged,,"<!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-109596 --> * Issue: gh-109596 <!-- /gh-issue-number --> ::```suggestion # Check if there are repeated rules in ""rules"" ```::",Pablo Galindo Salgado,11718525,847,2,1203,1219,7,1,4535f5ed010b77d65dfb87e0690e92d5564de853::9f40575e2bac8fef2d2142b202a6aba5a471b559::
https://api.github.com/repos/python/cpython,109605,fix/test-asyncio-fork-signal::main,0,merged,tests::skip news::,"Sometimes the child_handled event was missing because either the child quits before it gets a chance to handle the signal, or the parent asserts before the event notification is delivered via IPC. Synchronize explicitly to avoid this. <!-- gh-issue-number: gh-109582 --> * Issue: gh-109582 <!-- /gh-issue-number --> ::I didn't know that another test_asyncio test uses multiprocessing. It *might* be interesting to call ``from multiprocessing.util._cleanup_tests()`` in this test file as well: see commit 09ea4b8706165fd9474165090a0ba86509abd6c8 and gh-109295. But this one is less important since it doesn't pull most heavy multiprocessing resources, it's ""just"" a fork manager :-)::It took me a while to understand that the child doesn't run the loop forever, but is interrupted by SIGTERM and so exits immediately.::Right, that's a good way to synchronize the parent and the child.::",Davide Rizzo,1160460,0,1,11,2,1,0,b070520a042478b4bc53dfa2077f3d031e02f1ad::
https://api.github.com/repos/python/cpython,109600,gh109599-capsule-type::main,0,merged,,"<!-- gh-issue-number: gh-109599 --> * Issue: gh-109599 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--109600.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::Should there be a space before `<`? I just never seen it without a space.::There is one occurrence just above, but I can add a space for consistency: ```restructuredtext .. class:: UnionType The type of :ref:`union type expressions<types-union>`. .. versionadded:: 3.10 ```::> Should there be a space before `<`? I just never seen it without a space. Both are fine as far as Sphinx is concerned, but in CPython's docs we nearly always add a space, for readability reasons::",Antoine Pitrou,1721820,455,4,21,1,5,0,563aca2a1bd03bfa7191d921a6b4d58200431080::e88b0fdeb84e7d57e18277e696fba0a85f6bba9a::0dfea2372d6e8a16bcc08de702500e1b13a603c1::30af924a73760bd9617cffafe58aa76b12f24910::
https://api.github.com/repos/python/cpython,109597,checksums::main,0,merged,tests::skip news::,"<!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-109559 --> * Issue: gh-109559 <!-- /gh-issue-number --> ::",Benjamin Peterson,219470,506,1,2,2,1,0,cf714a37d92df241517939b8338486a1c1af9b5f::
https://api.github.com/repos/python/cpython,109591,skip_freeze_pgo::main,0,merged,,"Skip test_freeze_simple_script() of test_tools.test_freeze if Python is built with ""./configure --enable-optimizations"", which means with Profile Guided Optimization (PGO): it just makes the test too slow. The freeze tool is tested by many other CIs with other (faster) compiler flags. test.pythoninfo now gets also get_build_info() of test.libregrtests.utils. <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-103053 --> * Issue: gh-103053 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,1,36,10,5,1,4d93f9ff628d275a65ab75b60e1ecd168f9d4e94::
https://api.github.com/repos/python/cpython,109585,backport-754519a-3.12::3.12,0,merged,tests::,"Skip test_perf_profiler if Python is built with ASAN, MSAN or UBSAN sanitizer. Python does crash randomly in this test on such build. (cherry picked from commit 754519a9f8c2bb06d85ff9b3e9fe6f967ac46d5c) Co-authored-by: Victor Stinner <vstinner@python.org> <!-- gh-issue-number: gh-109580 --> * Issue: gh-109580 <!-- /gh-issue-number --> ::",Miss Islington (bot),31488909,73,1,8,1,2,0,aef2b7f47201ba2bb30c15f7a9391f04a4360209::
https://api.github.com/repos/python/cpython,109584,skip_test_perf_profiler_asan::main,0,merged,tests::,"Skip test_perf_profiler if Python is built with ASAN, MSAN or UBSAN sanitizer. Python does crash randomly in this test on such build. <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-109580 --> * Issue: gh-109580 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,1,8,1,2,0,98f33b9462d4a6cb48d19117fe124ac860c66e06::
https://api.github.com/repos/python/cpython,109583,pymutex-fix-wasm::main,0,merged,skip news::,"Some WASM platforms have POSIX semaphores, but not `sem_timedwait`. <!-- gh-issue-number: gh-108724 --> * Issue: gh-108724 <!-- /gh-issue-number --> ::",Sam Gross,655866,1625,1,2,1,1,0,a9c0a5b31cccd1b15c6cf95ae3a20c0c6cc77fed::
https://api.github.com/repos/python/cpython,109581,no_lto::main,0,merged,skip news::,"LTO optimization is nice to make Python faster, but _freeze_module and _testembed performance is not important. Using LTO to build these two programs make a whole Python build way slower, especially combined with a sanitizer (like ASAN). <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-90108 --> * Issue: gh-90108 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,1,2,2,1,0,69c34bd3de08f1c661e5d4443209126f515b92f4::
https://api.github.com/repos/python/cpython,109578,backport-0a31ff0-3.12::3.12,0,merged,tests::skip news::,"Skip test_decref_freed_object() of test_capi.test_misc if Python is built with ASAN, MSAN or UBSAN sanitizers. (cherry picked from commit 0a31ff0050eec5079fd4c9cafd33b4e3e9afd9ab) Co-authored-by: Victor Stinner <vstinner@python.org> <!-- gh-issue-number: gh-109496 --> * Issue: gh-109496 <!-- /gh-issue-number --> ::",Miss Islington (bot),31488909,73,1,2,0,1,0,d5744a42cfa4aa22ae8045dd6eb4f5d76ea8170f::
https://api.github.com/repos/python/cpython,109576,configure_asan::main,0,closed,awaiting review::needs backport to 3.11::needs backport to 3.12::,"When Python is configured to use ASAN, MSAN or UBSAN sanitizer, with ""./configure --with-address-sanitizer"" for example, compiler and linker flags for sanitizers are no longer exported to third party C extensions. Add flags to CFLAGS_NODIST and LDFLAGS_NODIST, instead of BASECFLAGS and LDFLAGS. Makefile.pre.in: PY_LDFLAGS_NOLTO now uses PY_LDFLAGS_NODIST, instead of LDFLAGS_NODIST, and add CONFIGURE_LDFLAGS_NOLTO after PY_LDFLAGS_NODIST. <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-109575 --> * Issue: gh-109575 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,1,18,13,4,0,a9da37cf02ed9c1f03ffdae3ba3a65e8181100da::
https://api.github.com/repos/python/cpython,109573,skip_decref_freed_asan::main,0,merged,tests::skip news::,"Skip test_decref_freed_object() of test_capi.test_misc if Python is built with ASAN, MSAN or UBSAN sanitizers. <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-109496 --> * Issue: gh-109496 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,1,2,0,1,0,1b4f3a285909a39a8076a9c1439ccf3f4f91058b::
https://api.github.com/repos/python/cpython,109572,backport-f2636d2-3.12::3.12,0,merged,docs::skip issue::skip news::,(cherry picked from commit f2636d2c45aae0a04960dcfbc7d9a2a8a36ba3bc) Co-authored-by: Raymond Hettinger <rhettinger@users.noreply.github.com> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--109572.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::Shouldn't the old docstring be removed?::Yes.::,Miss Islington (bot),31488909,73,2,44,37,1,0,8ff7b8baa8c873b91e28d3f080031320a1f4e356::577dcdf3dd38d26873efde4d6371dd8a19b936f5::
https://api.github.com/repos/python/cpython,109570,regrtest_ci::main,0,merged,,"* Add --fast-ci and --slow-ci options to libregrtest: * --fast-ci uses a default timeout of 10 minutes and ""-u all,-cpu"" (skip slowest tests). * --slow-ci uses a default timeout of 20 minues and ""-u all"" (run all tests). * regrtest header now lists test resources. * Makefile changes: * ""make test"", ""make hostrunnertest"" and ""make coverage-report"" now use --fast-ci option and TESTTIMEOUT variable. * ""make buildbottest"" now uses ""--slow-ci"". Remove options which became redundant with ""--slow-ci"". * ""make testall"" and ""make testuniversal"" now use --slow-ci option and TESTTIMEOUT variable. * ""make testall"" now uses ""find -exec rm ..."" instead of ""find ... -print|xargs rm ..."", same as ""make clean"". * GitHub Actions workflow: * Ubuntu and Address Sanitizer jobs now use ""make test"". Remove options which became redundant with ""--fast-ci"". * Windows jobs now use --fast-ci option. * Use -j0 to detect the number of CPUs. * Set Makefile TESTTIMEOUT default to an empty string, since --slow-ci and --fast-ci use different default timeout. It's now accepted to pass ""--timeout="" to regrtest: treated as not timeout. * Tools/scripts/run_tests.py now uses --fast-ci option. * Tools/buildbot/test.bat now uses --slow-ci option. Remove --timeout=1200 option, redundant with --slow-ci. <!-- gh-issue-number: gh-109566 --> * Issue: gh-109566 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--109570.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::was it okay to remove -j4?  i believe CI gives us a single core two vcpu thread instance so 4 seems reasonable.  is that what regrtest defaults to?  anyways, given this PR is in - pay attention to CI execution times and see how they compare afterwards.::This doc is incorrect, this PR made `test` use `--fast-ci`.::GHA announces 2 CPUs, regrtest uses 4 processes: it's the same as -j4. If later, we notice that sometimes goes wrong, obivously, we can adjust the -jN value. regrtest uses ""2 + ncpu"" worker processes. Example on the GHA Ubuntu job. * test.pythoninfo announce ``os.cpu_count: 2`` * ``Run 463 tests in parallel using 4 worker processes (timeout: 10 min, worker timeout: 15 min)`` Before when -j4 was used: https://github.com/python/cpython/actions/runs/6305743468/job/17119712665 ``` 0:00:00 load avg: 1.20 Run 463 tests in parallel using 4 worker processes (timeout: 20 min, worker timeout: 25 min) ``` The same number of worker processes is used before and after.::Oops, I included a fix in my following PR: gh-109903.::is this supposed to be here?  I see it called from the `Makefile` with `--slow-ci` and `--fast-ci` -- but wouldn't this override either of those?::``make test`` runs ``python -E -m test --fast-ci --fast-ci --timeout=``. Passing the option twice is fine. ``make buildbottest`` runs ``python -E -m test --fast-ci --slow-ci --timeout=``. If regrtest gets ``--fast-ci`` **and** ``--slow-ci``, ``--slow-ci`` has the priority. I would prefer to not duplicate these fast/slow CI options. I would also prefer to remove the run_tests.py script, but it's needed for cross-compiled Python. It doesn't look too complicated to move run_tests.py code into libregrtest.::makes sense -- just double checking since I got a weird conflict here (debian/deadsnakes patches out the randomization because it makes the builds nondeterministic)::I created issue gh-110152 for that.::> makes sense -- just double checking since I got a weird conflict here (debian/deadsnakes patches out the randomization because it makes the builds nondeterministic) Do you set SOURCE_DATE_EPOCH env var in this case? https://reproducible-builds.org/docs/source-date-epoch/ Maybe regrtest can detect SOURCE_DATE_EPOCH and omit --randomize in this case?::If SOURCE_DATE_EPOCH env var is set, open an issue, and I will update regrtest for that ;-)::yep!  looks like launchpad sets that at the very least -- I assume the debian build system would too::@asottile created https://github.com/python/cpython/issues/110164 follow-up issue.::> yep! looks like launchpad sets that at the very least -- I assume the debian build system would too Yes, it's set by dpkg-buildpackage in all package builds.::",Victor Stinner,194129,1148,2,161,51,11,0,be4c7bee1be2b14560b5587e62b53b6f62bbe0aa::4fcd6af301641e598d41ee163a5c14bf1febc75c::
https://api.github.com/repos/python/cpython,109569,ci-win-ap2gha::main,0,merged,skip news::,"<!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> # Situation now There are two top-level pipelines on Azure Pipelines: * [Azure Pipelines CI](https://dev.azure.com/Python/cpython/_build?definitionId=4) (`ci.yml`) - run post-merge on version branches. This PR makes no changes to it. * [Azure Pipelines PR](https://dev.azure.com/Python/cpython/_build?definitionId=9) (`pr.yml`) - runs for PRs to `main`. This PR makes changes here. The Azure Pipelines CI pipeline does this for Windows: * Build and test for win32 * Build and test for win64 * Some layout tests The Azure Pipelines PR pipeline does this for Windows: * Build and test for win32 * Build and test for win64 * Build for arm64 (but not test because it would need to run on the same architecture) GitHub Actions does this for Windows: * Build and test for win32 * Build and test for win64 # Changes in this PR Azure Pipelines CI pipeline: * Build and test for win32 _(no change)_ * Build and test for win64 _(no change)_ * Some layout tests _(no change)_ Azure Pipelines PR pipeline: * ~Build and test for win32~ _(removed)_ * ~Build and test for win64~ _(removed)_ * ~Build for arm64~ _(removed)_ GitHub Actions: * Build and test for win32 _(no change)_ * Build and test for win64 _(no change)_ * _Add arm64 build_ _(added)_ * Allowed to fail * This now matches what Azure Pipelines PR did # Questions @zooba Couple of questions: * [x] Would you like an arm64 build on Azure Pipelines CI? Edit: No * [x] Do we want the arm64 build on GitHub Actions? Edit: Yes <!-- gh-issue-number: gh-109408 --> * Issue: gh-109408 <!-- /gh-issue-number --> ::",Hugo van Kemenade,1324225,628,3,20,31,2,1,5d9894ec1c67643008f1c981282c341ae75cc35c::2b93f34623cdf44f9f4bfe6cb43aeb8d0e7bec13::47ceaec16f49a880d1f2aa101c01f7e30bc7c2f6::
https://api.github.com/repos/python/cpython,109568,patch-1::main,0,closed,awaiting review::,"Change the comment in first line, used # instead of """""" """""" <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> ::This is a doc string and hence is intentionally a string.::",Arnav Nagpurkar,84492896,8,1,1,2,1,0,7dc57e2882bb560ec1db94abd4c7b445ae6218f1::
https://api.github.com/repos/python/cpython,109567,buildbot_fail_rerun::main,0,merged,skip news::,"<!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-109566 --> * Issue: gh-109566 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,2,4,4,3,0,8dd5a566d8aab474e8dacce50d9650ca8f919d3c::fe69a52cc1d637fcc0eeb08f1f0de37d50fc73c7::
https://api.github.com/repos/python/cpython,109561,backport-f65497f-3.12::3.12,0,closed,skip news::,"(cherry picked from commit f65497fd252a4a4df960da04d68e8316b58624c0) ~Includes the other missing ones.~ <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-109125 --> * Issue: gh-109125 <!-- /gh-issue-number --> ::FYI, we didn't backport the https://github.com/python/cpython/pull/108090 to the 3.12 case_generator is highly dependent on CPython version (They have quite different designs of opcodes and execution detail) so it was not proper to backport it to 3.12 As a result, case_generator will have a quite implementation different per each version.::ditto::Thanks, updated to only include the `Tools/wasm` backport.::",Hugo van Kemenade,1324225,628,2,89,46,7,0,539da8e03c98710d80c9e9bb6b99c62be2c8b6b1::3c0f0f0972e829e37c97d4f3cf1838b0179c2ce1::
https://api.github.com/repos/python/cpython,109560,feature/Unicode-15.1::main,0,merged,topic-unicode::,"This changeset implements #109559, adding Unicode 15.1 support to the internal databases that support the `unicodedata` module. The bulk of this Unicode update is the addition of [a new CJK Ideograph Extension](https://www.unicode.org/charts/PDF/Unicode-15.1/U151-2EBF0.pdf), which requires updating the CJK ranges baked into the `makeunicodedata.py` tool and `unicodedata.c`. I have also taken the liberty of making the documentation of CJK Ideograph Extension ranges consistent between `makeunicodedata.py` and `unicodedata.c` (i.e. each range includes a comment naming the range). <!-- gh-issue-number: gh-109559 --> * Issue: gh-109559 <!-- /gh-issue-number --> ::The range check that occurs later in this file implicitly assumes this list is in sorted order. It seems simpler to have an idiosyncratic order here than to try to introduce `sorted()` or somesuch.::All the properties defined in `DerivedCoreProperties.txt` happened to be binary until the latest update, so this tool was getting away with the assumption that they are _always_ binary. As of Unicode 15.1, this file also includes definitions that use the [`Indict_Conjunct_Break` (`InCB`) property, which is an enumeration](https://unicode.org/reports/tr44/#Indic_Conjunct_Break). With this change, the loop skips over any non-binary properties, since we have nothing to do with them.::Can you keep the ordering here the same as in `makeunicodedata.py`, please?::It seems like it would be safer to explicitly ignore `Indict_Conjunct_Break` rather than throw out everything with a second column.::Is there a particular failure mode you have in mind? My rationale here was that the current internalized DB only cares about binary properties in this file, but in practice any of the [property types enumerated by UAX#44](https://www.unicode.org/reports/tr44/tr44-31.html#Type_Key_Table) could appear in a future revision. I'm not strongly opposed to ignoring the specific property that breaks the tool against the current revision, but my rationale was that it seems safer to prevent this class of failure in the future if/when additional non-binary properties are added.::",James Gerity,6125322,33,12,19006,18588,9,0,21e297c67674833eff5e15c90e8f4606212ea3a5::122a732e93352e4b020792aa3918ba1ddaf29413::6d5238e834340064fdaf50b7377e2fede0c63a4e::cd9cbf51eaf1651f41a10b8d84b2d01ff2ebc598::818a36c56f32d570ae3e353ab92fdeac8f47410e::24088ca4b7d3e25a4b0fb187048ea523999dce28::110c5522a3b23b981e4d9bf79dc622b8668ad99b::d8d9f980ecc40227d0f8464647328e68e1e4298d::27b1c13f04f4ec45e126b1cc7ff5b237dec0c80c::af730eb0862c0856afe4688bbdd191eaf718edc8::0db6920acd1a00cbeb088bd49bf7ce6e36e7bcaa::44f6770b94a381dac82b23008e0c09885806f501::
https://api.github.com/repos/python/cpython,109558,backport-ed582a2-3.12::3.12,0,merged,skip news::,(cherry picked from commit ed582a2ed980efba2d0da365ae37bff4a2b99873) Co-authored-by: Serhiy Storchaka <storchaka@gmail.com> <!-- gh-issue-number: gh-109469 --> * Issue: gh-109469 <!-- /gh-issue-number --> ::,Miss Islington (bot),31488909,73,1,2,1,1,0,c8b67c3481d3c8ce2122ce346c6b30b30cf37bd0::
https://api.github.com/repos/python/cpython,109557,backport-beb5ec5-3.12::3.12,0,merged,tests::skip news::,(cherry picked from commit beb5ec5817b645562ebbdd59f25683a93061c32c) Co-authored-by: Serhiy Storchaka <storchaka@gmail.com> <!-- gh-issue-number: gh-109546 --> * Issue: gh-109546 <!-- /gh-issue-number --> ::,Miss Islington (bot),31488909,73,1,35,2,2,0,379f0a27749b77944c42c9f7f28e9c3f562775f3::
https://api.github.com/repos/python/cpython,109556,fix-channels::main,0,merged,skip news::,"This fixes some crashes in the _xxinterpchannels module, due to a race between interpreters. (Backporting this to 3.12 will have to be done in a way that does not introduce the new `_PyCrossInterpreterData_ReleaseAndRawFree()` into the public ABI.) <!-- gh-issue-number: gh-76785 --> * Issue: gh-76785 <!-- /gh-issue-number --> ::",Eric Snow,1152074,290,11,98,67,7,0,fb807e3e4de811d064fa8566ffe6a8b3a57af1ba::e96eefcbcc68bf578edff475f6ee494102ba4b5f::53e102912576e847e7d1135fee4636fd66b8937c::8ef9b959d8059505b8a9ace8f654580a4ae743a3::daa7f32d4b8d8cdd448638c44bea5a8dd6d56e01::5d9445658c2647f25dfd9acee7170434720b1a55::c610c41cfd9cb8f3439e0aa8779e17c9ea71fa51::1d125033320311fec845bf39fb47878fecc63a30::0b5a84aa202a1ebaeeebcbc12e9ba0ad40cd609b::ac9d0dbd0d0b9a0fefefae9a1f3da392ffa695ae::f38f44b314afd0723b522fb1c66e83a9d56aaad5::
https://api.github.com/repos/python/cpython,109555,itertool_recipe_improvements2::main,0,merged,docs::skip issue::skip news::,"Misc minor improvements mostly to docstrings, comments, and order that the recipes are presented. <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--109555.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::",Raymond Hettinger,1623689,3560,7,42,34,1,0,0196c478830449d5d41fd25acf63240c481782a6::c83b02fdcc4b1857672a6663aa5c3f11295be598::f5a4aa014e88854d4d3a28a7c8a4f10e3e091fa0::19a0d77272ed62a9dd8d83c65e863c981686201f::6e10b4bc4e28556947ebc0943d41229604b0000a::700af2be5ed6f9ef52e4a13ace13fdb64709d1ed::da6bdc48b0700781484325404fb41a67f5a28d5b::
https://api.github.com/repos/python/cpython,109551,backport-c829975-3.11::3.11,0,merged,type-bug::skip issue::skip news::,(cherry picked from commit c829975428253568d47ebfc3104fa7386b5e0b58) Co-authored-by: Serhiy Storchaka <storchaka@gmail.com>::,Miss Islington (bot),31488909,73,1,9,2,1,0,9e8e018673b922bafa599ec7c74ee44ed3603a7c::
https://api.github.com/repos/python/cpython,109550,backport-c829975-3.12::3.12,0,merged,type-bug::skip issue::skip news::,(cherry picked from commit c829975428253568d47ebfc3104fa7386b5e0b58) Co-authored-by: Serhiy Storchaka <storchaka@gmail.com>::,Miss Islington (bot),31488909,73,1,9,2,1,0,5adce41df8836784597eb8b81769a8112dc5cc1f::
https://api.github.com/repos/python/cpython,109548,test_float_format_testfile::main,0,merged,tests::skip news::,"<!-- gh-issue-number: gh-109546 --> * Issue: gh-109546 <!-- /gh-issue-number --> ::I would prefer to just copy/paste the code to get the path here: ```py format_testfile = os.path.join(test_dir, 'formatfloat_testcases.txt') ``` I prefer to not make tests inter-dependents. Sometimes, just importing a test has side effects.::I suppose that such logic is used in other files using formatfloat_testcases.txt. Is there a good place to share common code? If we add mathdata/, can we add a helper function there which would iterate on the file and strip comments?::Maybe add a variable for ``fmt[1:]``.::I was going to add it in `test_float`, but it is simple enough, so I just copied it.::Done.::",Serhiy Storchaka,3659035,401,2,35,2,2,1,948747a9397fb06825d8257788b7941c541cb819::22245e4dd490c79ecc38aea7a30d8990169234d8::
https://api.github.com/repos/python/cpython,109547,totaldocs::main,0,merged,docs::skip issue::skip news::,<!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--109547.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::,Jelle Zijlstra,906600,635,2,15,0,1,0,afd8037f764ddd833574628fe12d43e0f577b2ae::39c49f78fe8264e4f3a7280c7e363d56a6b93b22::
https://api.github.com/repos/python/cpython,109545,backport-0bb0d88-3.12::3.12,0,merged,,"On a Python built in debug mode, Py_DECREF() now calls _Py_NegativeRefcount() if the object is a dangling pointer to deallocated memory: memory filled with 0xDD ""dead byte"" by the debug hook on memory allocators. The fix is to check the reference count *before* checking for _Py_IsImmortal(). Add test_decref_freed_object() to test_capi.test_misc. (cherry picked from commit 0bb0d88e2d4e300946e399e088e2ff60de2ccf8c) Co-authored-by: Victor Stinner <vstinner@python.org> <!-- gh-issue-number: gh-109496 --> * Issue: gh-109496 <!-- /gh-issue-number --> ::",Miss Islington (bot),31488909,73,2,56,16,4,0,a356eed91201af0c511c67aca43c18bf5a60f3aa::b63c8100ce219048d6da51220cb09ca383001936::
https://api.github.com/repos/python/cpython,109544,tdtotal::main,0,merged,,"Also added a new test case covering the scenario I thought this might be about. <!-- gh-issue-number: gh-109543 --> * Issue: gh-109543 <!-- /gh-issue-number --> ::I know you're not changing behaviour here, but are the precise semantics here specified anywhere? Mypy has some interesting behaviour here -- it treats all the keys present in `TD2` as required, but all the keys present in `TD1` as not required. That implies to me that `TD2` should _not_ be seen as a ""total"" `TypedDict`. https://mypy-play.net/?mypy=latest&python=3.11&gist=e7ef88dd8c2b5697297c4739d471ac45 The `__total__` attribute seems to be pretty meaningless these days, though, in a post-PEP-655 world: ```pycon >>> from typing import * >>> class Foo(TypedDict): ...     x: Required[int] ...     y: NotRequired[str] ... >>> Foo.__total__ True ``` Maybe we should treat that as a bug and make it meaningful. Or maybe we should just be clearer in the documentation that `__total__` doesn't indicate whether or not all keys in the `TypedDict` are required or not, it just literally indicates whether that specific `TypedDict` was constructed using `total=True` (but I'm not sure why that would be useful to anybody).::The mypy behavior is right; that was the way to mix Required and NotRequired keys before PEP 655. Agree that `__total__` isn't that useful and you should generally look at `__required_keys__` and `__optional_keys__`. However, I think the current behavior is right. If you do want to use `__total__` for introspection, you should look not just at the current class's attribute, but also those of base classes.::It's strange to me that we iterate through the base classes as part of the class construction in order to make sure we have accurate `__required_keys__`, `__optional_keys__` and `__annotations__` attributes on the produced class, but we don't do the same for the `__total__` attribute. (We probably _shouldn't_ be doing that for the `__annotations__` attribute, since that's not the way `__annotations__` works on any other class... but we do it anyway.) It seems very inconsistent to me.::Submitted #109547 with some enhancements to the docs.::",Jelle Zijlstra,906600,635,2,14,2,3,0,582152026afa44b011f353ea2a15ba0681099465::5ccf8fffa6ea523a85297b3755008fe73ec4325e::
https://api.github.com/repos/python/cpython,109542,backport-412f5e8-3.12::3.12,0,merged,,(cherry picked from commit 412f5e85d6b9f2e90c57c54539d06c7a025a472a) Co-authored-by: Tian Gao <gaogaotiantian@hotmail.com> <!-- gh-issue-number: gh-109371 --> * Issue: gh-109371 <!-- /gh-issue-number --> ::,Miss Islington (bot),31488909,73,1,33,2,4,1,e473bf5aea58f8248b474e525986bbb3bbc27f34::
https://api.github.com/repos/python/cpython,109541,backport-23f9f6f-3.12::3.12,0,merged,,(cherry picked from commit 23f9f6f46454455bc6015e83ae5b5e946dae7698) Co-authored-by: Shantanu <12621235+hauntsaninja@users.noreply.github.com> <!-- gh-issue-number: gh-108843 --> * Issue: gh-108843 <!-- /gh-issue-number --> ::,Miss Islington (bot),31488909,73,1,35,1,3,1,22b3431c73e8091fa37f4b28d9001b3503af9ede::
https://api.github.com/repos/python/cpython,109540,backport-4849a80-3.12::3.12,0,merged,skip news::,(cherry picked from commit 4849a80dd1cbbc5010e8749ba60eb91a541ae4e7) Co-authored-by: Erlend E. Aasland <erlend.aasland@protonmail.com> <!-- gh-issue-number: gh-102251 --> * Issue: gh-102251 <!-- /gh-issue-number --> ::,Miss Islington (bot),31488909,73,1,20,4,1,0,5dd10466aa4d2964386d998fb907379663813c65::
https://api.github.com/repos/python/cpython,109539,detect_double_decref::main,0,merged,,"On a Python built in debug mode, Py_DECREF() now calls _Py_NegativeRefcount() if the object is a dangling pointer to deallocated memory: memory filled with 0xDD ""dead byte"" by the debug hook on memory allocators. The fix is to check the reference count *before* checking for _Py_IsImmortal(). Add test_decref_freed_object() to test_capi.test_misc. <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-109496 --> * Issue: gh-109496 <!-- /gh-issue-number --> ::Is there a chance this could be an actual pointer to deallocated memory, or memory written to by another thread? Would it be safer to just call Py_DECREF on a fake object which is explicitly memset to 0xDD bytes?::I prefer to use a functional test: not mock anything here. This test is very fragile, it makes sure that a dangling pointer has a determinstic behavior. Problem: by definition, it has an undefined behavior :-) But in practice, almost always, the memory should remain around and should just be filled by 0xDD bytes. If tomorrow the test starts to fail randomly, sure, we can rewrite it by ""mocking"" the first DECREF() and just pass memory filled by 0xDD byte pattern. test_capi should not be run in a process with more than 1 thread. libregrtest works hard to make sure that previous tests don't leak tests. Also, it's strongly recommended to run tests with -jN: each test file is run in a fresh process, so with a known number of threads: just 1 :-)::",Victor Stinner,194129,1148,1,56,16,4,0,8ea43e966916dbd563ed96627b23264d5692e43f::
https://api.github.com/repos/python/cpython,109537,libregrtest_cwd::main,0,merged,skip news::,"<!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-109508 --> * Issue: gh-109508 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,1,10,1,1,0,8b7b36719e2bff5039b3b01d5baff94d7d3614b9::
https://api.github.com/repos/python/cpython,109536,backport-dd5d214-3.11::3.11,0,merged,skip news::,(cherry picked from commit dd5d2141abf78fcd787f12654f08bf1ee92288bf) Co-authored-by: Hugo van Kemenade <hugovk@users.noreply.github.com> <!-- gh-issue-number: gh-109408 --> * Issue: gh-109408 <!-- /gh-issue-number --> ::,Miss Islington (bot),31488909,73,1,2,2,2,1,66bf57a479fbd005183d0776178a92ef7b5bd638::
https://api.github.com/repos/python/cpython,109535,backport-dd5d214-3.12::3.12,0,merged,skip news::,(cherry picked from commit dd5d2141abf78fcd787f12654f08bf1ee92288bf) Co-authored-by: Hugo van Kemenade <hugovk@users.noreply.github.com> <!-- gh-issue-number: gh-109408 --> * Issue: gh-109408 <!-- /gh-issue-number --> ::,Miss Islington (bot),31488909,73,1,2,2,2,0,8aac67aece5ad779dc96c0d5d9c47077f841d93a::
https://api.github.com/repos/python/cpython,109533,gh-109469::main,0,merged,skip news::,<!-- gh-issue-number: gh-109469 --> * Issue: gh-109469 <!-- /gh-issue-number --> ::,Serhiy Storchaka,3659035,401,1,2,1,1,0,d9a9a25d1dec2b6dc388c8b63d7c7235aa84cf5b::
https://api.github.com/repos/python/cpython,109531,backport-ce5b3e1-3.11::3.11,0,merged,docs::skip issue::skip news::,(cherry picked from commit ce5b3e19e6fb940fa72db1b98a8df80f6e464265) Co-authored-by: Anthony Sottile <asottile@umich.edu> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--109531.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::,Miss Islington (bot),31488909,73,1,12,12,1,0,dda70b6238f208342ad987306da1b33a76df605b::
https://api.github.com/repos/python/cpython,109530,backport-ce5b3e1-3.12::3.12,0,merged,docs::skip issue::skip news::,(cherry picked from commit ce5b3e19e6fb940fa72db1b98a8df80f6e464265) Co-authored-by: Anthony Sottile <asottile@umich.edu> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--109530.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::,Miss Islington (bot),31488909,73,1,12,12,1,1,fa730439e72338cde459e2b05a8e627f5b42a667::
