https://api.github.com/repos/python/cpython,111143,regrtest_epoch::main,0,merged,,"If the SOURCE_DATE_EPOCH environment variable is defined, use its value as the random seed. <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-110932 --> * Issue: gh-110932 <!-- /gh-issue-number --> ::nit ```suggestion if ( 'SOURCE_DATE_EPOCH' in os.environ ```::Myabe we should always use `str`? There's no real reason to use `int` here.::If so, it would become: ```suggestion self.random_seed = str(random.getrandbits(32)) ```::The reason is subtle. It avoids to import hashlib to convert a string to an integer in Random.seed(). Right now, hashlib is always imported, but I have a local branch to reduce the number of imports at Python startup.::I'm talking about the second code path, where we create a random seed as an integer.::",Victor Stinner,194129,1148,1,75,22,4,0,55bf9f796c9c360989ca86a7a91891f35dab5ee4::
https://api.github.com/repos/python/cpython,111122,sqlite_asutf8::main,0,merged,skip news::,"PyUnicode_AsUTF8() now raises an exception if the string contains embedded null characters. <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-111089 --> * Issue: gh-111089 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,1,1,6,1,0,714c652082ab8bb81e248e0945e76039c9b349a9::
https://api.github.com/repos/python/cpython,111121,limited_asutf8::main,0,merged,,"Add PyUnicode_AsUTF8() function to the limited C API. multiprocessing posixshmem now uses PyUnicode_AsUTF8() instead of PyUnicode_AsUTF8AndSize(): the extension is built with the limited C API. The function now raises an exception if the filename contains an embedded null character instead of truncating silently the filename. <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-111089 --> * Issue: gh-111089 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--111121.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::Why not simply use the `str` converter?::Ah, I see why. `path` is passed to `PyErr_SetFromErrnoWithFilenameObject()`.::",Victor Stinner,194129,1148,1,23,16,9,0,e20557c711f27ff026a3b42fe57b2d3ae0ba14bc::
https://api.github.com/repos/python/cpython,111111,asyncio-taskgroups-timeouts-states::main,0,merged,topic-asyncio::,"asyncio.TaskGroup and asyncio.Timeout classes now raise proper RuntimeError if they are improperly used. * When they are used without entering the context manager. * When they are used after finishing. * When the context manager is entered more than once (simultaneously or sequentially). * If there is no current task when entering the context manager. They are now left in consistent state after raising an exception, so following operations can be correctly performed (if they are allowed). <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-111085 --> * Issue: gh-111085 <!-- /gh-issue-number --> ::```suggestion improperly used and are left in consistent state after this. ```::Looking at the list of states, this produces crooked grammar in several cases (active, expiring). Maybe ""Timeout cannot be entered in state X""? Or look at the error in reschedule() for inspiration.::A perfect staircase! :-)::Maybe `except BaseException as err: nonlocal exc; exc = err` ?::Thank you, I did not know that ""already active"" and ""already expiring"" are not valid. In TaskGroup it is simply ""has been already entered"" but I decided to enhance it. Technically, ""already entered"" should be enough. `reschedule()` also produces weird message (""Cannot change state of created Timeout""). How can you change state of not created Timeout?::Sorry, English grammar is hard. It should be ""has already been entered"".::",Serhiy Storchaka,3659035,401,7,120,9,6,0,a9c546fcb6ee284a1355ff17c9434a5c4a9ca792::3127e26470b8e62408bdbcddc3af4285cd54fdcd::5dfbb3d4b51335e2178988b064f49d483a945af0::ce732fba204c2a3934ff44b028bda2079a03706c::0b0bdb0108151097e595d891805d13b1105e8d8d::0285c70b76438374ee626d4142cdc6341a94d496::95673e63080fd995656175a8054d6994ccc29948::
https://api.github.com/repos/python/cpython,111106,asutf8andsize::main,0,merged,skip news::,"On error, PyUnicode_AsUTF8AndSize() now sets the size argument to 0, to avoid undefined value. <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-111089 --> * Issue: gh-111089 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--111106.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::```suggestion On error, set an exception, set *size* to ``0`` (if it's not ``NULL``) and return ```::",Victor Stinner,194129,1148,1,11,4,3,0,ae7734d64c266183e492c28a1c9b474f29f67daf::
https://api.github.com/repos/python/cpython,111093,tdemoroot::main,0,merged,,"Add missing 'root' argument to PanedWindow call.  Other root children already have it. <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-111092 --> * Issue: gh-111092 <!-- /gh-issue-number --> ::",Terry Jan Reedy,19036496,98,1,2,1,2,1,7ea0d4859078e535ce01f898483c12e14ea7b8e0::
https://api.github.com/repos/python/cpython,111091,asutf8::main,0,merged,,"* PyUnicode_AsUTF8() now raises an exception if the string contains embedded null characters. * PyUnicode_AsUTF8AndSize() now sets `*size` to 0 on error to avoid undefined variable value. * Update related C API tests (test_capi.test_unicode). * type_new_set_doc() uses PyUnicode_AsUTF8AndSize() to silently truncate doc containing null bytes. <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-111089 --> * Issue: gh-111089 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--111091.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::```suggestion if (utf8 != NULL && strlen(utf8) != (size_t)size) { ```::Was it necessary to change the type of the comment? Most comments here are `/* */`. It makes reviewing the changes more difficult.::`psize` can be NULL. I have added tests for this: #111100.::Oh I see. Thanks for additional tests. I moved this unrelated change to its own PR: PR #111106.::It's not necessary, but I take this PR as an opportunity to change the comment style. IMO multi-line comments written with ``// comment`` syntax are way easier to read.::```suggestion if (utf8 != NULL && strlen(utf8) != (size_t)size) { ```::",Victor Stinner,194129,1148,2,49,25,8,0,4e0b3d378ca0c82f5439fe960063cdf4dbdc3c7f::957c433446c9ad3f50495e4ded95cf70d2b7ca92::
https://api.github.com/repos/python/cpython,111087,posixshmem::main,0,merged,,"Build the _multiprocessing.posixshmem extension with the Limited C API. * Add <errno.h> include. * Replace PyUnicode_AsUTF8() with PyUnicode_AsUTF8AndSize(). <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-85283 --> * Issue: gh-85283 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--111087.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::",Victor Stinner,194129,1148,1,24,104,4,0,45ecc0c6f44f5cd33405e2f3178b9666b30ae54f::
https://api.github.com/repos/python/cpython,111083,main::main,0,merged,skip issue::skip news::,"<!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> ::",Ned Batchelder,23789,2120,1,1,0,1,0,3781c5b075a265e0604dca7323d7948476aed367::
https://api.github.com/repos/python/cpython,111080,backport-d144749-3.12::3.12,0,merged,skip news::,"(cherry picked from commit d144749914dbe295d71d037e8ca695783511123f) <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-101100 --> * Issue: gh-101100 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--111080.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::",Hugo van Kemenade,1324225,628,1,1,2,2,0,f842c3bff4eaef4413f614461516f8ed8ea440ca::
https://api.github.com/repos/python/cpython,111079,docs-fix-sphinx-tty::main,0,merged,skip news::,"<!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> Fixes these warnings: ``` Doc/library/termios.rst:44: WARNING: py:const reference target not found: TCSANOW Doc/library/termios.rst:44: WARNING: py:const reference target not found: TCSADRAIN Doc/library/termios.rst:44: WARNING: py:const reference target not found: TCSAFLUSH Doc/library/tty.rst:41: WARNING: py:const reference target not found: termios.TCSAFLUSH Doc/library/tty.rst:52: WARNING: py:const reference target not found: termios.TCSAFLUSH ``` (Some remain in `termios.rst` that can be handled later.) `termios.rst` renders like this: ![image](https://github.com/python/cpython/assets/1324225/8b39313b-5cf1-4bec-91e1-9b58cbeed390) <!-- gh-issue-number: gh-101100 --> * Issue: gh-101100 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews.readthedocs.io/en/latest/library/termios.html <!-- readthedocs-preview cpython-previews end -->::",Hugo van Kemenade,1324225,628,1,14,5,2,0,c34162b6d2ffa28ca44c7d3474d881c22f04eaa6::
https://api.github.com/repos/python/cpython,111070,backport-a89708a-3.12::3.12,0,merged,skip news::,"(cherry picked from commit a89708aeeaa32135dcde5b728800b9bc7801c80c) Co-authored-by: Nikita Sobolev <mail@sobolevn.me> <!-- gh-issue-number: gh-101100 --> * Issue: gh-101100 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--111070.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::```suggestion | uu_codec             | uu               | Convert the operand using    | :meth:`!uu.encode` /         | |                      |                  | uuencode.                    | :meth:`!uu.decode`           | ```::We can mention that they are deprecated (if there's enough space in the table)::Something like https://github.com/python/cpython/pull/111070/commits/828687752c8953727e0c9e5995a80a97b25d85c8? ![image](https://github.com/python/cpython/assets/1324225/93d9eff7-02cc-4665-bccc-69cf786ecfe1) Or as a `[2]` footnote?::1. seems better, if the whole table won't need a refactoring 2. is also fine 👍 ::I'll update the 3.11 backport to match this one.::",Miss Islington (bot),31488909,73,3,38,34,2,0,07a8d00c97ea9ee69da0f22379bf025adad15c2e::849bdc79940f1ccfbdf95180ade6da16d11c25de::828687752c8953727e0c9e5995a80a97b25d85c8::
https://api.github.com/repos/python/cpython,111053,theme_dict::main,0,merged,skip news::,"Replace tuple value with internal name, removing numbers. Remove sorting of already ordered dislay names. Remove '[0]' indexing into now-gone tuple. <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-111050 --> * Issue: gh-111050 <!-- /gh-issue-number --> ::",Terry Jan Reedy,19036496,98,2,22,24,2,0,870da37dbfefb6ce5177d44aad6a3b0100ae970d::7f048c5756ab3a78682d59be2f48a90927dd5611::
https://api.github.com/repos/python/cpython,111018,fix-issue-110383::main,0,closed,docs::awaiting review::skip news::,"<!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-110383 --> * Issue: gh-110383 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--111018.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::",James Garay,48111471,2,1,2,2,1,0,9dfea56fe533a00ddd379adf51329d80c3bfe75d::
https://api.github.com/repos/python/cpython,111017,gh-110961::main,0,merged,topic-asyncio::skip news::,"<!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> Simply removed that line. No need to add deprecation or other heavy information that already exist in the docs. <!-- gh-issue-number: gh-110961 --> * Issue: gh-110961 <!-- /gh-issue-number --> ::",Bar Harel,742359,13,3,0,2,1,0,7436618d0f1c16718f4214d1e804f5d79e30569c::8b9340c3d9413bb52066874df17306418ee1dda7::5d7a0d86300336031833f13cd7339dd65069fcef::
https://api.github.com/repos/python/cpython,111012,sphinx_oldest::main,0,merged,skip issue::skip news::,"Fix https://github.com/python/cpython/security/dependabot/4: use urllib3 version 2.0.7. <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--111012.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::",Victor Stinner,194129,1148,1,1,2,1,0,0192a949ec8368e7e2868f17214261fd2a306869::
https://api.github.com/repos/python/cpython,111011,regrtest11_distutils::3.11,0,merged,skip news::,"Restore code removed by recent sync with the main branch which no longer has distutils: commit 26748ed4f61520c59af15547792d1e73144a4314. <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-110756 --> * Issue: gh-110756 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,1,9,0,1,0,7d7dc7ae05a281eb0c67a2b68d789174ced024fd::
https://api.github.com/repos/python/cpython,111010,limited_uuid::main,0,merged,,"<!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-85283 --> * Issue: gh-85283 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--111010.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::",Victor Stinner,194129,1148,1,7,4,3,0,df0b87c6d0a9bda28df7c5b00199b886727421c6::
https://api.github.com/repos/python/cpython,111008,limited_scproxy::main,0,merged,,"* Replace Py_SETREF(v, NULL) with Py_CLEAR(v). * Reformat the code. <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-85283 --> * Issue: gh-85283 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--111008.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::",Victor Stinner,194129,1148,1,16,18,3,0,f3815b1c61fd60b95fe2be9024fb65d811103ef5::
https://api.github.com/repos/python/cpython,111005,ctypes_test_core::main,0,merged,skip news::,"Define Py_BUILD_CORE to not attempt to link the extension to python3.lib (which fails). <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-85283 --> * Issue: gh-85283 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,1,7,0,1,0,09c9071445adacb529550ec6d3ef5dd29e0404b3::
https://api.github.com/repos/python/cpython,111002,backport-c523ce0-3.11::3.11,0,merged,type-bug::,"(cherry picked from commit c523ce0f434582580a3721e15cb7dd6b56ad0236) <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-65052 --> * Issue: gh-65052 <!-- /gh-issue-number --> ::",Tian Gao,13121107,1366,2,64,7,3,0,a62005869e510cca6ab4a9a1a4bea2f7b369436c::f180b43402ca966bbf16f8242077c18c680c9dfa::
https://api.github.com/repos/python/cpython,110998,test_gdb::main,0,merged,tests::,"Fix detection of gdb built without Python scripting support. * check_usable_gdb() doesn't check gdb exit code when calling run_gdb(). * Use shutil.which() to get the path to the gdb program. <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-110995 --> * Issue: gh-110995 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,1,13,6,2,0,4c3e535e4304887d989078adad1d0740f5dbec5f::
https://api.github.com/repos/python/cpython,110997,whatsnew-3.13-pep602-more-support::main,0,merged,docs::skip news::,"<!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> [PEP 602](https://peps.python.org/pep-0602/) has been updated to give 3.13+ two years of full support (up from 1½) and three years of security fixes (down from 3½): * https://github.com/python/peps/commit/619e4e239383b5f59e34ebebc36278aebf599a5b * https://discuss.python.org/t/accepted-pep-602-annual-release-cycle-for-python/2296 <!-- gh-issue-number: gh-109975 --> * Issue: gh-109975 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--110997.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::I would prefer text in English text rather than Unicode characters (½). I'm not sure that it's easy to read for everybody.::Updated.::",Hugo van Kemenade,1324225,628,2,5,0,1,0,9c6adbedde24014e2bb4b3adcc7d78e0cf4c645a::e18d088b0b5c285f7bffbab114bc0f89c64d908e::
https://api.github.com/repos/python/cpython,110992,gh-109693-remove-header::main,0,merged,skip news::,"<!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-109693 --> * Issue: gh-109693 <!-- /gh-issue-number --> ::",Donghee Na,5110323,401,1,4,564,8,0,5e91b265b9c799b404fba8170fe5f9e058b165c9::
https://api.github.com/repos/python/cpython,110989,limited_resource::main,0,merged,,"* Replace PyStructSequence_SET_ITEM() with PyStructSequence_SetItem(). * Replace PyTuple_GET_SIZE() with PyTuple_Size(). * Replace PyTuple_GET_ITEM() with PyTuple_GetItem(). <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-85283 --> * Issue: gh-85283 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--110989.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::",Victor Stinner,194129,1148,1,38,36,4,0,35b1f2b986c594087b9ad58f2befc9af56659aa8::
https://api.github.com/repos/python/cpython,110982,clinic_output_templates::main,0,merged,skip news::,"<!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-110964 --> * Issue: gh-110964 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,1,53,56,1,0,e6cebdbb8be7a44ecfbcef06ffaa52beb4f53b86::
https://api.github.com/repos/python/cpython,110979,issue-101100-codecs::main,0,merged,skip news::,"Notes: - `uu` module was removed in 3.13, so I dropped `uu.encode` and `uu.decode` parts, since they no longer exist - There's a PR by @CAM-Gerlach with the deprecation notices to `codecs.uu_codec` https://github.com/python/cpython/pull/92758/ - I am not sure that `uu.encode` and `uu.decode` part should be backported. In the backport we can use `!` instead <!-- gh-issue-number: gh-101100 --> * Issue: gh-101100 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--110979.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::",Nikita Sobolev,4660275,4663,1,36,34,2,0,756a3b00776f50a0cdeb05772af7f1c58d956d3b::
https://api.github.com/repos/python/cpython,110978,limited_winsound::main,0,merged,,"Replace type->tp_name with PyType_GetQualName(). <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-85283 --> * Issue: gh-85283 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--110978.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::",Victor Stinner,194129,1148,1,30,151,8,0,41cf1a20a0013d6c4b02653697671287489f7f09::
https://api.github.com/repos/python/cpython,110976,fix_md5_clinic::main,0,merged,skip news::,"Limited C API supports the defining class under some conditions. <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-85283 --> * Issue: gh-85283 <!-- /gh-issue-number --> ::I know this formatting style predates your PR, but I find this quite hard to read, and I think the readability issue is probably at least in part why a bug crept in here. I'd find it easier to parse if we used a formatting style a little closer to what black might do: ```suggestion if limited_capi and ( pseudo_args or (any(p.is_optional() for p in parameters) and any(p.is_keyword_only() and not p.is_optional() for p in parameters)) or any(c.broken_limited_capi for c in converters) ): ```::This is just a refactor, right? I weakly prefer the existing code. Even though it's more verbose, it has a nice symmetry between the branches: `methoddef_cast_end` is set on each branch::I would prefer to have a kind of consistency in terms of coding style. If this block is changed, many other lines should be changed. For example, the style in this file is to put the operator at the end of a line, not at the beginning. I need this fix to unblock a large following change: PR #110966. Once I landed these changes, feel free to run Black, or change the coding style manually :-)::Well, I added methoddef_cast_end and I regret that I added it to all branches, since it's only needed in one branch. Yes, it's a minor coding style change. It doesn't change the code.::I only comment about formatting here because I think the poor readability was a contributing factor to why a bug crept in to these lines. But, sure, we can leave this for now :-)::I don't think that it was a bug. IMO my change is wrong :-) But I am not sure... AC is complicated and has a small test suite. Maybe recent changes for limited C API already cover all cases. Maybe not. I made the change because it prevented me to merge PR #110966: with this PR, md5 clinic code started again to use the internal C API which was wrong. I mean, it injected a `pycore_modsupport.h` which is incompatible with the limited C API, even if the include was not used.::> But, sure, we can leave this for now :-) I would suggest to run Black on the whole file, not just one a few lines.::",Victor Stinner,194129,1148,1,4,5,2,0,e50946f8441648f2de9fa92329f72da61e076743::
https://api.github.com/repos/python/cpython,110969,limited_gil::main,0,merged,skip news::topic-C-API::,"* Only add Py_MOD_PER_INTERPRETER_GIL_SUPPORTED to limited C API version 3.13. * errno, xxlimited and _ctypes_test extensions now need the limited C API version 3.13 to get Py_MOD_PER_INTERPRETER_GIL_SUPPORTED.  They now include standard header files explicitly: <errno.h>, <string.h> and <stdio.h>. * xxlimited_35: Remove Py_mod_multiple_interpreters slot, incompatible with limited C API version 3.5. <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-110968 --> * Issue: gh-110968 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,2,13,7,5,0,8a29b982f0f2de02a37f0d7bdb4a46f009995bd1::89b61592d7700f0eb7adc451739d79fc78296c15::
https://api.github.com/repos/python/cpython,110967,limited_md5::main,0,merged,,"* Replace _Py_strhex() with few lines of code. * Replace _PyType_GetModuleState() with PyType_GetModuleState(). <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-85283 --> * Issue: gh-85283 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--110967.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::",Victor Stinner,194129,1148,1,28,69,5,0,fcad07bb540e7ce14eb020fd302448f1b03c47a5::
https://api.github.com/repos/python/cpython,110966,pycore_modsupport::main,0,merged,skip news::,"Move the following private functions and structures to pycore_modsupport.h internal C API: * _PyArg_BadArgument() * _PyArg_CheckPositional() * _PyArg_NoKeywords() * _PyArg_NoPositional() * _PyArg_ParseStack() * _PyArg_ParseStackAndKeywords() * _PyArg_Parser structure * _PyArg_UnpackKeywords() * _PyArg_UnpackKeywordsWithVararg() * _PyArg_UnpackStack() * _Py_ANY_VARARGS() Changes: * Python/getargs.h now includes pycore_modsupport.h to export functions. * clinic.py now adds pycore_modsupport.h when one of these functions is used. * Add pycore_modsupport.h includes when a C extension uses one of these functions. * Define Py_BUILD_CORE_MODULE in C extensions which now include directly or indirectly (via code generated by Argument Clinic) pycore_modsupport.h: * _csv * _curses_panel * _dbm * _gdbm * _multiprocessing.posixshmem * _sqlite.row * _statistics * grp * resource * syslog * _testcapi: bad_get() no longer uses METH_FASTCALL calling convention but METH_VARARGS. Replace _PyArg_UnpackStack() with PyArg_ParseTuple(). * _testcapi: add PYTESTCAPI_NEED_INTERNAL_API macro which is defined by _testcapi sub-modules which need the internal C API (pycore_modsupport.h): exceptions.c, float.c, vectorcall.c, watchers.c. * Remove Include/cpython/modsupport.h header file. Include/modsupport.h no longer includes the removed header file. <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-110964 --> * Issue: gh-110964 <!-- /gh-issue-number --> ::or perhaps this? ```suggestion assert clinic is not None clinic.add_include('pycore_modsupport.h', '_PyArg_BadArgument()') ```::As explained in my previous comment, I plan to write a follow-up for this code. We should not use the global variable, but pass an argument which *cannot* be None.::Yes, I agree that's the more principled action in the longer term, and I'm fine with using the easier solution for now. But this is the same number of lines, and I think makes it clearer that we never expect `clinic` to be `None` here (if it is `None`, something has gone horribly wrong :-)::PR to refactor this code, to avoid `if clinic is not None`: PR #110982.::",Victor Stinner,194129,1148,2,510,228,166,0,46a846d0b9ce81b3c3bdac8c6b8a9d7b30211b75::8a4f9af1905fc43527017808fcbbd7fb28c23086::
https://api.github.com/repos/python/cpython,110960,dkeys::main,0,merged,skip news::,"Add comments where .keys() is needed. Leave debugger usages along because situation is unclear as indicated in expanded comment. Most testing is manual. <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-103737 --> * Issue: gh-103737 <!-- /gh-issue-number --> ::",Terry Jan Reedy,19036496,98,10,28,26,8,0,7bb15ecbba8d99928466f0fdf9016cdf6fcbcc0a::d5ffa71b57ee684e4d85c3b651d28745dadb411b::b1ba3d4deb204f4fcd3ff76885dbc2639510955a::f2afbe9bbf8b67b130daf53bbafa9237ed339ed1::b81b49054df8d423a33435d872e9f6bd3df3134c::43cc81a1f83d7524cfef4399bfcd2d7f59356454::bbca9a158f362cee59fc1efa94dcedfc1b75c111::8bae238e7f6945377cdfc435f6975cba8b570e1d::510f89963a07c5b7efb7b463e8be63026d5fb436::f620c86a7d72191d2f10a406cd76b97ed3167539::
https://api.github.com/repos/python/cpython,110955,errno_limited::main,0,merged,,"_testimportmultiple is now built with limited C API version 3.2. <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-85283 --> * Issue: gh-85283 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--110955.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::",Victor Stinner,194129,1148,1,45,40,5,0,7426fc659d4960a26b9662b7debe2df3051f05b9::
https://api.github.com/repos/python/cpython,110954,testimportmultiple::main,0,merged,,"<!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-85283 --> * Issue: gh-85283 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--110954.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::",Victor Stinner,194129,1148,1,8,4,3,0,da8afd490ca122d4b9c629bf830491939e3789d1::
https://api.github.com/repos/python/cpython,110952,test_asyncio_clock_res::main,0,merged,tests::topic-asyncio::skip news::,"Before utils.CLOCK_RES constant was added (20 ms), test_asyncio already used 50 ms. <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-110695 --> * Issue: gh-110695 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,1,2,2,1,0,1fbd24a6a94b2e73cca053052011a4fdedeea3ba::
https://api.github.com/repos/python/cpython,110951,issue-67565-2::main,0,merged,tests::skip news::needs backport to 3.11::needs backport to 3.12::,"<!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-67565 --> * Issue: gh-67565 <!-- /gh-issue-number --> ::",Furkan Onder,24194934,264,2,29,0,3,1,61d38946fd4bf23d7c53a8c1ecd0fb9d93eea9c5::b07cd39185b5029b9d82b5526a9d65e2552ce024::
https://api.github.com/repos/python/cpython,110940,unnecessary-overflow-check::main,0,merged,skip news::,"<!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-107450 --> * Issue: gh-107450 <!-- /gh-issue-number --> ::",Lysandros Nikolaou,20306270,38,1,0,6,1,0,769a4bddf5a4264e87e52cf4330271d2dfd03673::
https://api.github.com/repos/python/cpython,110939,backport-a1ac559-3.11::3.11,0,merged,skip news::,"(cherry picked from commit a1ac5590e0f8fe008e5562d22edab65d0c1c5507) <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-107450 --> * Issue: gh-107450 <!-- /gh-issue-number --> ::",Lysandros Nikolaou,20306270,38,1,40,29,4,0,01760a7ec7d5b902eda2ffa8f661618eda6c0774::
https://api.github.com/repos/python/cpython,110935,backport-110929-311::3.11,0,merged,skip issue::skip news::,"(cherry-picked from commit 02d26c4bef3ad0f9c97e47993a7fa67898842e5c) <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> ::",Alex Waygood,66076021,141,1,16,19,6,0,a1bbd1fc3af0ee345c6cfe794fda1dd4f3f8001e::
https://api.github.com/repos/python/cpython,110934,backport-110929-312::3.12,0,merged,skip issue::skip news::,"(cherry-picked from commit 02d26c4bef3ad0f9c97e47993a7fa67898842e5c) <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> ::",Alex Waygood,66076021,141,1,16,21,6,0,b94d9c89f8af9df6e735b72e3a91e6f08dfc098f::
https://api.github.com/repos/python/cpython,110931,backport-a1ac559-3.12::3.12,0,merged,skip news::,"(cherry picked from commit a1ac5590e0f8fe008e5562d22edab65d0c1c5507) <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-107450 --> * Issue: gh-107450 <!-- /gh-issue-number --> ::",Lysandros Nikolaou,20306270,38,2,40,29,4,0,99047c07dbe8f7c970070df59cf6d46df3b7729b::18e4807f0024238dac384d84ea198eae5efb479c::
https://api.github.com/repos/python/cpython,110908,issue-110907::main,0,merged,skip news::,"<!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-110907 --> * Issue: gh-110907 <!-- /gh-issue-number --> ::",Nikita Sobolev,4660275,4663,1,26,4,4,0,a009d38689c476c5b584436ccf31ed48745f16cc::
https://api.github.com/repos/python/cpython,110906,enum_private_check::main,0,merged,skip news::,"* Fix `enum._is_private` (bug + anti-bug) for triple underscore names * Rewrite `_is_sunder` check in the same style as `_is_private` * Remove unused variable `blanks` * Update docstring <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-110905 --> * Issue: gh-110905 <!-- /gh-issue-number --> ::Just remove this line. ```suggestion ```::```suggestion private_names = '_MyEnum__private', '_MyEnum__still_private', '_MyEnum___triple_private' ```::Move this up to the `private_names` line. ```suggestion random_names = 'okay', '_semi_private', '_weird__', '_MyEnum__', ```::```suggestion random_names = 'okay', '_semi_private', '_weird__', '_MyEnum__' ```::",Pieter Eendebak,883786,14,4,4,6,2,1,d1499e149943cdcba9e1bb83aafb808ae2963ab5::40327949e3c8289fd61cd765097058607b25fc9f::fc15c24b6b9261828164048a54d417843c8f13f4::8db1f861f18cc8801d438dbcb79971d07710fff4::
https://api.github.com/repos/python/cpython,110898,ruff-test_monitoring.py::main,0,merged,skip issue::skip news::,"<!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> The duplicated tests were fixed in https://github.com/python/cpython/pull/109139 for `main` and will be in https://github.com/python/cpython/pull/110897 for `3.12`.::",Hugo van Kemenade,1324225,628,1,0,2,1,0,5da866579404b577384db7d1c52497be732aa915::
https://api.github.com/repos/python/cpython,110897,backport-ea530f2-3.12::3.12,0,merged,tests::skip news::,"(cherry picked from commit ea530f2f9ae63e81c22a1818bec0a650ccf758d2) <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-106193 --> * Issue: gh-106193 <!-- /gh-issue-number --> ::",Hugo van Kemenade,1324225,628,1,7,7,1,0,15ea3d50e5e579342dac15dcecc0d9d206ccdec4::
https://api.github.com/repos/python/cpython,110895,clarify-arenas-size::main,0,merged,docs::skip issue::skip news::topic-C-API::,"From 3.10.0 alpha 7, the pymalloc allocator uses arenas with a fixed size of 1 MiB on 64-bit platforms instead of 256 KiB on 32-bit platforms. This is changed in https://github.com/python/cpython/pull/14474 (bpo-37448). The following links are the relevant lines in the C code for your reference. - https://github.com/python/cpython/pull/14474/files#diff-399a22135f328b4e42b0722ef216587945eedf2d8c103a584a3dca5b30650329R904-R906 - https://github.com/python/cpython/pull/14474/files#diff-399a22135f328b4e42b0722ef216587945eedf2d8c103a584a3dca5b30650329R927 <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--110895.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::",Mienxiu,82512658,21,1,2,1,1,0,05fb7e681186e4fdc093900f8fe6018f8abf5444::
https://api.github.com/repos/python/cpython,110887,patch-2::main,0,merged,docs::skip news::,"<!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-110886 --> * Issue: gh-110886 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--110887.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::Spell out on first use? ```suggestion `Backus–Naur form (BNF) <https://en.wikipedia.org/wiki/Backus%E2%80%93Naur_form>`_ grammar ```::",,23830955,4,2,2,1,1,0,c5cee5812f94fafd780e6e057332f31cb18d253e::7415e01942f3bb451a576b7f55fcc944fa162068::
https://api.github.com/repos/python/cpython,110873,http-lib-perf::main,0,closed,awaiting review::,"<!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> [main] perf: Lib.http.cookiejar performance improve Rewrite some list generate method. Rewrite function deepvalues.::",Tunglies,77394545,3,2,12,12,2,0,4829e2c86e86ea3e2db5ceb7baa7e3e1689a0e9b::e0af156fc8c93e96cd47757cc287bbea90c52577::
https://api.github.com/repos/python/cpython,110870,backport-5965891-3.11::3.11,0,merged,skip issue::skip news::,"Backport 5965891 3.11 <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--110870.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::",Thomas Grainger,413772,307,2,0,2,1,0,6efb9f2e9fcb9485571e9e332b8000331d0f3c01::3be5a44b1bdfebfbeafc0c181524f46a0974dd3b::
https://api.github.com/repos/python/cpython,110868,issue-110864::main,0,merged,needs backport to 3.12::,"This fix feels like a hack (basically as any other argument parsing fix) :) But, it seems to be semantically correct, do its job, pass tests. <!-- gh-issue-number: gh-110864 --> * Issue: gh-110864 <!-- /gh-issue-number --> ::",Nikita Sobolev,4660275,4663,1,130,2,5,1,c4ca210f12a18edbe30b91aeb6e1915d74936caf::
https://api.github.com/repos/python/cpython,110849,ci_no_rerun_fail::main,0,merged,skip issue::skip news::,"<!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> ::",Victor Stinner,194129,1148,1,0,2,2,0,7f08f8830ffdda98574c3c6d564106230d5dcf75::
https://api.github.com/repos/python/cpython,110847,redundant-attach-loop::main,0,merged,skip issue::skip news::,"PidfdChildWatcher and ThreadedChildWatcher both define a noop attach_loop method so the call is redundant I didn't think this PR requires an issue <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> ::",Thomas Grainger,413772,307,1,0,2,1,1,d266e0ace7aef0d84c961ed8df96cfeb5ab677f0::
https://api.github.com/repos/python/cpython,110840,quay.io::main,0,closed,skip issue::skip news::,"<!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> ::",Donghee Na,5110323,401,1,1,1,1,0,255e80f4fb3c9db94aead1c8d238a9affb4feeaf::
https://api.github.com/repos/python/cpython,110839,quay.io::main,0,closed,skip issue::skip news::,"<!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> ::",Donghee Na,5110323,401,1,1,1,1,0,df5d4c1d53436e18742f4c45dade95a0a09b913e::
https://api.github.com/repos/python/cpython,110837,gh-109693-finalizing::main,0,merged,skip news::,"<!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-109693 --> * Issue: gh-109693 <!-- /gh-issue-number --> ::Most code seems to write pointers as `PyThreadState *_finalizing`::",Donghee Na,5110323,401,2,3,4,1,0,22712eddcff5c7e2f49658e70b9eeeb30704bb71::5143b5a1f4ed8580c4e22bcf80f86ee5bd1b3892::
https://api.github.com/repos/python/cpython,110836,gh-109693-gil-api::main,0,merged,skip news::,"<!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-109693 --> * Issue: gh-109693 <!-- /gh-issue-number --> ::Hum, __int64 is larger than int, no?::> Hum, __int64 is larger than int, no? Hmm I am checking this: https://learn.microsoft.com/en-us/cpp/build/arm64-windows-abi-conventions?view=msvc-170::Yeah you are right, it should be 32bit.::``` *(volatile int *)obj = value; ```::``` __stlr32((unsigned __int32 volatile *)obj, (unsigned __int32)value); ```::``` return (int)__ldar32((unsigned __int32 volatile *)obj); ```::I think this should be: `const _Atomic(int)*`::Should only have the `_Py_atomic_store_int_release` call::Error message should say ""_Py_atomic_store_int_release""::Error message should say ""_Py_atomic_load_int_acquire""::Thanks, this is my mistake.::@colesbury Basically, int volatile * and volatile int* have the same meaning. So I just follow the convention from `_Py_atomic_load_ptr_acquire`::This test is strange. You should test the load() result, no?::I would prefer to mention a real symbol: ```suggestion #include ""pycore_atomic.h""        // _Py_ANNOTATE_RWLOCK_CREATE ``` Same remark in Python/thread_pthread.h.::It terms of memory alignment, is it safe to cast `int*` to `int32*`? Is it the same size? Please add: ``` _Py_atomic_ASSERT_ARG_TYPE(unsigned __int32); ```::",Donghee Na,5110323,401,19,86,18,8,0,1eb79142b9d975c1582173ebeef4c84a1bd2f5e9::6ad8d1b1fc2bf8d46e0a47521fcdffb1632b3515::7624da864a5ab7db61716d0ce680084032fb528a::efe778d33ff83042dc7384f19f07fd5a1fa26519::869a350442fc25d7eb7b1ad775dfbeeb2a0837fe::64196a852b53b0158e138aec66c4ec8f104f5435::bd7d3b1fe088c3fafc5dc9c3360c6c57c4c690c5::06847b62de0c00c90f028e25d1f614de6eca1f04::39989fc7dd377e1217e1ff6f85b507a1e11d3fe2::48cb6639c4b8267573cdcd197fd733dfcb23384c::89aa5b7c93d657f59cdb577bf43480354265288d::c0bdbc63d93f74bd2077a0170a9c82df7f621d15::fffdcff88ea5e78287aabea3170eb4ab897d9b04::061265e51b54ed1e7c26caf6423e4511e7eb66aa::b5d053950958624f9910435e05ae1984fc72dd88::e37e80da38c544dceb3e0752310f26bcca6b87f2::044570ebed4dcae4a4d087c4589585bf1192b73c::b067e13b6586b1903dc21a871f1e26854fbc4051::c58dfc80ab34933793a2d6c7d27a7af71234c1f1::
https://api.github.com/repos/python/cpython,110832,overflow-error-col-offset::main,0,merged,skip news::,"<!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-107450 --> * Issue: gh-107450 <!-- /gh-issue-number --> ::I think i need some context on why we need a new error code for this. Couldn't we just raise an exception and let it propagate?::I thought of doing it this way mainly because of consistency. The tokenizer does not raise any errors other than syntax or indent errors, instead it sets the error code when encountering decode errors, memory errors or other overflow errors. Do you think we should just raise directly? ::Hummm, I think it makes sense to not raise for consistency but I feel that this case may be too particular. In general I am afraid that we will eventually end with tons of error codes but that may be premature to consider. I trust your judgement here so let's go with this if you think this is the way to go 🙂::`ctypes` is optional.::See also #110871 that fixes other issues in this test.::Why not simply `tok->col_offset >= INT_MAX`?::Simply `_testcapi.INT_MAX`. It is better to substract `len(""pass"")` in the test code.::```suggestion @support.bigmemtest(INT_MAX, memuse=2, dry_run=False) def testMemoryErrorBigSource(self, size): src = b""if True:\n%*s"" % (size, b""pass"")  # bytes formatting is faster with self.assertRaises(OverflowError): compile(src, '<fragment>', 'exec') ```::Just to be sure that if someone else increases the col_offset, we will catch this as well. Otherwise, `tok->col_offset` would already have overflowed and it'd be `tok->col_offset < INT_MAX`.::If `tok->col_offset` is non-negative, `INT_MAX - tok->col_offset - 1 < 0` is the same as `tok->col_offset >= INT_MAX`. If `tok->col_offset` is negative, `INT_MAX - tok->col_offset` is an undefined behavior. Maybe write it as `(unsigned int)tok->col_offset >= (unsigned int)INT_MAX`?::I've pushed some changes. I don't know how to do bytes formatting and `b""%*s"" % (size, b""pass"")` does not work, I think.::`size` is always INT_MAX, so this condition is always false.::`_testcapi` is also optional. It can be missed in other Python implementations, while most of these tests are implementation agnostic. You need to provide a fallback. Or simply define `INT_MAX = 2**31-1`. sys.maxsize can be used instead of PY_SSIZE_T_MAX. ::``` >>> b""%*s"" % (10, b""pass"") b'      pass' ``` Did you miss some of `b`s?::Oh, that's what `dry_run=False` does? ::@serhiy-storchaka Any advice on this?::```suggestion src = b""if True:\n%*s"" % (size, b""pass"")  # bytes formatting is faster ```::Yup, I might have missed something. Sorry for the noise.::",Lysandros Nikolaou,20306270,38,6,40,22,4,1,16d508d3af886777f76d76ecf6d6fb9d9ac28cbb::c8433ca03c5065711c7b431dbdc196d567080543::e4a059e1db318425c24748afa4618f80bec89217::5d7c5a665f63e8c9e1bc1f6847f5a167e1087ed7::66d94be0d3ae4df5f35369fd31f47ab91e2f6550::f20b95f679d215d6e5b99929b721f6ef50d407b8::
https://api.github.com/repos/python/cpython,110818,main::main,0,merged,docs::topic-asyncio::skip news::,"<!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-110703 --> * Issue: gh-110703 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--110818.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::```suggestion Raises :exc:`TimeoutError` instead of :exc:`asyncio.TimeoutError`. ```::",,53006174,3,3,3,3,1,0,535078e5e35541e6c88e23abd67f1ce6ecab7d8e::48162e486fd46a5a775afc1379a9bde90825fbe6::a90a0ecfa059776e3fc063caa4218656802a6dbd::
https://api.github.com/repos/python/cpython,110813,gh-110803::main,0,merged,docs::skip news::,"- Cover the offset fields first - Mention the old alternative for MANAGED flags, which is needed to support older Pythons - De-emphasize the internal flags: use an inline list. - Add a note to PyMemberDef saying what to do with it (Not to be backported to 3.11, which doesn't have public `Py_TPFLAGS_MANAGED_*` flags.) <!-- gh-issue-number: gh-110803 --> * Issue: gh-110803 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--110813.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::",Petr Viktorin,302922,295,2,32,15,2,0,3a0b4b0eeeb0995259059ebfaa90d2e284fbb272::dacc9957d89d4fec3c09aa87765fdef81445c46a::
https://api.github.com/repos/python/cpython,110810,test_exceptions_memory_error::main,0,merged,tests::skip news::,"<!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-107450 --> * Issue: gh-107450 <!-- /gh-issue-number --> ::",Lysandros Nikolaou,20306270,38,1,1,1,1,0,d7ed284844c3ae7c406cef7a11e9aec58b520691::
https://api.github.com/repos/python/cpython,110801,gh-110800::main,0,closed,tests::awaiting core review::skip news::,"<!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-110800 --> * Issue: gh-110800 <!-- /gh-issue-number --> <!-- gh-issue-number: gh-107450 --> * Issue: gh-107450 <!-- /gh-issue-number --> ::I don't think this tests the correct thing. The buffer is way too small to overflow, probably a typo?::This should probably the other way around. If `sizeof(ssize_t) <= sizeof(int)` the cast is always safe, right?::Yep, I forgot it returns the number of bytes :sweat_smile: ::Yeah :upside_down_face:::This probably needs another merge, since a `_size` argument has been added. Also, it might be good to request the size of the buffer we want and then use that. Something like: ```python3 @support.bigmemtest(2 ** (ctypes.sizeof(ctypes.c_int) * 8), memuse=1) def testMemoryErrorBigSource(self, size): padding = '        ' * (size // 8) ```::Merge is needed for this as well. This doesn't check the regex anymore.::Don't we want to keep the regex to make sure we are actually finding the expected error? I don't think it matters that much anyway, though.::Done.::Windows 32-bit produces a different error message.::Yeah, the ""cannot fit 'int' into an index-sized integer"" one, but that's from the `' ' * 2**31` part, not what we intended, which is why this PR is now being careful with the `PySequence_Repeat` operation to not use a number bigger than `Py_ssize_t`. Am I missing something?::Oh right. My error.::No worries :smile: ::",Filipe Laíns,11718923,377,1,10,2,1,0,f932c9625f93f0bddceb337a1aabfb4327e37cbd::
https://api.github.com/repos/python/cpython,110792,gh-103480::main,0,merged,skip news::release-blocker::,"<!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-103480 --> * Issue: gh-103480 <!-- /gh-issue-number --> ::",Filipe Laíns,11718923,377,1,1,0,1,0,c27efe0aec189ebba72b364459a796556e2aa306::
https://api.github.com/repos/python/cpython,110791,gh-110786::main,0,merged,type-feature::topic-sysconfig::3.13::,"<!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-110786 --> * Issue: gh-110786 <!-- /gh-issue-number --> ::",Filipe Laíns,11718923,377,1,6,1,2,0,55983b06f4c2f42852f309c7eee176c474fdbf05::
https://api.github.com/repos/python/cpython,110790,asyncio_clear_watcher_threads::main,0,closed,tests::topic-asyncio::awaiting core review::skip news::needs backport to 3.11::needs backport to 3.12::,"ThreadedChildWatcher._join_threads() now clears references to completed threads. test_asyncio.utils.TestCase now calls _join_threads() of the watcher, uses SHORT_TIMEOUT to join a thread, and then raises an exception if there are still running threads. Rename also ThreadedChildWatcher threads to add ""asyncio-"" prefix to the name. <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-110205 --> * Issue: gh-110205 <!-- /gh-issue-number --> ::Why are you creating a new instance variable `self.threads` here? Did you intend to clean out completed threads from the dict `self._threads`?::I used the list comprehension above as an example, for me it looks easier to remove completed threads rather than having a regular list and removing items from the list. The purpose of this line is to remove completed threads to save memory and to fix the dangling threads issue.::Do you mean that you prefer to not create a new list?::I modified my PR to use ``self.threads[:] = ...``, so the self.threads list object is not replacd.::As I was trying to let you see for yourself, `self._threads` is a dict, not a list. If you want to update it using a comprehension you can use something like this: ``` self._threads = {key: thread for key, thread in self._threads.items() if thread.daemon or thread.is_alive()} ``` Please test locally before merging.::> Do you mean that you prefer to not create a new list? No I meant that the tests fail because `self._threads` is a dict, not a list.::",Victor Stinner,194129,1148,3,13,6,2,0,d414ed266bfc747d03ea9044ea0f662e2b388f1c::f161daafc1d9be2a96c6486f3924dabfb63eda76::dbbad2d163f835e06514a465d33b3d34c0d42c58::
https://api.github.com/repos/python/cpython,110789,test_timerfd_selector::main,0,merged,tests::skip news::,"Replace select.epoll() with selectors.DefaultSelector to support FreeBSD 14 and newer. * Merge common code between test_timerfd_epoll() test_timerfd_ns_epoll(). * Replace ""_ = func()"" with ""func()"". * Add TimerfdTests.read_count_signaled() method. <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-110697 --> * Issue: gh-110697 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,1,67,102,1,0,574b597f7d8b29e1e722a6802b50aa2e10370c9a::
https://api.github.com/repos/python/cpython,110781,regrtest11::3.11,0,merged,skip news::,"gh-110756: Sync regrtest with main branch Copy files from main to this branch: * Lib/test/libregrtest/*.py * Lib/test/__init__.py * Lib/test/__main__.py * Lib/test/autotest.py * Lib/test/pythoninfo.py * Lib/test/regrtest.py * Lib/test/test_regrtest.py Copy also changes from: * Lib/test/support/__init__.py * Lib/test/support/os_helper.py * Lib/test/support/testresult.py * Lib/test/support/threading_helper.py * Lib/test/test_support.py Do not modify scripts running tests such as Makefile.pre.in, .github/workflows/build.yml or Tools/scripts/run_tests.py: do not use --fast-ci and --slow-ci in this change. Changes: * SPLITTESTDIRS: don't include test_inspect. * Add utils.process_cpu_count() using len(os.sched_getaffinity(0)). * test_regrtest doesn't use @support.without_optimizer which doesn't exist in Python 3.11. * Add support.set_sanitizer_env_var(). * Update test_faulthandler to use support.set_sanitizer_env_var(). * @support.without_optimizer doesn't exist in 3.11. * Add support.Py_DEBUG. * regrtest.refleak: 3.11 doesn't have sys.getunicodeinternedsize. <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> ::",Victor Stinner,194129,1148,2,3712,2176,29,0,f452cdf08b926cb3c79394ccb788aa4e39e1dce2::710bdb6e1cd2ff60f8bca18a7d5ca369013676cb::
https://api.github.com/repos/python/cpython,110779,regrtest12more::3.12,0,merged,skip news::,"* Remove runtest.py and runtest_mp.py of Lib/test/libregrtest/. * Backport support._parse_memlimit(). <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-110756 --> * Issue: gh-110756 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,1,61,1228,4,0,d996ab5f34a52577d9e4b3f1d81edd300aa23bda::
https://api.github.com/repos/python/cpython,110768,overflowerror-windows-fix::main,0,merged,tests::skip news::,"<!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-107450 --> * Issue: gh-107450 <!-- /gh-issue-number --> ::```suggestion with self.assertRaises(OverflowError): ```::",Lysandros Nikolaou,20306270,38,3,3,1,1,0,c8de7b8ed46ade2156864565570a4b20232dd532::007a3566bd4ca8c2e6b8a0136eef26adbf70f664::97d9c5bbb1bfbfdbc5e39f07c0cacff5d720cf64::
https://api.github.com/repos/python/cpython,110766,backport-3d18034-3.11::3.11,0,merged,,"… (cherry picked from commit 3d180347ae73119bb51500efeeafdcd62bcc6f78) <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-110696 --> * Issue: gh-110696 <!-- /gh-issue-number --> ::",Pablo Galindo Salgado,11718525,847,2,1361,989,4,0,2a1d64e23f77f93f740baf241fedb9a6669b4442::f0280859056807d1f08f975860897796269d39bc::
https://api.github.com/repos/python/cpython,110765,backport-3d18034-3.12::3.12,0,merged,,"… (cherry picked from commit 3d180347ae73119bb51500efeeafdcd62bcc6f78) <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-110696 --> * Issue: gh-110696 <!-- /gh-issue-number --> ::",Pablo Galindo Salgado,11718525,847,1,1539,1173,4,0,e1b8f4ed5f46417a9836b657ae3b5ca54936511e::
https://api.github.com/repos/python/cpython,110758,regrtest12::3.12,0,merged,tests::skip news::,"Copy files from main to this branch: * Lib/test/libregrtest/*.py * Lib/test/__init__.py * Lib/test/__main__.py * Lib/test/autotest.py * Lib/test/pythoninfo.py * Lib/test/regrtest.py * Lib/test/test_regrtest.py Do not modify scripts running tests such as Makefile.pre.in, .github/workflows/build.yml or Tools/scripts/run_tests.py: do not use --fast-ci and --slow-ci in this change. Changes: * SPLITTESTDIRS: don't include test_inspect. * Add utils.process_cpu_count() using len(os.sched_getaffinity(0)). * test_regrtest doesn't use @support.without_optimizer which doesn't exist in Python 3.12. * Add support.set_sanitizer_env_var(). * Update test_faulthandler to use support.set_sanitizer_env_var(). <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-110756 --> * Issue: gh-110756 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,1,3372,980,23,0,c27abfb75d7265e3e556defddffb632bf057ff5f::
https://api.github.com/repos/python/cpython,110757,canalyzer-raise-clang::main,0,merged,skip news::,"<!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-106212 --> * Issue: gh-106212 <!-- /gh-issue-number --> ::",Lysandros Nikolaou,20306270,38,1,3,0,1,0,49b2f341673deaf73b87a7943f9009da27f62cf8::
https://api.github.com/repos/python/cpython,110754,int-overflow-parser-long-string-exec::main,0,merged,skip news::,"<!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-107450 --> * Issue: gh-107450 <!-- /gh-issue-number --> ::",Lysandros Nikolaou,20306270,38,3,10,0,2,0,9cd92ad636ec22a517d45b39856bf8ddfa3a31dd::50186785463c7d0e57c59a07ac1f1ea62118463e::f87e527e25f80eef7a35ed8119e3e0e74e7ac1e9::
https://api.github.com/repos/python/cpython,110750,gh-110749::main,0,merged,skip news::,"<!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-110749 --> * Issue: gh-110749 <!-- /gh-issue-number --> ::",Filipe Laíns,11718923,377,1,4,4,1,0,f613bd2d32372d1bf2022b2cef26f5c039cbb566::
https://api.github.com/repos/python/cpython,110741,backport-41d8ec5-3.11::3.11,0,merged,docs::skip news::,"Fix wrong indentation in the Doc/reference dir.. (cherry picked from commit 41d8ec5a1bae1e5d4452da0a1a0649ace4ecb7b0) <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-110631 --> * Issue: gh-110631 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--110741.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::",Ezio Melotti,25624924,146,1,78,76,4,0,30c858388420a1e28971fd1d515520c37ba80cc7::
https://api.github.com/repos/python/cpython,110739,backport-718391f-3.11::3.11,0,merged,docs::skip news::,"* Fix wrong indentation in the other dirs. * Fix more wrong indentation.. (cherry picked from commit 718391f475f2550d99dd794069ca76312f7f6aa6) <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-110631 --> * Issue: gh-110631 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--110739.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::",Ezio Melotti,25624924,146,1,51,53,7,0,9d36f00ca20513e1b551c0973ca6c6f89495cfdd::
https://api.github.com/repos/python/cpython,110738,backport-718391f-3.12::3.12,0,merged,docs::skip news::,"* Fix wrong indentation in the other dirs. * Fix more wrong indentation.. (cherry picked from commit 718391f475f2550d99dd794069ca76312f7f6aa6) <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-110631 --> * Issue: gh-110631 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--110738.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::",Ezio Melotti,25624924,146,1,51,53,7,0,e0baea8949be37e5d0d4279964699f7833de5c0b::
https://api.github.com/repos/python/cpython,110737,backport-bb7923f-3.11::3.11,0,merged,docs::skip news::,"Fix wrong indentation in the Doc/library dir.. (cherry picked from commit bb7923f556537a463c403dc1097726d8a8e1a6f2) <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-110631 --> * Issue: gh-110631 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--110737.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::```suggestion $ echo ""import this"" | python3 ```::",Ezio Melotti,25624924,146,2,920,914,33,0,809a6770d7b05de474873f961fe911ad28d96369::33e11ba893635a38108586641eee17127f15ec4b::
https://api.github.com/repos/python/cpython,110732,backport-732532b-3.12::3.12,0,merged,skip news::needs backport to 3.11::,(cherry picked from commit 732532b0af9d1b5c7ae4932526c8d20d86c15507) <!-- gh-issue-number: gh-108303 --> * Issue: gh-108303 <!-- /gh-issue-number --> ::,Nikita Sobolev,4660275,4663,2,15,7,11,1,f0002feede8acf7c4166f9234e6d72787e606215::e6cd31754c93a78160c14ff266cb528ff47f910c::
https://api.github.com/repos/python/cpython,110727,tokenizer-lexer-refactoring-test-peg-generator::main,0,merged,skip news::,"<!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-104169 --> * Issue: gh-104169 <!-- /gh-issue-number --> ::",Lysandros Nikolaou,20306270,38,2,24,14,10,0,2253a498c37c38ddacd0a5f92a760b28bfd2c06e::1c8a9f60858c105c4e3719e1d9e0a6e03cb616de::
https://api.github.com/repos/python/cpython,110726,revert-patchcheck/file-whitespace::main,0,merged,skip news::,"Re: https://github.com/python/cpython/issues/110652, revert PRs https://github.com/python/cpython/pull/109890 and  https://github.com/python/cpython/pull/109891 because we didn't find a portable solution that works on both macOS and Windows. I kept a couple of the string formatting (and whitespace) improvements: ```diff -    return ""{} file{}"".format(count, ""s"" if count != 1 else """") +    s = ""s"" if count != 1 else """" +    return f""{count} file{s}"" ``` ```diff -    cmd = ""git remote show {}"".format(remote_name).split() +    cmd = f""git remote show {remote_name}"".split() ``` (I suggest finding existing pre-commit checks that can do more-or-less the same thing as the patchcheck things. They don't necessarily need to be exactly the same.) <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-109408 --> * Issue: gh-109408 <!-- /gh-issue-number --> ::",Hugo van Kemenade,1324225,628,2,110,34,2,0,1f25035b8800bd063be6adbf598a5b38b97bd195::105b86c819214ca2ce165f37eac55cc45ff1c4be::
https://api.github.com/repos/python/cpython,110725,limited_api_build_core::main,0,merged,,"If the Py_LIMITED_API macro is defined, Py_BUILD_CORE, Py_BUILD_CORE_BUILTIN and Py_BUILD_CORE_MODULE macros are now undefined by Python.h. Only undefine these 3 macros after including ""exports.h"" which uses them to define PyAPI_FUNC(), PyAPI_DATA() and PyMODINIT_FUNC macros. <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-85283 --> * Issue: gh-85283 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--110725.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::",Victor Stinner,194129,1148,2,17,4,3,0,105fce130b02be961c6d54666e79d92b9ae5a751::8ae3173827775df23d0f13b0f3a66bf2348728b1::
https://api.github.com/repos/python/cpython,110723,add-asyncio-event-loop::main,0,merged,,"<!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-94597 --> * Issue: gh-94597 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--110723.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::```suggestion Uses the most efficient available event loop for the given ```::I think this ought to explain that it's an alias for one of the above classes, and that it's the one used by default, and that it's selected the way described above (L1689-90). ""Uses"" doesn't even explain that it's a subclass of AbstractEventLoop. Maybe we should be less specific about how the default is selected, and probably whatever we say about it should be only said once, but it should be made clear that this class is the default, and the default is this class.::```suggestion Added :class:`asyncio.EventLoop` for use with the :func:`asyncio.run` *loop_factory* kwarg to avoid calling the asyncio policy system. ```::maybe something like this? The other classes don't explain that they are subclasses of AbstractEventLoop, should that be explained in ProactorEventLoop and SelectorEventLoop? ```suggestion Uses the most efficient available event loop for the given platform. It is an alias for :class:`SelectorEventLoop` on Unix and :class:`ProactorEventLoop` on Windows. ```::Not quite. I don't like any sentence describing a class object starting with ""Uses"". Classes are nouns, and the description should explain what the class *is*, not what it *does*. Also, the current algorithm for choosing a default is now specified in two places. I think it should be specified only here (and the earlier text should be changed to claim that `EventLoop` is the class used by default). It's also a good idea to clarify that both concrete classes are subclasses of `AbstractEventLoop` (but if you're tired of going around in review you can skip that).::ok I've pushed a change with some doc tweaks::Only some platforms?::yep that's redundant https://github.com/python/cpython/blob/7dd3c2b80064c39f1f0ebbc1f8486897b3148aa5/Lib/asyncio/__init__.py#L42-L47 ```suggestion ```::",Thomas Grainger,413772,307,9,30,5,6,1,d2f7090a591e3c5f0cd8b30c017df0a7d24bebf0::47ea029e440752f8ac89bda8321570e58ea541f1::dc9cfeef46f95451e358c71ccc2c1a2b56724343::2beab6e030b30b6774f60a508538d03c8c8a44a2::6290284460535bdc89685c5648ef19e0f485fc98::ac27e1523424f98543dca532ed02fbbcae2f94dd::ad2c22ca53ddde015b1da1c2fec2c1adee18ccfc::27d96caf249d08ad8e7752e511aeef14b28b5f0f::afaecf2eb9011e7a67bc094da30904e8937aaaa3::
https://api.github.com/repos/python/cpython,110720,revert_notlo::main,0,merged,skip news::,"…mbed (#109581)"" This reverts commit 3e3a7da590e1c3e5f03802e538f26c5204889c82. <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-110313 --> * Issue: gh-110313 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,1,2,2,1,0,43950a6f78ecabf21428e0cf4b4b2d6fe083522b::
https://api.github.com/repos/python/cpython,110711,limited_stat::main,0,merged,,"The _stat C extension is now built with the limited C API. <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-85283 --> * Issue: gh-85283 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--110711.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::",Victor Stinner,194129,1148,1,9,0,3,0,a0cc4f5d894615582fde59df1206996ee68d991f::
https://api.github.com/repos/python/cpython,110702,traceback::main,0,merged,,"<!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-110721 --> * Issue: gh-110721 <!-- /gh-issue-number --> ::```suggestion class TracebackFormatMixin: ```::```suggestion if limit is None or builtin_limit: ```::Why did this need to change?::This is a NOP now.::This is a NOP.::```suggestion // Try first with the stdlib traceback module. ```::There is actually a `print_tb` function in the traceback module. Maybe rename this variable to avoid confusion.::`_PyRuntime.signals.unhandled_keyboard_interrupt = unhandled_keyboard_interrupt;`  is not done if we goto fallback above.::Discussed offline: in debug mode there is a fallback to the C traceback but we still want to see why we are falling back in case there is a problem in the traceback module itself.::After this change I don't think we're ever passing anything other than `0, """"` for `indent` and `margin`.::",Pablo Galindo Salgado,11718525,847,13,146,837,7,0,290280b62766a1f6d133c998a859dc3f65dee8c2::987988d6c6c5718a1825ebc9198b38d607f2f914::2292ab38c79910594d33f24fe4163ceb0fbc4fe9::2ab21688ce50298ff143f74d90fed63b2311d690::e15171777827ec7884a270c8877b832341b75b03::7d57970b6e3a7aff4404983c98b14963bdad4b34::c812a3c59c0f6cbc75dc887cb998539df1dd7d99::d55b7e766175e69ff137fd169f4e04151a9f2047::a65d281802dcb3fa93665c36b3dcb6a903bda808::4d438ecd915069451b54715372ddcf8b035a7988::dab41fb22e2896a58f702ab065387e96f842dc76::a6eb00e2ae8dd0621926cc20ae38e46c4143fc38::d74b83757cf5b7dd43d5ab9e79092937a20c6d28::
https://api.github.com/repos/python/cpython,110689,backport-0d805b9-3.11::3.11,0,merged,,"Co-authored-by: Hugo van Kemenade <hugovk@users.noreply.github.com> Co-authored-by: blurb-it[bot] <43283697+blurb-it[bot]@users.noreply.github.com> (cherry picked from commit 0d805b998ded854840f029b7f0c9a02eb3efa251) Like https://github.com/python/cpython/pull/110681, I removed the `-C` option for dis, as it's new in 3.13. Also include `cmdline.rst` (removing sqlite3 and uuid from the list, they're new in 3.12) and add the extra reST anchors. <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-108826 --> * Issue: gh-108826 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--110689.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::",Hugo van Kemenade,1324225,628,1,97,3,12,0,d1b2b1488b28839459ee642d6aa7ced32a9940ac::
https://api.github.com/repos/python/cpython,110684,tokenizer-lexer-refactoring::main,0,merged,,"* The lexer, which include the actual lexeme producing logic, goes into the `lexer` directory. * The wrappers, one wrapper per input mode (file, string, utf-8, and readline), go into the `tokenizer` directory and include logic for creating a lexer instance and managing the buffer for different modes. <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-104169 --> * Issue: gh-104169 <!-- /gh-issue-number --> ::@pablogsal This is the only change I did here. Instead of calling `underflow` according to stuff like `tok->str`, every tokenizer type passes in a callable that handles `underflow` in `_PyTokenizer_From*`. ::",Lysandros Nikolaou,20306270,38,12,3185,2988,29,0,99a2b40bd5c8cbe0fe5bf818b326f2ff22aceaab::39257a03f73d1d44d78444dc03589d7417c49244::a4190a9a8678f7a2b9afd60fbd8e5df53a2cd6a6::a949d15bb074e76b3310c335f99288c1001c3a5f::95662b8988f3e242c9bbc2f664c234dd4470638c::ec41b56271cd6159c4781c4279ca1c9bc98e2495::815cb3476817b00b4b87adaba00e1803553fda0b::20be8a0a97ff34474335175e235f4de1f11f776f::128fd0272967907a32299e47e4e5137e20a35cb5::df2c8cb9bfc86761fc06bdcd280cfd6ba8e59832::7e10dbf37eb72b57e107d48cd098e5037ae32144::aeeb5622be2b9d86b881628a9fa27e5a38cb45c5::
https://api.github.com/repos/python/cpython,110681,backport-0d805b9-3.12::3.12,0,merged,,"Co-authored-by: Hugo van Kemenade <hugovk@users.noreply.github.com> Co-authored-by: blurb-it[bot] <43283697+blurb-it[bot]@users.noreply.github.com> (cherry picked from commit 0d805b998ded854840f029b7f0c9a02eb3efa251) I removed the `-C` option for dis, as it's new in 3.13. Also include `cmdline.rst` and the extra reST anchors. <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-108826 --> * Issue: gh-108826 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--110681.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::Do you think it makes sense to rename the existing labels so that they are consistent across all modules?::It's tempting, but if we did, we should keep all the old ones to make sure no existing anchor links go 404.::",Hugo van Kemenade,1324225,628,1,95,3,12,0,0f0af013f22d8747ebbc511d4a88d6508ddce84e::
https://api.github.com/repos/python/cpython,110677,test_pty_writeall::main,0,merged,tests::skip news::,"Add write_all() helper function to test_pty to raise an exception on short write: if os.writes() does not write all bytes. It should not happen for a PTY. Let's check if this assumption is correct. <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-110673 --> * Issue: gh-110673 <!-- /gh-issue-number --> ::Why loop?::Oh. My first implementation (before I created this PR) actually implemented write_all(): retry os.write() until all bytes are written. But I was told that it must not happend, so I changed my PR to raise an exception instead. I will remove the loop until buildbots complete, before merging this change. At least, with this change, if the test hangs again, we will know for sure that no short write occurred.::",Victor Stinner,194129,1148,1,14,5,1,0,b5ebb45fba82814fd672d2107f6596deec46b62d::
https://api.github.com/repos/python/cpython,110667,mp_test_terminate_elapsed::main,0,merged,tests::skip news::,"multiprocessing test_terminate() and test_wait_socket_slow() no longer test the CI performance: no longer check maximum elapsed time. Add CLOCK_RES constant: tolerate a difference of 100 ms. <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-110666 --> * Issue: gh-110666 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,1,15,20,1,0,8a7e4ca56a8edc55fab4ff0a17e2c7a3b8cc9847::
https://api.github.com/repos/python/cpython,110663,mp_test_async_timeout::main,0,merged,tests::skip news::,"Increase timeout from 1 second to 30 seconds, if not longer. The important part is that apply_async() takes longer than TIMEOUT2. <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-110662 --> * Issue: gh-110662 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,1,1,1,1,0,8de390e8fd6498dcbe8ea15a214cdf1a06294fae::
https://api.github.com/repos/python/cpython,110661,test_timerfs::main,0,merged,tests::skip news::,"<!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-108277 --> * Issue: gh-108277 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,1,2,2,1,0,5f44f4f3979d80047a6003ffe8c3b75ed9182bd1::
https://api.github.com/repos/python/cpython,110657,test_logging_skip_fork::main,0,merged,tests::skip news::,"Skip test_post_fork_child_no_deadlock() if Python is built with ASAN. Add support.HAVE_ASAN_FORK_BUG. <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-110656 --> * Issue: gh-110656 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,1,15,10,4,0,054ec0ab25cfc10ed1470ca33040a23df1d72f80::
https://api.github.com/repos/python/cpython,110653,no-pre-commit-for-you::main,0,closed,awaiting review::skip news::needs backport to 3.12::,"<!-- gh-issue-number: gh-110652 --> * Issue: gh-110652 <!-- /gh-issue-number --> ::Also works without the `./`, any preference? ```suggestion entry: 'Tools/patchcheck/reindent.py --nobackup --newline LF' ```::```suggestion entry: ""Tools/patchcheck/untabify.py"" ```::It's cleaner without the `./`::",Erlend E. Aasland,13780613,72,2,4,4,1,0,6509e94959cdd2c9eb312ef8990bf877c8cac6a9::9501fab02da6da722b3cc4df3c8a55b89891b766::
https://api.github.com/repos/python/cpython,110650,test_signal::main,0,merged,tests::,"* cycle_handlers() now waits until at least one signal is received. * num_received_signals can be equal to num_sent_signals. <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-110647 --> * Issue: gh-110647 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,1,4,2,2,0,ee14a38e924c723319b8ef6fed1cde23027d476a::
https://api.github.com/repos/python/cpython,110646,backport-c2d542b-3.11::3.11,0,merged,skip news::,* gh-108303: Move all certificates to `Lib/test/certdata/` (GH-109489) (cherry picked from commit e57ecf6bbc59f999d27b125ea51b042c24a07bd9) Co-authored-by: Nikita Sobolev <mail@sobolevn.me> Python 3.12 backport: update also `test_nntplib`. (cherry picked from commit c2d542b42cd109d81c0308f9c4437c38ac74d2e0) Co-authored-by: Miss Islington (bot) <31488909+miss-islington@users.noreply.github.com> Co-authored-by: Nikita Sobolev <mail@sobolevn.me> Co-authored-by: T. Wouters <thomas@python.org>::,Miss Islington (bot),31488909,73,1,32,29,42,0,bbd4bd9807be58be5aec648180132fe19499d06b::
https://api.github.com/repos/python/cpython,110639,gh-109595-process::main,0,closed,awaiting review::,"<!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-110649 --> * Issue: gh-110649 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--110639.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end --> ::```suggestion If *n* is ``default``, nothing is overridden. If *n* is ``process``, ```::That's wrong. It's the opposite: os.cpu_count becomes an alias to os.process_cpu_count. No? I don't see why you mention multiprocessing.cpu_count(). -X cpu_count=process has no effect on multiprocessing.cpu_count(), since multiprocessing.cpu_count() calls os.process_cpu_count(). No?::Ah got it, I missed::",Donghee Na,5110323,401,5,28,4,7,0,920fb835f19f30d6b27484decf2c8aca44d7d770::4832a782b0cc7dbf43a287a384fb524ef9fe1e20::a954a560a54d9a0799d799f06a201e6196ec9aa6::fe829b85e65b7d69c6fd82fd65d7acd73584f6bc::0967c522ae93e8fceb995485613f4f6ad1b8ae5d::
https://api.github.com/repos/python/cpython,110635,editorconfig-rst::main,0,merged,skip news::,"<!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> https://devguide.python.org/documentation/style-guide/#use-of-whitespace says: > All reST files use an indentation of 3 spaces EditorConfig is read by many editors, and there are plugins for others, so helps avoid incorrect tabs in reST files. https://editorconfig.org/ <!-- gh-issue-number: gh-110631 --> * Issue: gh-110631 <!-- /gh-issue-number --> ::",Hugo van Kemenade,1324225,628,1,3,0,1,0,82f4745f6ba4f4d461811c076e1edbceb364caf6::
https://api.github.com/repos/python/cpython,110634,backport-7f702b2-3.11::3.11,0,merged,tests::,"(cherry picked from commit 7f702b2) <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-110388 --> * Issue: gh-110388 <!-- /gh-issue-number --> ::",Serhiy Storchaka,3659035,401,1,61,0,2,0,fc6101b272b95f8da7a6cec2a435bf978605ee7a::
https://api.github.com/repos/python/cpython,110630,issue-110525-internal::main,0,merged,skip news::needs backport to 3.12::,"<!-- gh-issue-number: gh-110525 --> * Issue: gh-110525 <!-- /gh-issue-number --> ::You can use `Py_BuildValue(""nOn"", count, item, (Py_ssize_t)h)`. It will save 11 lines of code.::On other hand, why return `count`?::I would write test similarly to the test for `PyDict_Next()` -- implement a wrapper for single step and call it repeatedly in Python code.::```suggestion Py_hash_t hash = (Py_hash_t)UNINITIALIZED_SIZE; ```::What if it returns 2 or -2? ```suggestion if (rc != 0 && rc != -1) { ```::```suggestion if (rc == -1) { ``` Otherwise returning -1 without setting error will pass unnoticing.::```suggestion assert(item == UNINITIALIZED_PTR); assert(hash == (Py_hash_t)UNINITIALIZED_SIZ); ```::The key, its hash, and pos are the same. It is easy to make mistake in test and compare wrong value. Could you use strings? As a bonus, you will get different order and hashes on every run.::It is meaningless, because it is created by the wrapper, not the tested C API.object.::Also store items, and compare the accumulated result with `list(instance)`. It will test that 1. All items are yielded. 2. Every item was yielded only once. 3. The order of iteration is the same as in normal iteration (and not reversed order or insertion order, for example).::Sorry, I don't understand this one. Right now it is defined as: https://github.com/python/cpython/blob/66a9b1082049855889854bfde617059499c26dd2/Objects/setobject.c#L2332-L2346 It cannot return anything except `[-1, 0, 1]`. Do you mean that it can return something other than `[-1, 0, 1]` in the future? I think that our test case must catch this change and be adapted if needed. This function is not documented currently.::The purpose of the test is to verify our assumptions (that it cannot return anything except [-1, 0, 1]). Otherwise there would not be need of tests. In future a new return can be added in the code, or refactoring can lead to returning non-initialized variable in rare case. The wrapper will successfully return None.::Got it, I used an assertion, which is more readable in my opinion 👍 ::",Nikita Sobolev,4660275,4663,4,117,3,6,1,f82ca467553e84647aa3a64985528248af6ea67c::338d340eaac7b42f377b184474e74bae2a42b527::21ca91f6fea7d6edbe8ff9765c881d146b8741a1::e4ff92bd88d344fc5b2a3f3390fc69b4ba684a46::
https://api.github.com/repos/python/cpython,110605,gh-109693-gil::main,0,merged,skip news::,"<!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-109693 --> * Issue: gh-109693 <!-- /gh-issue-number --> ::@vstinner @colesbury https://github.com/python/cpython/blob/982f1b7d6dc2f13b9607ce092e36e32972e3702c/Python/ceval_gil.c#L179 https://github.com/python/cpython/blob/982f1b7d6dc2f13b9607ce092e36e32972e3702c/Python/ceval_gil.c#L194 IIUC, To update `locked` field we need to introduce `_Py_atomic_load/store_int_release/acquire` Do you have better ideas?::It sounds like a good idea, for another API EDIT: Oops, I wrote PEP not API, sorry about that :-D Need more coffee.::",Donghee Na,5110323,401,1,9,9,2,0,fa41125b51c01ed156be2e4e926d534ca87f1907::
https://api.github.com/repos/python/cpython,110604,gh-109693-interp::main,0,merged,skip news::,"<!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-109693 --> * Issue: gh-109693 <!-- /gh-issue-number --> ::",Donghee Na,5110323,401,1,3,4,1,0,5b1c6ec38713b053da9eeba3cdb660b36f7f8055::
https://api.github.com/repos/python/cpython,110575,backport-f4cb0d2-3.11::3.11,0,merged,,"(cherry picked from commit f4cb0d27cc08f490c42a22e646eb73cc7072d54a) <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-109191 --> * Issue: gh-109191 <!-- /gh-issue-number --> ::",Bo Anderson,1190754,90,1,36,1,5,0,31b6aa76491e85b569119d0778809afe18c3384e::
https://api.github.com/repos/python/cpython,110559,ruff-arg-clinic::main,0,merged,skip news::,"<!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-110558 --> * Issue: gh-110558 <!-- /gh-issue-number --> ::Could you add comments for each magic id here? I have no clue what these mean :)::yes, sure!::Added in https://github.com/python/cpython/pull/110559/commits/485c5485df9e8a219b4913eecf996d143c3846e8 -- just went for short one-liners since the full descriptions are pretty easy to find at https://docs.astral.sh/ruff/rules/#pyflakes-f :)::",Alex Waygood,66076021,141,6,21,4,5,1,dec89bc79b53547888db5668cf19ac33a383ab92::b52e2d4f8a88b3b957999cefb5cef04a8c6f4ad9::ead758746e6868ef00876b22fb40c5230a88835d::75c7a56f164d0fc3149e32bc42d7c0e7d2a7debc::485c5485df9e8a219b4913eecf996d143c3846e8::5850844afa3a02901ae1028d8b9699308802b840::
https://api.github.com/repos/python/cpython,110535,patch-1::main,0,merged,docs::skip news::,"<!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-110534 --> * Issue: gh-110534 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--110535.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::",,23830955,4,1,1,1,1,0,e3218efc19e5f0294aaadf4dfc6cd0498f662b86::
https://api.github.com/repos/python/cpython,110524,sys-profile-throw::main,0,merged,,"`sys.setprofile` suffers the same issue as #106161 - it does not record `PY_THROW` events. So when the generator is garbage collected, the count is wrong. For `profile` module, that means an assertion is raised. This needs backporting. <!-- gh-issue-number: gh-110514 --> * Issue: gh-110514 <!-- /gh-issue-number --> ::",Tian Gao,13121107,1366,2,27,1,3,0,26741579d5af282e5aa6be4836023ffc34b603fa::30f62b12edad30436134866253bf74473868ec19::
https://api.github.com/repos/python/cpython,110515,test_timerfd::main,0,merged,tests::skip news::,"* test_timerfd_TFD_TIMER_ABSTIME() and test_timerfd_ns_TFD_TIMER_ABSTIME() tolerate a difference of 50 us. * test_timerfd_negative() checks if os.TFD_TIMER_CANCEL_ON_SET is defined. <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-108277 --> * Issue: gh-108277 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,1,11,3,1,0,5f17c7c2a6fb92ddfd36436843d65a8722a80661::
https://api.github.com/repos/python/cpython,110509,patch-1::main,0,merged,docs::skip issue::skip news::,"This commit removes a ':'. I believe the extra colon causes a display error. What I believe to be an error: Above this expression `round(math.pi, ndigits=2) == round(22 / 7, ndigits=2)` the page displays `.. doctest::`. What I observed: After I remove the extra colon, the page does not display `.. doctest::` <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--110509.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::",,47086307,1,1,1,1,1,1,b1154df8bed458367be3ff5fe7bae4b60ed7f9ea::
https://api.github.com/repos/python/cpython,110492,Agentofchaoss-patch-2::main,0,closed,awaiting review::,"<!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> ::syntax error at line 25::",John Gotti Sr.,109058188,0,5,90,0,1,0,42b6a1384ae26aad37b29b175c4c61cdb16f7c9f::00de4d4e1327130a78bd8f7635fd3930ce1ad5ec::287adac4fc5319107d1fdd19d34ac9d20725c54c::d2cab4c4a0be60d3d2684c998a3feb1049718ba0::468b6c00f7b2e9840e1b0acf283d3be406943812::
https://api.github.com/repos/python/cpython,110487,issue110455-thread_id-is-zero::main,0,merged,,"<!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-110455 --> * Issue: gh-110455 <!-- /gh-issue-number --> ::",Brett Cannon,54418,1953,2,5,2,2,1,9e85366c5de278e08bf4016584be326d3a6539f6::945132223a8670b793cd2cce5dba0e5af104e5b7::
https://api.github.com/repos/python/cpython,110486,Agentofchaoss-patch-1::main,0,closed,awaiting review::,"<!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> ::",John Gotti Sr.,109058188,0,2,66,0,1,0,57bbc9a79f4ef7b038c5ccb1f957a1b85e6f4753::9efd46501bb6af5f4fa474eb36881cac5d775565::
https://api.github.com/repos/python/cpython,110485,patch-1::main,0,closed,docs::skip issue::awaiting core review::skip news::,"The presence of a double colon is causing `.. doctest::` to display in Tutorial 15, **Floating Point Arithmetic: Issues and Limitations** doc: https://docs.python.org/3/tutorial/floatingpoint.html ![image](https://github.com/python/cpython/assets/9964605/9581df9f-ad66-4642-8bcf-9b79f767db4f) Removing the colon should allow it to parse the directive properly. <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--110485.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::",Galen Rice,9964605,28,1,1,1,1,0,affe4d70612eb5c608f476ad4bf65c10929e6938::
https://api.github.com/repos/python/cpython,110484,Agentofchaoss-patch-1::main,0,closed,awaiting review::invalid::,"<!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> ::",John Gotti Sr.,109058188,0,1,3,0,1,0,1d63ceb85ce14667b2b54c511b604d29dadc20a0::
https://api.github.com/repos/python/cpython,110483,Agentofchaoss-patch-2::main,0,closed,awaiting review::invalid::,"<!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> ::",John Gotti Sr.,109058188,0,2,90,0,1,0,42b6a1384ae26aad37b29b175c4c61cdb16f7c9f::00de4d4e1327130a78bd8f7635fd3930ce1ad5ec::
https://api.github.com/repos/python/cpython,110480,gh-109693::main,0,merged,skip news::,"<!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-109693 --> * Issue: gh-109693 <!-- /gh-issue-number --> ::It looks like `func` is always `PyObject*`. It might be cleaner to declare it as such and use `_Py_atomic_load_ptr`/`_Py_atomic_store_ptr` instead of operating on `uintptr_t`.::Makes sense!::@pitrou: I don't get why Handlers tripped uses ""relaxed"" order, whereas is_tripped uses ""sequentially consistent"" order. What's the rationale? Would it be safer to use ""sequentially consistent"" order  for both?::AFAIR, it is because the sequentially consistent `is_tripped` already acts as a barrier and we don't another barrier. But, yes, using ""sequentially consistent"" for both would be at least as safe, so feel free to make the change. cc @gpshead for opinions::I would like to suggest to leave it as relaxed as possible since ""sequentially consistent"" requires more overhead than relaxed.::@corona10: If one memory barrier is enough, can you please just add a comment somewhere in the C file to explain the rationale why one variable is accessed with ""relaxed"" order, and the other ""required"" ""sequentially consistent"" order?::https://github.com/python/cpython/pull/110480#discussion_r1349538339 @vstinner Enough or do you want to explain in other way?::Hum, maybe move this comment at the top of trip_signal(), since it's the function which writes into these two variables.::I'm mostly curious about setting tripped and then set is_tripped. How/why it's ok to use relaxed to set tripped, but why is_tripped requires a memory barrier. I don't get why you mention ""func"" here, since get_handler() and set_handler() don't use relaxed but ""sequentially consistent"" order to get/set it.::> I don't get why you mention ""func"" here, since get_handler() and set_handler() don't use relaxed but ""sequentially consistent"" order to get/set it. Mistake::> I'm mostly curious about setting tripped and then set is_tripped. How/why it's ok to use relaxed to set tripped, but why is_tripped requires a memory barrier. Hmm change my mind, let's change the implementation of the usage. It looks quite an implementation detail, so can make mistakes anytime.::I changed my mind: Depending on specific variables, the memory barrier can be dangerous if someone is not familiar with atomic programming or if we lose the history. To prevent future incidents by human, I changed the implementation to use ""sequentially consistent"" order for the case.::I suggest to remove the comment here, and *maybe* add a comment in set_handler() to mention the relationship with PyErr_SetInterrupt().::In a following PR, it may interesting to also change how 'wakeup' members are accessed. When I modified the code, I used ""volatile"" since I didn't want/couldn't use pycore_atomic API. Now with pyatomic.h, there are enough API to access members of this structure with atomic functions.::Done::+1::Since the `_Py_atomic` types are not used anymore, can you add comments mentioning that these fields must be accessed using atomic ops?::Done!::```suggestion /* Speed up sigcheck() when none tripped. is_tripped should be accessed using atomic ops. */ ```::Nit :-) ```suggestion // tripped and func should be accessed using atomic ops. ```::",Donghee Na,5110323,401,10,26,27,3,0,a7474421bb379e036dd131493bef08cb950a77ed::544fe847140aea1f42a1cd150776ff7baeecdbf5::86b97a5a857bdcbeaddf0edbcedcfd369c238f13::4a8c0b3cec61f36b5358232857c063d20cfafb88::3696f01993c6ced3fa84a7eebeea2ea0aab7451a::e19a4378b4f572458940b65093b2d5e9d96d37e8::bb3dae2003e4569e561814f310b01e62c740d9a2::0750bbbbb6676a225f4037624b2fbd6504549f72::4d6e5ea85b36b123522d444add58cd9d39827c12::3610ae674a5faa88183e31653e7d539891cc5bba::
https://api.github.com/repos/python/cpython,110477,gh-109693::main,0,closed,skip news::,"<!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-109693 --> * Issue: gh-109693 <!-- /gh-issue-number --> ::",Donghee Na,5110323,401,2,2,3,1,0,0616eafa2e440ab81065bf966348ad8dc8217e30::ade5b198b778e992f0a2ca40a0e74e3b1ab6532e::
https://api.github.com/repos/python/cpython,110476,curses-form::main,0,closed,awaiting review::,"<!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> ::",Chris Dorsman,39407105,0,4,0,0,0,0,3cab6d867e2fab56fe09afe1be3cd18fb80c3762::00a94108b27c81c904afcd649ebbeba7863e0899::c95e4b0367881f23b0aec51a121be32472bad148::e9c79f54a9a665afa3523ce1cf29a2b64682dbf1::
https://api.github.com/repos/python/cpython,110475,isolate-datetime/part1-establish-global-state::main,0,merged,skip news::,"- Establish global state - Put singletons in global state <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-71587 --> * Issue: gh-71587 <!-- /gh-issue-number --> ::I would prefer a name like get_datetime_state().::I suggest to rename to `datetime_epoch` or even just `epoch`.::I suggest to rename to `timezone_utc` or just `utc`.::```suggestion static datetime_state _global_datetime_state; ```::Yeah, since we're moving these, we could just as well shorten their names.::Why? It's file local.::I suggest `tz_utc`.::Well, timezone is implied, so `utc` is fine.::I prefer to use `GLOBAL_STATE` for now, for the following reasons: - It is a reminder that we're using global state, not module state - It is easy to grep for when we start converting global state to module state::It helps me in gdb when I debug C files with same names :-) I can inspect different variables without having to to go a _datetime frame.::Makes sense; you convinced me :) ::I don't think that ""interned"" is correct or important here. But it would be useful to mention its value: ``` datetime.datetime(1970, 1, 1, tzinfo=datetime.timezone.utc) ``` You may mention that it's also the Unix epoch ;-) https://en.wikipedia.org/wiki/Unix_time::I suppose that you will soon move it somewhere else, not make it ""global"", but maybe ""per interpreter"". I suggest a name which doesn't say ""global"". I suggest: ""get_datetime_state()"". It may make following changes shorter.::Please add `utc = NULL` to make it more explicit that st->utc becomes the new owner the reference.::I deliberately did not alter the comments. I'm not sure it matters to remove ""interned"" or not; as you say, it is not important. Clarifying that ""epoch"" is the ""Unix epoch"" is ok, although I'd expect most C developers to be familiar with that term.::Better to use `Py_SETREF`. ```suggestion Py_SETREF(st->utc, utc); ```::Well, I disagree; I think it is important to communicate that this is not module state. Perhaps the macro can be named `STATIC_STATE` instead. It communicates status quo perfectly: - state is stored in a static global variable - state is fetched using a macro::Oh, of course; that won't work 😆 ::There are multiple ""epochs"" :-) https://en.wikipedia.org/wiki/Epoch_(computing)#Notable_epoch_dates_in_computing::Ok, as you want. It was just a suggestion.::Fixed again.::Apparently, now exec function has two different parts: * First part uses return -1 * Second part initializes the static state and uses goto to make sure that the state always stays in a consistent state: either fully initialized, or cleared I suggest to split the function in two parts (create a subfunction). I don't think that a second PR is needed. Maybe just add a second _datetime_init_state() function?::Sure, we can bake it into this PR. I'll get to it later tonight.::I added some helpers in a9e8d1ab544add7db66e85f31e9dfe9afd736474 (`init_state` and `create_timezone_from_delta`). Initialisation should now be slightly more robust than before, unless I missed something :)::If we want to initialise the state members in the order they are declared, we'll have to move this. However, the following comment will then need to be tweaked. I'm not sure it is worth it.::",Erlend E. Aasland,13780613,72,21,173,145,2,0,cacf1e84f7dd5091159bc6d96dde52c5cc587c2c::c2eba8fcf2be2ae0ca228baa6092c284fda2acfa::8d54ecdc4e71e6f7dcfbb0ee3d5aa9cbc729453a::360397a30f4f77abe01b4233fe88006f6d2b13b1::4f509f9fa586991db27a7d831ed9d552851c7f6d::6b14c8cac3bae3217e30fde5efd49d3e5fcb2cf0::2eb3315327f6d1de711fb8bc8309eb8ec236afeb::f5ede1e9bb477c1618dbb6b16c3a02982c77afc4::f6ac875cb302e90a58c921c3450891b4ba4f7149::713956903195bb798b0c3f58a5d103cb83f173be::26e6454b42c8f2fce1361840eafb65d81bf08d9b::227dd2c442c984899105a7136303b76c8e05732a::beb0977b0e1924f2eaa784fd5efd81b9b2136be2::8525be670cb410802c1a8d6da109e95360c8519e::6863f763c07909fa3e921e933d2ed68091b603a6::0738205d3fadf45b3c835e02614a0cd9fb10bbbf::c56b5e1fa7673705a1806abb8779058f1deca5e2::3ee48d295e8a36cd8f241b38b02dcff3e8c789bb::0a1d770d9e390aeb01e63b90d2b645b2c7db44a9::a9e8d1ab544add7db66e85f31e9dfe9afd736474::c3ba7fec5b5fa5d46d0af8f99a5ffd421d01de65::
https://api.github.com/repos/python/cpython,110465,test_pipesize_default::main,0,merged,tests::skip news::,"For proc.stdin, get the size of the read end of the pipe. Use subprocess context manager (""with proc:""). <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-110184 --> * Issue: gh-110184 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,1,23,18,1,0,f08aa06d4fc336e3af19dd895aa36c8d5f66db25::
https://api.github.com/repos/python/cpython,110464,support_ms_windows11::3.11,0,merged,skip issue::skip news::,"Add support.MS_WINDOWS constant (#110446) (cherry picked from commit e0c44377935de3491b2cbe1e5f87f8b336fdc922) (cherry picked from commit e188534607761af1f8faba483ce0b1e8578c73e5) <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> ::",Victor Stinner,194129,1148,1,27,22,10,0,709cb569de235bbc5b0a146cb56ddf57abbee88c::
https://api.github.com/repos/python/cpython,110452,support_ms_windows::3.12,0,merged,skip issue::skip news::,"(cherry picked from commit e0c44377935de3491b2cbe1e5f87f8b336fdc922) <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> ::",Victor Stinner,194129,1148,1,27,23,10,1,6ae21f90b66c162ca8c34ffdf2523c2d6585f59e::
https://api.github.com/repos/python/cpython,110451,fix_test_freeze::main,0,merged,,"Fix test_tools.test_freeze on FreeBSD: run ""make distclean"" instead of ""make clean"" in the copied source directory to remove also the ""python"" program. Other test_freeze changes: * Log executed commands and directories, and the current directory. * No longer uses make -C option to change the directory, instead use subprocess cwd parameter. <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-103053 --> * Issue: gh-103053 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,1,22,14,2,0,3a62cdbe040088509e4ce419bbc5954e28d2ef10::
https://api.github.com/repos/python/cpython,110449,makefile2::main,0,merged,,"""make check-clean-src"" now also checks if the ""python"" program is found in the source directory: fail with an error if it does exist. <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-103053 --> * Issue: gh-103053 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,1,5,1,2,0,fed2a24e7abc5705f55f14342bd33eba2179c628::
https://api.github.com/repos/python/cpython,110448,makefile::main,0,closed,needs backport to 3.11::needs backport to 3.12::,"On FreeBSD when Python is built out of tree, the ""python"" program was created in the source directory instead of build directory. Fix the Makefile to write the ""python"" program in the build directory. <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-103053 --> * Issue: gh-103053 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,1,8,1,2,0,d985a7113ed54f114c80d511c3876101ade70c7c::
https://api.github.com/repos/python/cpython,110447,freeze_buildbot2::main,0,closed,,"* No longer skip test_tools.test_freeze on buildbots. * test_freeze.py now logs executed commands and directories, and the current directory. * test_freeze.py no longer uses -C options make to change the directory. Use cwd parameter of subprocess instead. <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-103053 --> * Issue: gh-103053 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,1,18,13,2,0,b04d3fcdaafb5f6901945311633874f29a3f2904::
https://api.github.com/repos/python/cpython,110446,support_ms_windows::main,0,merged,skip issue::skip news::,"<!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> ::",Victor Stinner,194129,1148,1,22,33,15,1,9a9a0981dadf4b555998da20c0ec069ce11c40be::
https://api.github.com/repos/python/cpython,110441,is_finalizing_stable_abi::main,0,merged,skip news::,"<!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-110397 --> * Issue: gh-110397 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--110441.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::",Victor Stinner,194129,1148,1,9,2,6,0,f40994922e161a58e6eabf353a617e3d8d9550bc::
https://api.github.com/repos/python/cpython,110433,fix_regen_pegen::main,0,merged,skip news::,"""make regen-pegen"" now creates a temporary file called ""parser.c.new"" instead of ""parser.new.c"". Previously, if ""make clinic"" was run in parallel with ""make regen-all"", clinic may try but fail to open ""parser.new.c"" if the temporay file was removed in the meanwhile. <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-110429 --> * Issue: gh-110429 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,1,2,2,1,0,4d3810b62dd11d19719adfa0f667b44fabff4d00::
https://api.github.com/repos/python/cpython,110428,test_waitfor_timeout::main,0,merged,tests::skip news::,"Don't measure the CI performance: don't fail if cond.wait_for() takes longer than 1 second on a slow CI. <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-109840 --> * Issue: gh-109840 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,1,3,3,1,0,544be59b1cb3ea23ccf3489be8f4a9b856941722::
https://api.github.com/repos/python/cpython,110427,loopback_timeout12::3.12,0,merged,skip news::,"Increase support.LOOPBACK_TIMEOUT from 5 to 10 seconds. Also increase the timeout depending on the --timeout option. For example, for a test timeout of 40 minutes (ARM Raspbian 3.x), use LOOPBACK_TIMEOUT of 20 seconds instead of 5 seconds before. (cherry picked from commit 0db2f1475e6539e1954e1f8bd53e005c3ecd6a26) <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-110167 --> * Issue: gh-110167 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,1,11,14,2,0,d401794e7413ac25e0e7d26737a2191279d524b4::
https://api.github.com/repos/python/cpython,110421,test_os_kill_event::main,0,merged,tests::skip news::,"Replace os.kill() with proc.kill() which catchs PermissionError. Rewrite _kill_with_event(): * Use subprocess context manager (""with proc:""). * Use sleeping_retry() to wait until the child process is ready. * Replace SIGINT with proc.kill() on error. * Replace 0.5 seconds with SHORT_TIMEOUT. <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-109888 --> * Issue: gh-109888 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,1,27,23,1,0,5808d46f8520f6457c69a9658e281414fc13963b::
https://api.github.com/repos/python/cpython,110416,test_socket_deadlock::main,0,merged,tests::,"Fix a deadlock in test_socket when server fails with a timeout but the client is still running in its timeout. Don't hold a lock to call cleanup functions in doCleanups(). One of the cleanup function waits until the client completes, whereas the client could deadlock if it called addCleanup() in such situation. doCleanups() is called when the server completed, but the client can still be running in its thread especially if the server failed with a timeout. Don't put a lock on doCleanups() to prevent deadlock between addCleanup() called in the client and doCleanups() waiting for self.done.wait of ThreadableTest._setUp(). <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-110167 --> * Issue: gh-110167 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,1,12,5,2,0,98ac8981de7b1818f0d1d7042878399a7d966754::
https://api.github.com/repos/python/cpython,110413,loopback_timeout::main,0,merged,skip news::,"Increase support.LOOPBACK_TIMEOUT from 5 to 10 seconds. Also increase the timeout depending on the --timeout option. For example, for a test timeout of 40 minutes (ARM Raspbian 3.x), use LOOPBACK_TIMEOUT of 20 seconds instead of 5 seconds before. <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-110167 --> * Issue: gh-110167 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,1,3,7,2,1,11ce425ebd37cad957c39df9b0183107b8639537::
https://api.github.com/repos/python/cpython,110407,fix-#110383-timeit-spelling::main,0,merged,docs::skip news::,"<!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> https://mail.python.org/archives/list/docs@python.org/thread/CQON3MGDEN6CY5KFXXBY4FTCG2FIIDTM/ In the docs, https://docs.python.org/3/library/timeit.html#timeit.Timer.autorange, the last line of the first paragraph read: > until the time taken is at least 0.2 second. This pull request changes that to read: > until the time taken is at least 0.2 seconds. Mentioned as the second-to-last issue in #110383 <!-- gh-issue-number: gh-110383 --> * Issue: gh-110383 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--110407.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::",,105541074,0,2,1,1,1,0,c6c02adaa98dc9d5178fd248daf5bf7e9919aa55::3b8b36cd8ab9d2f744e253e7f88f65bb9daada0e::
https://api.github.com/repos/python/cpython,110401,test_socket_cli::main,0,merged,tests::skip news::,"NetworkConnectionAttributesTest of test_socket now always declare the 'cli' attribute, so clientTearDown() cannot fail with AttributeError. <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-110391 --> * Issue: gh-110391 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,1,3,1,1,0,1402a1ffde10ab0713290bc7215b1b5134d3a3aa::
https://api.github.com/repos/python/cpython,110400,remove_hardcoded_timeout::main,0,merged,tests::skip news::,"test_builtin and test_socketserver no longer use signal.alarm() to implement a watchdog with a hardcoded timeout (2 and 60 seconds). Python test runner regrtest has two watchdogs: faulthandler and timeout on running worker processes. Tests using short hardcoded timeout can fail on slowest buildbots just because the timeout is too short. <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-110393 --> * Issue: gh-110393 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,1,0,9,2,0,b91a7f90b810f529869055d671d1cd2bf4cf54f1::
https://api.github.com/repos/python/cpython,110387,regrtest_asan::main,0,merged,skip news::,"Set ASAN_OPTIONS=""handle_segv=0"" env var to run the test. <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-110367 --> * Issue: gh-110367 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,1,20,9,3,0,a82277282097e3451d03444a6ded33539cd6857e::
https://api.github.com/repos/python/cpython,110376,duplicate-word::main,0,merged,docs::skip issue::skip news::,"<!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--110376.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::",Benjamin Peterson,219470,506,1,1,1,1,0,9361161650d7c6e557d43f53a0bb230a58ad953f::
https://api.github.com/repos/python/cpython,110374,macOS-SQLite-installer-upgrade::main,0,closed,awaiting core review::needs backport to 3.11::needs backport to 3.12::,"I updated the macOS SQLite installer, all changes were made in the build-installer.py file. I'll be doing the Windows installer next in a separate PR as requested. <!-- gh-issue-number: gh-109286 --> * Issue: gh-109286 <!-- /gh-issue-number --> ::Please revert these style changes. _Only change line 362, 363, and 364._ See the following PRs for earlier SQLite version bumps; **your PR should look very similar to these**: - gh-104624 - gh-102998 - gh-98639::```suggestion Update macOS installer to use SQLite 3.43.1. ```::```suggestion extra_cflags=('-Os ' '-DSQLITE_ENABLE_FTS5 ' '-DSQLITE_ENABLE_FTS4 ' '-DSQLITE_ENABLE_FTS3_PARENTHESIS ' '-DSQLITE_ENABLE_RTREE ' '-DSQLITE_OMIT_AUTOINIT ' '-DSQLITE_TCL=0 ' ```::",,76231120,0,8,4,3,2,0,4052bc9647217efa2c61f3c89fa0980db77d563d::ddf8d68e0e882129e5769d1479b0bee89d504b09::c659e4c5af231a0a9b23a37442ecf30d30e3b699::ef003dbcd2e3e89a6bbba47e2dd9964087a6923d::3e9ae8fd4a980bacd707e3c1f810e39c42d0e5f6::ee7cf756422c41156e30e4946733c7f15d9c75d0::aaa2d52ee7b763b7232256e9ee08312f5cc9f6b7::a5b31ace51091a5d53d243d29b30bc612395f362::
https://api.github.com/repos/python/cpython,110368,regrtest_verbose3::main,0,merged,,"When using worker processes (-jN) with --verbose3 option, regrtest can now display the worker output even if a worker process does crash.  Previously, sys.stdout and sys.stderr were replaced and so the worker output was lost on a crash. <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-110367 --> * Issue: gh-110367 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,1,52,3,4,0,06c3e3108a249832a7634db6ab757a233f504124::
https://api.github.com/repos/python/cpython,110361,ruff-rm-failed-to-parse-3.11::3.11,0,merged,skip issue::skip news::,"<!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> Backport of https://github.com/python/cpython/pull/110356. ::",Hugo van Kemenade,1324225,628,1,0,2,1,0,9e058eb8ac74880346ddc536669d0d648d228a96::
https://api.github.com/repos/python/cpython,110360,ruff-rm-failed-to-parse-3.12::3.12,0,merged,skip issue::skip news::,"<!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> Backport of https://github.com/python/cpython/pull/110356. ::",Hugo van Kemenade,1324225,628,1,0,2,1,0,5921ad10673be7d3cf94ca10e19e8bba2223ebed::
https://api.github.com/repos/python/cpython,110356,ruff-rm-failed-to-parse::main,0,merged,skip issue::skip news::,"<!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> Following the release of Ruff 0.0.292 with support for Python 3.12's PEP 701 f-strings, these files no longer fail to parse, and we can include them in the check. * https://github.com/astral-sh/ruff/releases/tag/v0.0.292 * https://github.com/astral-sh/ruff/pull/7376 * https://github.com/python/cpython/pull/110179 Also remove `test_unittest/testmock/testpatch.py`, it didn't need to be in the list in the first place. I'll do manual backports to 3.12 and 3.11 as they're slightly different.::",Hugo van Kemenade,1324225,628,1,0,4,1,0,056d63cc08887add88bc7b88ff931ff5b4bf74ba::
https://api.github.com/repos/python/cpython,110355,fix_lock_tests11::3.11,0,merged,skip news::,"…(#110346) * gh-109974: Fix threading lock_tests race conditions (#110057) Fix race conditions in test_threading lock tests. Wait until a condition is met rather than using time.sleep() with a hardcoded number of seconds. * Replace sleeping loops with support.sleeping_retry() which raises an exception on timeout. * Add wait_threads_blocked(nthread) which computes a sleep depending on the number of threads. Remove _wait() function. * test_set_and_clear(): use a way longer Event.wait() timeout. * BarrierTests.test_repr(): wait until the 2 threads are waiting for the barrier. Use a way longer timeout for Barrier.wait() timeout. * test_thread_leak() no longer needs to count len(threading.enumerate()): Bunch uses threading_helper.wait_threads_exit() internally which does it in wait_for_finished(). * Add BaseLockTests.wait_phase() which implements a timeout. test_reacquire() and test_recursion_count() use wait_phase(). (cherry picked from commit 4e356ad183eeb567783f4a87fd092573da1e9252) * gh-109974: Fix more threading lock_tests race conditions (#110089) * Add context manager on Bunch class. * Bunch now catchs exceptions on executed functions and re-raise them at __exit__() as an ExceptionGroup. * Rewrite BarrierProxy.test_default_timeout(). Use a single thread. Only check that barrier.wait() blocks for at least default timeout seconds. * test_with(): inline _with() function. (cherry picked from commit 743e3572ee940a6cf88fd518e5f4a447905ba5eb) (cherry picked from commit 1d032ea3d67e9725b63322f896d9aa727fd75521) <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> ::",Victor Stinner,194129,1148,1,378,251,3,0,906cbdc54c1be876aa5e6a2dcd530f3e8d2c026d::
https://api.github.com/repos/python/cpython,110351,test_gdb_clang12::3.12,0,merged,skip news::,"<!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-109972 --> * Issue: gh-109972 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,3,303,218,9,0,b660dcbb07369498634b5dbeb69964a2888bb6f2::5ead95a81fac4112659de4c79b08d97444541147::8a305efd5b0f2c25ba3c9d126bd1adce9f0c88ca::
https://api.github.com/repos/python/cpython,110346,fix_lock_tests12::3.12,0,merged,skip news::,"<!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-109974 --> * Issue: gh-109974 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,2,378,249,3,1,f72c92698280a77720e3a4b04e031980c6b93cd1::8a4668a997de44b898d1c7ecd49fab6fe5cccd60::
https://api.github.com/repos/python/cpython,110343,split_gdb11::3.11,0,merged,skip news::,"…#110339) gh-109972: Split test_gdb.py into test_gdb package (#109977) Split test_gdb.py file into a test_gdb package made of multiple tests, so tests can now be run in parallel. * Create Lib/test/test_gdb/ directory. * Split test_gdb.py into multiple files in Lib/test/test_gdb/ directory. * Move Lib/test/gdb_sample.py to Lib/test/test_gdb/ directory. Update get_sample_script(): use __file__ to locate gdb_sample.py. * Move gdb_has_frame_select() and HAS_PYUP_PYDOWN to test_misc.py. * Explicitly skip test_gdb on Windows. Previously, test_gdb was skipped even if gdb was available because of gdb_has_frame_select(). (cherry picked from commit 8f324b7ecd2df3036fab098c4c8ac185ac07b277) (cherry picked from commit e7a61d34b7897ac6cff53add2ec03309a5ff8350) <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> ::",Victor Stinner,194129,1148,1,1124,1067,11,0,8dbf9c05544baeee67362ead4fa93b23a3c0cdce::
https://api.github.com/repos/python/cpython,110342,start_new_thread12::3.12,0,merged,,"Fix _thread.start_new_thread() race condition. If a thread is created during Python finalization, the newly spawned thread now exits immediately instead of trying to access freed memory and lead to a crash. thread_run() calls PyEval_AcquireThread() which checks if the thread must exit. The problem was that tstate was dereferenced earlier in _PyThreadState_Bind() which leads to a crash most of the time. Move _PyThreadState_CheckConsistency() from thread_run() to _PyThreadState_Bind(). (cherry picked from commit 517cd82ea7d01b344804413ef05610934a43a241) <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-108987 --> * Issue: gh-108987 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,2,75,44,5,0,9806f2e6e697dd544dbdbbe7b332cbc96b1e02f1::b4da60296798e6f05c7710cd42af1b100d845696::
https://api.github.com/repos/python/cpython,110341,busy_retry11::3.11,0,merged,skip issue::skip news::,"Add busy_retry() and sleeping_retry() functions to test.support. (cherry picked from commit 7e9eaad864349d2cfd4c9ffc4453aba03b2cbc16) <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--110341.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::",Victor Stinner,194129,1148,1,185,99,12,0,dbb622ccc441f03cd31182eade0c689ebd6b0ad8::
https://api.github.com/repos/python/cpython,110340,copy_src32::3.12,0,merged,skip news::,"<!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-109615 --> * Issue: gh-109615 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,4,49,12,7,0,b24ecb7639a9f558240d4d69df0e4094eba6a51b::c310ecb0534aeed2373993eaca32222cdf809e27::4f4c799e83721c1a2c2c7fe1068c2496242ecc8d::a3340576a25462ef4acec6b74cbdf188e35bfe6d::
https://api.github.com/repos/python/cpython,110339,split_gdb12::3.12,0,merged,tests::skip news::,"Split test_gdb.py file into a test_gdb package made of multiple tests, so tests can now be run in parallel. * Create Lib/test/test_gdb/ directory. * Split test_gdb.py into multiple files in Lib/test/test_gdb/ directory. * Move Lib/test/gdb_sample.py to Lib/test/test_gdb/ directory. Update get_sample_script(): use __file__ to locate gdb_sample.py. * Move gdb_has_frame_select() and HAS_PYUP_PYDOWN to test_misc.py. * Explicitly skip test_gdb on Windows. Previously, test_gdb was skipped even if gdb was available because of gdb_has_frame_select(). (cherry picked from commit 8f324b7ecd2df3036fab098c4c8ac185ac07b277) <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-109972 --> * Issue: gh-109972 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,1,1124,1067,11,1,3ee646f85e84ba8bf9259d51922c4a4a5b7bd03e::
https://api.github.com/repos/python/cpython,110336,asyncio_clean_multiprocessing::main,0,merged,tests::skip news::needs backport to 3.11::,"test_unix_events tests using the multiprocessing module now call multiprocessing.util._cleanup_tests(). <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-110335 --> * Issue: gh-110335 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,1,8,0,1,1,d9a9365816de324e5e4e1f07974626f74632871b::
https://api.github.com/repos/python/cpython,110331,test_gdb::main,0,merged,skip news::,"CFunctionFullTests now also runs ""bt"" command before ""py-bt-full"", similar than CFunctionTests which also runs ""bt"" command before ""py-bt"". So test_gdb can skip the test if patterns like ""?? ()"" are found in the output. <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-110166 --> * Issue: gh-110166 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,1,1,1,1,1,377b930f24dd114db9d143cfc2148d0ae80ac712::
https://api.github.com/repos/python/cpython,110326,regrtest_resources::main,0,merged,skip news::,"<!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-109276 --> * Issue: gh-109276 <!-- /gh-issue-number --> ::Use `sorted()` for deterministic result.::```suggestion relative_all.append(name) ```::Oh right. Sadly, I saw your comment after the change was merged. I make try to include it in my next regrtest change ;-)::",Victor Stinner,194129,1148,2,63,17,3,0,68f2ade434cec9e49b03d1fe9b89e844203a7e85::63e0afec8045248b76da1658a8f294d3c8f56c7e::
https://api.github.com/repos/python/cpython,110306,fix-gh-109917::main,0,merged,tests::skip issue::skip news::3.11::3.12::3.13::,"The test had an instability issue due to the ordering of the dummy queue operation and the real wakeup pipe operations. Both primitives are thread safe but not done atomically as a single update and may interleave arbitrarily. With the old order of operations this can lead to an incorrect state where the dummy queue is full but the wakeup pipe is empty. By swapping the order in clear() I think this can no longer happen in any possible operation interleaving (famous last words). This is a minimal update to fix the issue. Long term it might be better to rewrite the test along the lines of https://github.com/python/cpython/pull/110129 where we make it possible to override the wakeup message and cause the blocking behaviour that way instead of the small dummy queue used now. Less mocking is usually better and the test can be faster as well. It does require a minor modification to the implementation and there were other issues in https://github.com/python/cpython/pull/110129 but the general test idea seems better than the current solution. <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-109917 --> * Issue: gh-109917 <!-- /gh-issue-number --> ::",,13905184,0,1,2,1,1,0,35227479acb73f23b77e9e081b4f505e3208bd32::
https://api.github.com/repos/python/cpython,110295,profile_task::main,0,merged,,"<!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-110276 --> * Issue: gh-110276 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--110295.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::",Victor Stinner,194129,1148,1,7,2,3,0,a26ba58ff442e7aeb97e04461a4d97b8fc5b808d::
https://api.github.com/repos/python/cpython,110291,managed_dict_compat::main,0,merged,docs::skip news::,"<!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-107073 --> * Issue: gh-107073 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--110291.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::",Victor Stinner,194129,1148,1,3,1,1,0,6eb6cd5f7f6d0ece92b766c19fbb22125137ea64::
https://api.github.com/repos/python/cpython,110272,test-structseq-pickle-copy::main,0,merged,tests::,"<!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> Resolves #110267 <!-- gh-issue-number: gh-110267 --> * Issue: gh-110267 <!-- /gh-issue-number --> ::Nitpick: usually the left argument of `assertEqual()` is the actual value, and the right argument is the expected value. It is not always consistent in old tests, and it does not affect the correctness of tests, but it is easier to read if it is in such order. In this case it should be `self.assertEqual(t2.__class__, t.__class__)` (and similarly in other tests).::This test is no longer needed.::",Xuehai Pan,16078332,443,4,75,2,2,0,e94b7e9c93d646af2300f885ad28847840ec660d::a64af6ccece2494f393aa86c263426c1d955b064::e682580a55f403b8173bebf865d621da572d982d::15b72bce6f514a497cd306bade7c6fd5f1a2ee4e::
https://api.github.com/repos/python/cpython,110268,'test-msvcrt-process'::main,0,merged,tests::skip news::,"<!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-110147 --> * Issue: gh-110147 <!-- /gh-issue-number --> ::Does creating a new process separate the console between the parent and child process? Do you think that passing CREATE_NEW_CONSOLE could make the test more reliable? https://learn.microsoft.com/en-us/windows/win32/procthread/process-creation-flags > The new process has a new console, **instead of inheriting its parent's console (the default)**. For more information, see [Creation of a Console](https://learn.microsoft.com/en-us/windows/console/creation-of-a-console). >  This flag cannot be used with DETACHED_PROCESS. I suggest you creating a helper function for ``subprocess.run(cmd, check=True, capture_output=True)`` and add CREATE_NEW_CONSOLE flag. Something like: ```py startupinfo = subprocess.STARTUPINFO(dwflags=subprocess.CREATE_NEW_CONSOLE) subprocess.run(..., startupinfo=startupinfo) ```::Can you use textwrap.dedent() to make the code more readable? ```py code = textwrap.dedent("""""" ... your code ... ... on multiple lines ... """""") ```::Done.::Updated, the `CREATE_NEW_CONSOLE` should be passwd as `creationflags`.::flush_console_input_buffer() was only used in that test. If you don't need it anymore, please remove also the associated C code write_input(): is it used somewhere else?::Ok, I'll remove it after current tests finished to see if this change is stable. The `write_input` is used in `test_winconsoleio` so we should keep it.::Removed.::```suggestion write_input(stdin, {ascii(c_encoded)}) ``` Same remark for test_getwche().::it's surprising to open a file to ""read"" and then ""write"" into it. does it work with ""wb"" or ""w+b""?::test_getwche() looks like a copy/paste, you just replaced getwch() with getwche(). Can you rename the function to check_getwch(func), so test_getwch() would call check_getwch(""getwch"") and test_getwch() would call check_getwch(""getwche"")?::It's not C or C++ :-) ```suggestion import msvcrt ``` You can also move ``if sys.platform != ""win32"":`` test before ""from test..."" imports.::It may be safer to run this test in a subprocess with a new console, no?::Yes it would, but it's annoying. We might want to put it behind a resource marker, as the new console will pop up new GUI when it runs.::No, stdin must be opened as read-only in Python, so there is a `write_input` to do the magic. And this usage is copied from: https://github.com/python/cpython/blob/main/Lib/test/test_winconsoleio.py#L163-L164::Would CREATE_NO_WINDOW flag prevent popups? > The process is a console application that  is being run without a console window. Therefore, the console handle for  the application is not set. This flag is ignored if the application is not a console application, or if it is used with either CREATE_NEW_CONSOLE or DETACHED_PROCESS. says: https://learn.microsoft.com/en-us/windows/win32/procthread/process-creation-flags::Seems it should work, I'll try it.::Ok::> the console handle for the application is not set Means no console and the test is irrelevant. > ignored if ... used with either CREATE_NEW_CONSOLE This is the flag that you'd use to make the test more reliable, and it's incompatible with `CREATE_NO_WINDOW`.::The imports behind the  `if sys.platform != ...` test are modules that can't be used on non Windows platforms. The `test.support` can be used in these non Windows platforms, so I think we should group them like current codes?::Ok, and added the `@requires_resource('gui')` marker to avoid the console pop-up. For the tests `test_getche` and `test_getch`, they uses `msvcrt.ungetch` instead of the magic `write_input`, I think this stuff is stable enough, this test file is added and disabled days ago, so I fixed it serveral times, and never saw them failed once. So I think we should keep it (`test_getche` / `test_getch`) as current.::I suggest moving the decorator to run_in_separated_process() and explain why you require GUI resource. For example, say that CREATE_NEW_CONSOLE creates a ""popup"" window.::Done.::```suggestion # CREATE_NEW_CONSOLE creates a ""popup"" window. @requires_resource('gui') ```::> For the tests test_getche and test_getch, they uses msvcrt.ungetch instead of the magic write_input, I think this stuff is stable enough Hum, ok. Let's see if CI will agree with you :-) I'm fine with keeping them in the same process for now.::",AN Long,699636,487,13,31,107,3,0,c88252ee9c1096d92a0993289d305c89667d0c24::32f0209aec07de1048f5a7a9e397a0957572f5a7::db2b10b12d9308d35f8e62d5767a620beab9b3dd::7ee4a1f1918806d427cb1fa3fe2b5c76a24405df::1f6e6ca5b4d3dfd8ed0721ac330709d0e18ccc13::4ecbd84fd0905cc3cd4c5185718510bad0bef4de::93ca64896906bad00081b5aedfb3ace9a449f325::2e7cd6d45763b83ee8fab543762d3265593f13c9::a469eae6a59aecaf101bc810040cdf540876b606::a0d2972ceafabfc14b3aa1779e68f1c15ca3e39b::44ef80a950b6b0f1186f9cfb81ad04eed4ba641a::f222132877b7050c3080de2900e26e081facaf03::a3d0008e3d75a8eee725cd4336c4d849fd1c7a9d::
https://api.github.com/repos/python/cpython,110258,structseq-new::main,0,merged,,"<!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> Fixes #110235 In this PR, we iterate over `dict` keys and check if there are duplicate fields provided by `sequence` or there are any unexpected field names. <!-- gh-issue-number: gh-110235 --> * Issue: gh-110235 <!-- /gh-issue-number --> ::Here we have a set rather than a list in the error message: ```python TypeError: somestructseq() got unexpected field name(s): {'a', 'b', 'c'} ``` vs. ```python TypeError: somestructseq() got unexpected field name(s): ['a', 'b', 'c'] ``` Should we use a list instead?::Usually we do not have tests for `__reduce__()`. Instead we have tests for pickling and copying. I opened a separate issue for this: #110267.::These tests do not actually test duplicate fields, so it is better to move them to `test_constructor`. There is a test for positional first argument and keyword ""dict"" argument. I think that it is better to pass both arguments as positional for most tests, but add also a case for both passed by keyword.::I reverted and moved these changes to another PR: - #110272::I add this guard check before the for-loop to avoid unnecessary dictionary lookup for empty `dict`.::",Xuehai Pan,16078332,443,19,84,7,3,0,da93f2f18d37c415e5f9d5bafdfa6e6cab36ded2::9632370867ada1a87a670e599735017bbd9765b9::464cbaf579cacdf2289ab319a37f8a04254e98ad::11a8435f7ca60f30f8ba7c2f78174373eaa46149::9fc15015b2714931cd75a0a72f94ee457cf97e43::981e40371a20f153abe34137b02211e90414eb42::67954db973d0a5d5f18de9cbee66ca5b18c2214f::06c5d447156c1757217e45b2f0d8f9185712ea1d::9c3f7d2bddc2cab978d4ed4513e68b029548e1b7::c927e1ee85923d69487bd1358404c3bb56cbc338::c173451172b29ba81c188c35b6c3a68422916631::704ccaa89089168ba33677d0a3ef64ea714b8749::8f216b85d3a82ad3a06e1e8ede783ab132c14093::04a19ccd20484ff8f01f1db8e747bde3e3d1ab65::782fa4a2625fde48d81c15ea8ce083acce376e8f::297459efb6254e2546d37c52b3f5df8e47dc6e95::bd2782c3ef97db2194b0a2bd40b533e9a6eb3807::04a554d2682846e10b0733f1c8b55be0a7283728::41e4d0b7f8380c198efcc523abcf0d9e1f2f92b0::
https://api.github.com/repos/python/cpython,110240,rm-requirements-test.txt::main,0,merged,skip issue::skip news::,"<!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> In 2020, PR https://github.com/python/cpython/pull/19909 added `Misc/requirements-test.txt` and installed it as part of `.github/workflows/coverage.yml` and `.travis.yml`. In 2021, however, PRs https://github.com/python/cpython/pull/25679 and https://github.com/python/cpython/pull/30257 removed those CI files, so `Misc/requirements-test.txt` is unused. Let's remove it. ::",Hugo van Kemenade,1324225,628,1,0,1,1,0,2269ab30ec59494c28f2f6ec3f83908130060848::
https://api.github.com/repos/python/cpython,110239,rl_compdisp_func_t::main,0,merged,,"Fixes compile with BSD libedit versions since April 2023. Requires backport to 3.12 (should cleanly apply). Requires backport to 3.11 and 3.10 using this manual cherry-pick: https://github.com/Bo98/cpython/commit/b0c571f6ad0f233ba9d0f24e32fc8db1081be247 I believe 3.9 and older don't technically support libedit except Apple's 2012 version, but a similar cherry-pick could be made if desired. <!-- gh-issue-number: gh-109191 --> * Issue: gh-109191 <!-- /gh-issue-number --> ::Style nit; please follow the [GNU Autoconf style guide](https://www.gnu.org/savannah-checkouts/gnu/autoconf/manual/autoconf-2.71/html_node/Coding-Style.html). ```suggestion AC_CHECK_TYPE([rl_compdisp_func_t], [AC_DEFINE([HAVE_RL_COMPDISP_FUNC_T], [1], [Define if readline supports rl_compdisp_func_t])], [], [readline_includes]) ``` Even though configure.ac is coloured with a variety of styles, I prefer to stick with a clean style for all new code.::Sorry, fixed now! I indeed just copy-pasted the exact style of the readline checks before it.::```suggestion Fix compile error when building with recent versions of libedit. ```::",Bo Anderson,1190754,90,5,31,1,5,1,e2e2cf2e57127f793db1e4fe7959ac5b3e7038cb::b56fd6164dbaa5ccaa7e17624d0ad6e16a1f1233::8da562c3bc1d9f62becfda144d427dd645fd6a81::19e59506b87d1e315b89453d02ef1d59c617688b::3ef8145d3476ae3a252297ea9ffde1f015da0ba9::
https://api.github.com/repos/python/cpython,110233,backport-109790-312::3.12,0,merged,,"(cherry-picked from commit 7df8b16d28d2418161cef49814b6aca9fb70788d) <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-109782 --> * Issue: gh-109782 <!-- /gh-issue-number --> ::",Alex Waygood,66076021,141,1,15,13,3,0,1ca2a2fa170feaab996dde741642420f33b13c72::
https://api.github.com/repos/python/cpython,110232,doc_pcbuild_add_project11::3.11,0,merged,skip news::,"(cherry picked from commit 6387b5313c60c1403785b2245db33372476ac304) <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-108494 --> * Issue: gh-108494 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,1,28,0,1,0,0948cda64d602ff16c64d630c5ca12a8f035ef8c::
https://api.github.com/repos/python/cpython,110231,cleaner_factor::3.12,0,merged,docs::skip issue::skip news::,Fix a missed backport. <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--110231.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::,Raymond Hettinger,1623689,3560,2,1,3,1,0,1bbedc9659c82794e417f1eb72887bcde4b905ca::a2d13a6a2b99d5d1e9d12ff897725817260215c9::
https://api.github.com/repos/python/cpython,110228,main::main,0,closed,docs::awaiting review::skip news::,"install in venv.rst <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--110228.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::```suggestion .. code-block:: bash ```::",,146452704,0,1,10,0,1,0,2d6336b4b85abcfef8d49f3a5a1bd51a67497461::
https://api.github.com/repos/python/cpython,110223,copy-replace-structseq::main,0,merged,,"<!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> Resolves #110222 ~~The implementation in this PR is roughly equivalent to:~~ ```python class SomeStructSeq: def __replace__(self, /, **kwargs): if self.n_unamed_fields > 0: raise TypeError(f'__replace__() is not supported for {self.__class__} ' 'because it has unnamed field(s)') field_names = self._get_field_names() _, (tup, dct) = self.__reduce__() seq = list(tup) for i, name in field_names[:self.n_sequence_fields]: if name in kwargs: seq[i] = kwargs.pop(name) for name in field_names[self.n_sequence_fields:]: if name in kwargs: dct[name] = kwargs.pop(name) if kwargs: raise TypeError(f'Got unexpected field name(s): {list(kwargs)!r}') return self.__class__(seq, dct) ``` Refactored: ```python class SomeStructSeq: def __replace__(self, /, **kwargs): if self.n_unamed_fields > 0: raise TypeError(f'__replace__() is not supported for {self.__class__} ' 'because it has unnamed field(s)') clone = self._clone() field_names = self._get_field_names() if kwargs: for i, name in enumerate(field_names): if name in kwargs: clone[i] = kwargs.pop(name) if kwargs: raise TypeError(f'Got unexpected field name(s): {list(kwargs)!r}') return clone ``` <!-- gh-issue-number: gh-110222 --> * Issue: gh-110222 <!-- /gh-issue-number --> ::I think that it is better to test it in `test_structseq` module. Most `__replace__` implementations are tested together with other methods of their class. Only exceptions are `namedtuple` and `dataclass` because they are fabrics to create new classes. It may be worth to split the test on two tests: with and without unnamed fields.::I think that TypeError is more appropriate exception. Yes, `namedtuple` raises ValueError, but it is unusual. Perhaps it should be changed.::> `namedtuple` raises ValueError `dataclass.__replace__` also raises `ValueError`. https://github.com/python/cpython/blob/6387b5313c60c1403785b2245db33372476ac304/Lib/dataclasses.py#L1555-L1586::It is only for InitVar fields. TypeError is raised for unknown names.::Thanks for the clarification. I update the exception type to `TypeError` for both `PyStructSequence` and `collections.namedtuple`.::Please revert this change and open a new issue for it. It is a breaking change and should be discussed and separately documented.::It is not related change.::I am not sure it is related here.::Few suggestions: * Test that the result has the correct type, not simple tuple. * Use float values. Currently there are no restrictions, but normally they are floats. * Use subscription and slices to get original field values. ```suggestion self.assertEqual(copy.replace(t), t) self.assertIsInstance(copy.replace(t), os.times_result) self.assertEqual(copy.replace(t, user=1.5), (1.5, *t[1:])) self.assertEqual(copy.replace(t, system=2.5), (t[0], 2.5, *t[2:])) self.assertEqual(copy.replace(t, user=1.5, system=2.5), (1.5, 2.5, *t[2:])) ```::You can simply use `os.times()`. It guarantees that the result is correct.::Please test also the type and ""invisible"" attributes of the result. ```suggestion t2 = copy.replace(t) self.assertEqual(t2, (1970, 1, 1, 0, 0, 0, 3, 1, 0)) self.assertIsInstance(t2, time.struct_time) self.assertEqual(t2.tm_zone, 'GMT') ```::It can be simply `return NULL`.::It is not borrowed.::```suggestion assert os.times_result.n_unnamed_fields == 0 assert os.times_result.n_sequence_fields == os.times_result.n_fields ```::```suggestion assert time.struct_time.n_unnamed_fields == 0 assert time.struct_time.n_sequence_fields < time.struct_time.n_fields ```::",Xuehai Pan,16078332,443,30,156,1,3,0,6af4757e133933c3909635608b2da8a54edb8b6a::1960d8dea412f1ce1433b8edcee2fbc5541f71da::5ee97a8d6173db5afe6473c03f7267fe43b11a13::e8e6be484d29124c4fa75ea91cca6a7b260ba247::43324a4bcbccc9d4a9d7e48bdbddfab5c54c7907::9e6cd98d428981b485127ca0e1fe4a0bc43b9bfe::350a3d04fa62f27f053c0d06944cb7ef6e416185::c4655cabb32533a2bf382433de860eb3a811663c::a9dba93357e583b4c9bcc2832a73683b7c31b417::83fd01b1fd6cce307eaa711fad11e3b536494f15::73e5e65cf801460508bf787770a0d95dc68aa809::7abaf649deef9372d3a5f98afe86b2643f41647e::26eedbc8518d7e0faad5cb4ae2172817e8c1b735::d74b44984c4253c6ea4771893ffba314704360b7::5186c35d1a6b638c5d9718d958d2ea87d24c7e52::0f74efaad22897726026587b348065335dc70ae9::43a81b0417b28ccdb73f54b5c1ae02e1d58621f8::d90e5ae22b9fbf1d0d6221533680eae708f65268::287f8b0395182b2d9e8d3354af70801a0789e316::57227732e2d74aef339cccf31ea9841e91898bcf::c23165b9c72255f9351334f64010a635a01c7103::38f331b86fda80054a15d606a95ee4d426f9df3c::30758ba80f65a73e2c56b392991463b603e5f933::2a6259c171c23f0659387d8df0f1994a6ef18cfb::a6b029266f8b57790677228dcd74ad392217a9a4::d76bb4e1b044cf4be0bf618e336e735e6523f88a::3ae391f35ab7691e9a2ac10697fcb744a08451b8::3664109594a75140ea2f262a646d4b4a7da984bf::4a606ade1dcb5a2a35c9870aa07bb56101fe60ed::85043450024a0392db8d16f8f9f73195506471d4::
https://api.github.com/repos/python/cpython,110219,patch-1::main,0,merged,docs::skip issue::skip news::,"<!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> I spotted a typo while reading the What's New page that said ""producing tokens via the tokenize module is **up to up to** 64% faster."" This PR removes one of the ""up to""s. <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--110219.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::",,5206120,6,1,1,1,1,0,053a880d74dca1eb2f0c393e435740b8f401c856::
https://api.github.com/repos/python/cpython,110217,remove_timeout_max::main,0,merged,,"If the timeout is greater than PY_TIMEOUT_MAX, PyThread_acquire_lock_timed() uses a timeout of PY_TIMEOUT_MAX microseconds, which is around 280.6 years. This case is unlikely and limiting a timeout to 280.6 years sounds like a reasonable trade-off. The constant PY_TIMEOUT_MAX is not used in PyPI top 5,000 projects. <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--110217.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end --> <!-- gh-issue-number: gh-110014 --> * Issue: gh-110014 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,2,17,20,8,0,f590f2c908249bd09b53426483295464c2df70c9::238835814584568832177ebf6bb09e189d3e0dfd::
https://api.github.com/repos/python/cpython,110216,test_sys_intern12::3.12,0,merged,tests::skip news::,"…(#109491) (cherry picked from commit 44b1e4ea4842c6cdc1bedba7aaeb93f236b3ec08) <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-108963 --> * Issue: gh-108963 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,1,2,7,1,0,52c001d42acaf827dfb186a0f39a6f18691e00f2::
https://api.github.com/repos/python/cpython,110208,bump-pygments::main,0,merged,docs::skip issue::skip news::,"<!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> Already updated in [`Doc/requirements-oldest-sphinx.txt`](https://github.com/python/cpython/blob/29b875bb93099171aeb7a60cd18d4e1f4ea3c1db/Doc/requirements-oldest-sphinx.txt#L26), used for testing on the CI. Let's also allow it for the real docs, so we can include the dark mode contrast fixed by https://github.com/pygments/pygments/pull/2448 in Pygments 2.16. For example: # Before <img width=""815"" alt=""image"" src=""https://github.com/pygments/pygments/assets/1324225/0bbd0790-9994-469b-8713-a5ff09313bd0""> # After <img width=""812"" alt=""image"" src=""https://github.com/pygments/pygments/assets/1324225/1b528649-8a96-47c3-bc98-5fbbc9ed55e2""> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--110208.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::",Hugo van Kemenade,1324225,628,1,1,2,1,0,d6dc8701c1724896488296777837a037f3baead3::
https://api.github.com/repos/python/cpython,110204,patch-6::main,0,closed,awaiting review::,"Description of pysqlite2/init.py with Custom Function: The pysqlite2/__init__.py module serves as the initialization script for the pysqlite2 package, providing a DB-API 2.0 compliant interface to SQLite 3. This module has been improved to enhance code clarity and to include a custom function that demonstrates the usage of the package. Formatting and Documentation: The code adheres to PEP 8 style conventions with consistent indentation and spacing. It begins with a comment block that provides essential information about the package, including licensing terms and permissions. Imports and Symbol Exportation: The code imports symbols from the sqlite3.dbapi2 module and exports them as __all__, ensuring that only the necessary symbols are exposed to users of the pysqlite2 package. Version Information: Constants __version__ and __sqlite_version__ are defined to provide users with version information about SQLite and the pysqlite2 package. This addition simplifies version tracking for developers. Handling Deprecated Names: The code retains the mechanism for handling deprecated names, issuing warnings and providing backward compatibility by returning the corresponding attribute from the global namespace. This ensures a smooth transition for users upgrading to newer versions of the package. Custom Function (custom_function): A new feature is introduced in the form of a custom function called custom_function. This function demonstrates the usage of the pysqlite2 package by performing the following steps: Connects to an in-memory SQLite database using dbapi2.connect("":memory:""). Creates a sample table named ""users"" if it doesn't exist. Inserts a sample record into the table. Retrieves and prints the records from the ""users"" table. Includes error handling to catch and display any database-related errors. Main Conditional Block: A conditional block (if __name__ == ""__main__"":) is included at the end of the module. It executes the custom_function when the module is run directly as a script. This allows developers to see a practical example of how to use the pysqlite2 package. These modifications enhance the module by providing developers with a clear demonstration of how to interact with an SQLite database using the pysqlite2 package. The code remains well-structured and follows best practices, ensuring that it serves as both a functional interface and a practical guide for users. <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> ::",Sidhant Mishra,69967446,0,1,79,12,1,0,f3bf545179cafb97c834e458cf1393b17e31f0a8::
https://api.github.com/repos/python/cpython,110203,patch-5::main,0,closed,awaiting review::,"1. Introduction: The code defines a class named HTMLParser that inherits from _markupbase.ParserBase. This class is used for parsing HTML content and extracting information from it. 2. Initialization: The HTMLParser class can be initialized with an optional parameter convert_charrefs, which specifies whether to convert character references (e.g., &lt; to <) to their corresponding Unicode characters. This parameter is set to True by default. 3. Resetting the Parser: The reset method is called to reset the parser's internal state, clearing any previously parsed data. 4. Handling HTML Elements: The class provides various methods for handling different types of HTML elements and content. handle_starttag(tag, attrs): Handles start tags by printing the tag name and attributes. handle_endtag(tag): Handles end tags by printing the tag name. handle_charref(name): Handles character references by printing the numeric value and corresponding character. handle_entityref(name): Handles entity references by printing the entity name. handle_data(data): Handles data (text content) by printing the data. handle_comment(data): Handles comments by printing the comment content. handle_decl(decl): Handles declarations (e.g., <!DOCTYPE>) by printing the declaration content. handle_pi(data): Handles processing instructions (e.g., <?...?>) by printing the instruction content. unknown_decl(data): Handles unknown declarations by printing the declaration content. handle_startendtag(tag, attrs): Handles self-closing tags by printing the tag name and attributes. 5. CDATA Handling: The set_cdata_mode(elem) method is provided for setting CDATA mode for specific elements. In CDATA mode, the parser will treat content differently. The clear_cdata_mode method can be used to clear CDATA mode. 6. Parsing Methods: The parse_starttag, parse_endtag, parse_pi, and parse_html_declaration methods are responsible for parsing the respective elements and returning the position where parsing should continue. 7. Checking for Complete Start Tags: The check_for_whole_start_tag method checks if a start tag is complete and returns the ending position. 8. Handling Data: The goahead method processes HTML data, comments, and other content. It iterates through the input data and invokes the appropriate handler methods. 9. Usage Example: A usage example is provided at the end of the code, demonstrating how to create an instance of the HTMLParser class, feed it with HTML data from a file, and close the parser. This code serves as a basic HTML parser framework with print statements for demonstration purposes. You can customize the handling logic within each method to suit your specific requirements, such as extracting data, building a DOM tree, or performing other operations on HTML content. <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> ::",Sidhant Mishra,69967446,0,1,120,405,1,0,2a6228abbce9f408bd2bc79806738eecdbda5f49::
https://api.github.com/repos/python/cpython,110201,patch-4::main,0,closed,awaiting review::,"The code provided has undergone some minor refinements to improve its clarity and adherence to Python's best practices while maintaining its core functionality as the `pysqlite2/__init__.py` module. Here's a breakdown of the changes: 1. **Import Consolidation:** The code has been updated to directly import the `warn` function from the `warnings` module. This change reduces redundancy by eliminating the need for repeated module references. 2. **Conciseness and Readability:** The modifications result in a more concise and streamlined code structure. The `warn` function is now directly accessible, making the warning mechanism more straightforward. 3. **Minor Code Reordering:** The import statement for `warn` is now placed at the beginning of the code block for improved readability and alignment with common Python coding conventions. These changes collectively enhance the code's simplicity, readability, and adherence to best practices. While the overall functionality remains unchanged, these refinements make the code more efficient and maintainable, contributing to a more straightforward experience for developers using the `pysqlite2` package. <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> ::",Sidhant Mishra,69967446,0,1,19,8,1,0,0610fb63e6d7fe442bc962f4e7ba06a708eee63e::
https://api.github.com/repos/python/cpython,110200,patch-3::main,0,closed,awaiting review::,"<!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> ::",Sidhant Mishra,69967446,0,1,48,1,1,0,a4961f1feeedad6dee9f0a2959d4bb6b77e5a023::
https://api.github.com/repos/python/cpython,110193,auto-deopt::main,0,merged,skip news::,"<!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-109979 --> * Issue: gh-109979 <!-- /gh-issue-number --> ::",Guido van Rossum,2894642,21056,4,315,315,8,0,da4f71b415ab9fb06d8358089e59855a6ea43c28::3428c84056d2b16f064a9684f4e7c95237c96d4f::785c3739f91679bccea7aaae4420519f2edb521f::097909ee63af7423adf9f87001c49c05582194c7::
https://api.github.com/repos/python/cpython,110191,main::main,0,merged,docs::skip issue::skip news::,"<!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--110191.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::",Ned Batchelder,23789,2120,1,6,9,1,0,928cc7cfc8b5701006bee922f4ba78a7bc239b9f::
https://api.github.com/repos/python/cpython,110187,backport-31097df-3.12::3.12,0,merged,skip news::,"(cherry picked from commit 31097df611bb5c8084190202e095ae47e8b81c0f) <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-101100 --> * Issue: gh-101100 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--110187.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::",Hugo van Kemenade,1324225,628,1,25,13,3,1,e01204a6fad3197ecc0f49e1c246edc394f22c11::
https://api.github.com/repos/python/cpython,110183,test_find_periodic_pattern11::3.11,0,merged,skip news::,"…#110170) (cherry picked from commit 06faa9a39bd93c5e7999d52b52043ecdd0774dac) <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-110160 --> * Issue: gh-110160 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,1,11,3,1,0,85d25a8d79f16019b6da9b8a3a5f95a95b67fc03::
https://api.github.com/repos/python/cpython,110169,cpu_count_doc12::3.12,0,merged,tests::docs::skip news::,"* Doc: Specify that os.cpu_count() counts *logicial* CPUs. * Doc: Specify that os.sched_getaffinity(0) is related to the calling thread. * Fix test_posix.test_sched_getaffinity(): restore the old CPU mask when the test completes! <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-109649 --> * Issue: gh-109649 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--110169.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::",Victor Stinner,194129,1148,2,10,7,2,1,b370b73cff134830bae0f368c5bd9c6bc0385bf7::f65bc28f5b6d5092230ac74e3730a24cac9c5f15::
https://api.github.com/repos/python/cpython,110168,regrtest_randomize::main,0,merged,tests::,"If the SOURCE_DATE_EPOCH environment variable is defined, regrtest now disables randomization of tests. <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-110164 --> * Issue: gh-110164 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,1,17,2,3,0,6b499281ffd1c0e5a2ea0579756038ffd0e98fe8::
https://api.github.com/repos/python/cpython,110165,use_process_count::main,0,merged,,"Replace os.cpu_count() with os.process_cpu_count() in modules: * compileall * concurrent.futures * multiprocessing Replace os.cpu_count() with os.process_cpu_count() in programs: * _decimal deccheck.py test * freeze.py * multissltests.py * python -m test (regrtest) * wasm_build.py Other changes: * test.pythoninfo logs os.process_cpu_count(). * regrtest gets os.process_cpu_count() / os.cpu_count() in headers. <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-109649 --> * Issue: gh-109649 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--110165.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::",Victor Stinner,194129,1148,4,50,16,16,0,6b15e90e8a2238415a6033690fc26a88f3e527b4::6c336bc0a43ff0453bfe9258bcbb68c94c74b112::0cc90be360e9b2bf775982a54a764d014f1f1b3a::6059deec8634e1ecb9675fb12e5ba95b348155a2::
https://api.github.com/repos/python/cpython,110161,fix_random::main,0,merged,skip news::,"Oops, I commited debug code by mistake, sorry about that. <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-110014 --> * Issue: gh-110014 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,1,0,3,1,0,5876d8fd72fc4034f84d79dcd918715bb3fb8407::
https://api.github.com/repos/python/cpython,110157,asyncio_timeouts2::main,0,merged,tests::topic-asyncio::skip news::,"Don't measure the CI performance: don't test the maximum elapsed time. The check failed on a slow CI. <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-110088 --> * Issue: gh-110088 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,1,0,3,1,0,e74fa4e9f2f390cd048f72e517cfb33e6c63adfd::
https://api.github.com/repos/python/cpython,110156,regrtest_hostrunner::main,0,merged,,"* _add_python_opts() now handles cross compilation and HOSTRUNNER. * display_header() now tells if Python is cross-compiled, display HOSTRUNNER, and get the host platform. * Remove Tools/scripts/run_tests.py script. * Remove ""make hostrunnertest"": use ""make buildbottest"" or ""make test"" instead. <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-110152 --> * Issue: gh-110152 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,1,125,110,6,0,684e91147229acb8e036acb335d7f2f54bf61bac::
https://api.github.com/repos/python/cpython,110155,unistd3::main,0,merged,skip news::,"* Remove unused <locale.h> include. * Remove <fcntl.h> include in traceback.h. * Remove redundant include: <assert.h> and <stddef.h> are already included by ""Python.h"". * Remove <object.h> include in faulthandler.c. * Add missing <stdbool.h> in pycore_pythread.h if HAVE_PTHREAD_STUBS is defined. * Fix also warnings in pthread_stubs.h: don't redefine macros if they are already defined, like the __NEED_pthread_t macro. <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-110014 --> * Issue: gh-110014 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--110155.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::",Victor Stinner,194129,1148,1,120,59,17,0,d7b3e4609a2dc8d6240fb387ba1b67f0112a3108::
https://api.github.com/repos/python/cpython,110149,test_venv2::main,0,merged,tests::skip news::,"Call also copy_python_src_ignore() on listdir() names. shutil.copytree(): replace set() with an empty tuple. An empty tuple becomes a constant in the compiler and checking if an item is in an empty tuple is cheap. <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-109748 --> * Issue: gh-109748 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,1,7,3,3,0,52fc8c4bbd01a83ff48d478a803c3f464d8bfb1d::
https://api.github.com/repos/python/cpython,110148,regrtest_worker_failed::main,0,merged,skip news::,"Rename WORKER_ERROR to WORKER_BUG. Add WORKER_FAILED state: it does not stop the manager, whereas WORKER_BUG does. Change also TestResults.display_result() order: display failed tests at the end, the important important information. <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-109276 --> * Issue: gh-109276 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,1,83,28,5,0,2a3e1a28848305b9d6e2f159aadec6e1735aed5d::
https://api.github.com/repos/python/cpython,110146,config_spec::main,0,merged,skip news::,"Add a specification of the PyConfig structure to factorize the code. <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-107954 --> * Issue: gh-107954 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,1,262,320,3,0,71916297b2ba0c7127be2ecca3a884d818907b2e::
https://api.github.com/repos/python/cpython,110145,config_parse::main,0,closed,skip news::,"<!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-107954 --> * Issue: gh-107954 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,1,497,0,4,0,e6e4e5cd5ee403513bdfc6d4466d2b2475021358::
https://api.github.com/repos/python/cpython,110139,internal_posix_threads::main,0,merged,skip news::,"* pycore_pythread.h is now the central place to make sure that _POSIX_THREADS and _POSIX_SEMAPHORES macros are defined if available. * Make sure that pycore_pythread.h is included when _POSIX_THREADS and _POSIX_SEMAPHORES macros are tested. * PY_TIMEOUT_MAX is now defined as a constant, since its value depends on _POSIX_THREADS, instead of being defined as a macro. * Document the change and give hints how to fix affected code. <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-110014 --> * Issue: gh-110014 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--110139.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::@vstinner Could we instead exclude this undocumented constant from the limited API? ::I checked and apparently, it's safe to remove this constant, so I created PR gh-110217 for that.::",Victor Stinner,194129,1148,3,73,58,13,0,d1db176a73fda9e567c01623dfe4f4da4658652a::9d8445788162cff1de9254e157d075966a82b453::736a14a42c6562928bf2efaadf4f4320424f8b75::
https://api.github.com/repos/python/cpython,110137,cf_wakeup_lock::main,0,closed,skip news::,"<!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-109917 --> * Issue: gh-109917 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,4,92,103,3,0,5e8706f0e07d22dd57dc9f865ea7c02d0c7b55fd::2949c3d175f979f7db3fe7c397a7c79ef82162c7::fb905f512e212d7d775c5d1cee94bff206a3f634::84dc6ac181e84078eac5b18fc745b2a59b840b6e::
https://api.github.com/repos/python/cpython,110129,mp_wakeup::main,0,closed,awaiting core review::skip news::,"Remove test_gh105829_should_not_deadlock_if_wakeup_pipe_full() of test_concurrent_futures.test_deadlock. The test is no longer relevant. <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-105829 --> * Issue: gh-105829 <!-- /gh-issue-number --> <!-- gh-issue-number: gh-109917 --> * Issue: gh-109917 <!-- /gh-issue-number --> ::I don't get how it was possible to wake up the pipe before, if no data is written.::An empty bytes object is still a thing. It will cause 4 bytes to be sent on the pipe (A 4 byte zero encoding the length of the byte string followed by zero bytes of data). `b""x""` will be sent as 5 bytes.::Oh ok. I suppose that writing 4 or 5 bytes doesn't make any big difference, as soon as we only send 5 bytes and don't fill the pipe.::This test should be kept in some form regardless of the implementation strategy used to solve the deadlock as we want to test that we have actually removed this bug. See https://github.com/python/cpython/pull/108513/commits/995a14c00bbf615c19fc0037c33dab00067df000 for a version that could be used to test for the issue if we use an implementation that relies on making sure we never block on the pipe.::I don't understand the purpose of the test. The test is supposed to check wakeup() implementation, but instead, it overrides wakeup() with a different implementation which blocks if it's called more than once. My change makes sure that calling wakeup() twice or more is safe. The test also overrides ``_ExecutorManagerThread.run()`` whereas this method is responsible to check for the wakeup pipe and stop the loop when the wakeup pipe becomes non-empty. The test is supposed to check that concurrent.futures doesn't hang when it gets a lot of jobs, but instead it mocks parts of concurrent.futures which caused the bug.::I wrote a new **functional** test instead.::I see no reason to not define this as `b""""`. Giving it a value makes it seem like it matters in some way and it is also more bytes to send.::This change seems to serve no purpose ::This comment is misleading as this change has no impact on the gh-105829 issue in the current state. As long as the shutdown lock is not taken by both `wakeup` and `clear` it does not matter if we block on the pipe here. It might in some sense actually be desirable as it could perhaps give the manager thread a better chance of running and moving some objects to the worker queue. At this state, this is just a potential optimization to avoid sending unnecessary wakeup messages. Also, as mentioned before, it is not entirely clear to me that this does not introduce some sort of bug.::By adding reads and writes of `self._awaken` we now have a race in the code. Since it is only assignment and reading it should be fine if one is happy with relying on the atomicity of these bytecode primitives as implemented in CPython currently. Opinions differ on that point I think, and I'm no expert, but it should probably be considered somewhat carefully.::The purpose of the test is to test that we don't deadlock when the pipe blocks. In this version the test is a bit opinionated about what type of implementation it accepts. This was noted in the commit message but should probably have been documented in a comment in the test as well to be extra clear. The point of this test version is to **force** wakeup to block and see that we still don't deadlock. This is done by augmenting the normal wakeup operation with an additional `.put` to a size 1 queue that will block on the second wakeup, which is more or less guaranteed since we also delay the startup of the _ExecutorManagerThread. The initial test was less opinionated and only made sure to delay the _ExecutorManagerThread startup enough to allow the wakeup pipe to fill. The drawback with that version was runtime.::This is still a deadlock test and should probably remain in the deadlock suite::Remove commented code::This substitution is now done after the executor has started. Is this safe, and if so, under what assumptions? ::Also, the test name is very generic and does not describe the purpose of the test::Not all platforms support F_GETPIPE_SZ so this will fail on macos, etc. Fixed by: ```python import fcntl from fcntl import F_GETPIPE_SZ  # Does not exist in all fcntl implementations return fcntl.fcntl(connection.fileno(), F_GETPIPE_SZ) ```::This seems quite confusing to me. First we specify the number of jobs we want and compute a message size based on that. Then we loop back around and recompute the number of jobs based on the message size. This feels circular and redundant. Personally, if we are going to set the message size ourselves, I would stop messing with the pipe and just make sure the data we send is overkill. ```python # Use longer ""wakeup message"" to make the hang more likely # and to speed up the test. The true size will be slightly # larger than this due to overhead but that is irrelevant # for our purposes. msg_size = 2048 thread_wakeup._wakeup_msg = b'x' * msg_size njob = 2 ** 20 // msg_size  # A megabyte should fill up most pipes job_data = range(njob) ``` With this, the test still takes just 0.2s and works the same on all platforms.::This test wont fail gracefully without using sigalarm or some other mechanism to trigger a timeout in case of deadlock. Right now you have to wait a really long time (15 min?) for the test to fail.::Another issue here is that the test relies on the startup time of the ExecutorManagerThread but we dont do anything here to make sure that this is sufficiently slow. I tested what happens if the thread had already started when we reach the test point and the test passed even with a broken implementation. So either we could make sure the startup is slow or that the test fails regardless. I tried it with my suggested size/jobs setting above and that was sufficient to trigger failure even if the thread was started. As always, it is hard to judge how reliable that will be on other systems but I suspect it is overkill enough to fail in most cases.::Oh, it's just that for me, it's more readable.::Also, to be extra clear, as I noted in https://github.com/python/cpython/issues/109917#issuecomment-1737984881, I believe the instability issue we are having in the test right now is due to the ordering of the dummy queue operation and the real wakeup pipe operations. Both primitives are thread safe but not done atomically as a single update and may interleave arbitrarily. With the current order of operations this can lead to an incorrect state where the dummy queue is full but the wakeup pipe is empty. By doing the swap suggested I think this can no longer happen in any possible operation interleaving. There is no indication that the actual implementation is incorrect, this looks like purely a test issue.::It's distracting in this PR though...::",Victor Stinner,194129,1148,2,72,81,3,0,5e8706f0e07d22dd57dc9f865ea7c02d0c7b55fd::2949c3d175f979f7db3fe7c397a7c79ef82162c7::
https://api.github.com/repos/python/cpython,110127,tomllib11::3.11,0,merged,skip news::,"USE_STACKCHECK on using on Windows 32-bit. <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-108851 --> * Issue: gh-108851 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,2,31,7,3,0,8c50ad21567db10a9747f1b5fa39827b4ce3e025::009a98dde0bda21fcc0f0a591a77056bc1ca3dcb::
https://api.github.com/repos/python/cpython,110126,cf_finalization_error12::3.12,0,merged,,"concurrent.futures: The *executor manager thread* now catches exceptions when adding an item to the *call queue*. During Python finalization, creating a new thread can now raise RuntimeError. Catch the exception and call terminate_broken() in this case. Add test_python_finalization_error() to test_concurrent_futures. concurrent.futures._ExecutorManagerThread changes: * terminate_broken() no longer calls shutdown_workers() since the call queue is no longer working anymore (read and write ends of the queue pipe are closed). * terminate_broken() now terminates child processes, not only wait until they complete. * _ExecutorManagerThread.terminate_broken() now holds shutdown_lock to prevent race conditons with ProcessPoolExecutor.submit(). multiprocessing.Queue changes: * Add _terminate_broken() method. * _start_thread() sets _thread to None on exception to prevent leaking ""dangling threads"" even if the thread was not started yet. (cherry picked from commit 635184212179b0511768ea1cd57256e134ba2d75) <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-109047 --> * Issue: gh-109047 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,1,90,17,4,0,49ea36d624909256407a0470fffcbc53f957dc1c::
https://api.github.com/repos/python/cpython,110125,test_mmap_comment::main,0,merged,tests::skip news::needs backport to 3.12::,"<!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-107888 --> * Issue: gh-107888 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,1,1,1,1,1,24c06ced66dcfce8d8813c5d8b0972cee02a35f6::
https://api.github.com/repos/python/cpython,110124,args_uops::main,0,closed,skip issue::awaiting review::skip news::,"<!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> ::",Victor Stinner,194129,1148,1,3,1,2,0,6bf1c101bada767427bc10a2cf368bfff73f7336::
https://api.github.com/repos/python/cpython,110122,remove_make_testall::main,0,merged,,"Remove ""make testall"" target: use ""make buildbottest"" instead. <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-109566 --> * Issue: gh-109566 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,1,7,19,3,0,8725c0148e08bf6a6b5edd6b4e883dac17643179::
https://api.github.com/repos/python/cpython,110121,regrtest_nowindow::main,0,merged,skip news::,"The --nowindow option is deprecated and does nothing but logs a warning. <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-109566 --> * Issue: gh-109566 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,2,1,7,2,0,6efcff152e7d280d5c152802d19864e736898ce6::fd5957edfeba479260532f327f3b5b92564cc85d::
https://api.github.com/repos/python/cpython,110120,pcbuild_rt_fast_ci::main,0,merged,skip news::,"Replace ""--fail-env-changed --fail-rerun"" with ""--fast-ci"". Tools/buildbot/test.bat pass --slow-ci which has the priority over --fast-ci. <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-109566 --> * Issue: gh-109566 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,1,1,1,1,0,292fa12bcff4dc04e37ddb1e9fbc035d7db8043e::
https://api.github.com/repos/python/cpython,110104,test_threading_asan11::3.11,0,merged,tests::,"Skip test_threading tests using thread+fork if Python is built with Address Sanitizer (ASAN). (cherry picked from commit 86e76ab8af9a5018acbcdcbb6285678175b1bd8a) <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-110031 --> * Issue: gh-110031 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,1,28,17,2,0,1cfb22a30fe8a9d4f578db13fb3be1ba55a80ce2::
https://api.github.com/repos/python/cpython,110103,test_threading_asan12::3.12,0,merged,tests::,"Skip test_threading tests using thread+fork if Python is built with Address Sanitizer (ASAN). (cherry picked from commit 86e76ab8af9a5018acbcdcbb6285678175b1bd8a) <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-110031 --> * Issue: gh-110031 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,1,27,16,2,0,838f1b25d5ef59247a96bbdb179d0a5532222138::
https://api.github.com/repos/python/cpython,110102,test_eintr::main,0,merged,tests::skip news::,"<!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-109592 --> * Issue: gh-109592 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,1,16,7,1,0,ecbc35c02f0a477956c54766daf80a4139d73ab4::
https://api.github.com/repos/python/cpython,110100,test_threading_asan::main,0,merged,tests::,"Skip test_threading tests using fork if Python is built with ASAN. <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-110031 --> * Issue: gh-110031 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,1,27,16,2,1,4465278922ecda40e7e095a4af25dff47cf8d430::
https://api.github.com/repos/python/cpython,110099,asyncio_timeout11::3.11,0,merged,,"Fix test_asyncio timeouts: don't measure the maximum duration, a test should not measure a CI performance. Only measure the minimum duration when a task has a timeout or delay. Add CLOCK_RES to test_asyncio.utils. (cherry picked from commit db0a258e796703e12befea9d6dec04e349ca2f5b) <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-110088 --> * Issue: gh-110088 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,1,19,54,7,0,cb5a21957021d847f34c673f358da2409c454766::
https://api.github.com/repos/python/cpython,110098,asyncio_timeout12::3.12,0,merged,,"Fix test_asyncio timeouts: don't measure the maximum duration, a test should not measure a CI performance. Only measure the minimum duration when a task has a timeout or delay. Add CLOCK_RES to test_asyncio.utils. (cherry picked from commit db0a258e796703e12befea9d6dec04e349ca2f5b) <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-110088 --> * Issue: gh-110088 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,1,19,54,7,0,7a21cb1cc48459c16febeef2be5d77f9bfb8e1c8::
https://api.github.com/repos/python/cpython,110092,asyncio_timeout::main,0,merged,tests::topic-asyncio::,"Fix test_asyncio timeouts: don't measure the maximum duration, a test should not measure a CI performance. Only measure the minimum duration when a task has a timeout or delay. Add CLOCK_RES to test_asyncio.utils. <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-110088 --> * Issue: gh-110088 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,1,19,54,7,1,9f503f9cb9618e765c6d99147cf7494ef542711c::
https://api.github.com/repos/python/cpython,110090,gh-109991-3.10::3.10,0,merged,type-security::OS-windows::needs backport to 3.8::needs backport to 3.9::,"Requesting RM signoff on the new policy I've invented in the NEWS entry @pablogsal @ambv Walking a thin line between ""we don't ship binaries"" and ""we still apply security fixes"", but I think this one fits our policy best. <!-- gh-issue-number: gh-109991 --> * Issue: gh-109991 <!-- /gh-issue-number --> ::```suggestion end of life and no future fixes will be made, and this version of Python is ``` We might also mention that there will be no more installers produced for this version?::I thought the wording got a bit awkward when I tried to talk about installers, because anyone can create an installer if they like. Trying to say ""the core Python team won't upload new installers to python.org, just like every other time"" really didn't work.::Fair enough :)::",Steve Dower,1693688,360,2,8,4,3,1,05a837bd3e7c75fdf59fe8edc484e376e3844702::cc4dae984d7aafb3883d35ef4f2b9b86a7cafaf1::
https://api.github.com/repos/python/cpython,110089,lock_tests2::main,0,merged,skip news::,"* Add context manager on Bunch class. * Bunch now catchs exceptions on executed functions and re-raise them at __exit__() as an ExceptionGroup. * Rewrite BarrierProxy.test_default_timeout(). Use a single thread. Only check that barrier.wait() blocks for at least default timeout seconds. * test_with(): inline _with() function. <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-109974 --> * Issue: gh-109974 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,2,257,232,2,0,717369638e501d3f6493105df055092825183e67::3b0ab76cc8d34bf9bd1efd8a45e290a056142616::
https://api.github.com/repos/python/cpython,110082,backport-d102d39-3.11::3.11,0,merged,skip news::,"(cherry picked from commit d102d39bbe175f179f28e4d4bea99dc122da5f8e) <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-101100 --> * Issue: gh-101100 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--110082.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::",Hugo van Kemenade,1324225,628,1,9,10,2,0,c84b833540b0e1754ef05d41a32931dc70d579a6::
https://api.github.com/repos/python/cpython,110080,remove_extern_c::main,0,merged,skip news::,"<!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-110079 --> * Issue: gh-110079 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,1,6,168,18,0,ac3eb711c2987ec5e40d7a26aa1a6008a509f1aa::
https://api.github.com/repos/python/cpython,110078,makefile_remove_deepfreeze::main,0,merged,skip news::,"Remove more references to now unused Python/deepfreeze/deepfreeze.c. <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-108716 --> * Issue: gh-108716 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,1,2,11,2,0,9f5426d3985bccb34782fedb147f8197f1c15e0c::
https://api.github.com/repos/python/cpython,110077,doc_pcbuild_add_project::main,0,merged,skip news::,"<!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-108494 --> * Issue: gh-108494 <!-- /gh-issue-number --> ::I'd suggest copying an existing `test` project if you're adding a test project, or copy an existing library module if you're adding a library module. The main difference is whether they get PGO or not, but also whether a PGO failure will break the entire build.::Very likely that `Tools\msi\lib\lib_files.wxs` and/or `Tools\msi\test\test_files.wxs` will also need updating to get it into the installer. `PC\layout\main.py` only needs updating if you add a test-only extension whose name doesn't start with `_test`.::```suggestion is built successfully. * Ensure the new .vcxproj and .vcxproj.filters files are added to your commit, as well as the changes to pcbuild.sln, pcbuild.proj and any other modified files. ```::",Victor Stinner,194129,1148,2,37,9,2,1,a320a99e2b0957561959103f7cdaa59a0c2c1963::c0a05b41cab77e454fe74fa868ec39290116b31b::
https://api.github.com/repos/python/cpython,110075,freeze_buildbot::main,0,closed,tests::skip news::,"No longer skip test_tools.test_freeze on buildbots. <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-103053 --> * Issue: gh-103053 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,6,37,5,3,0,8d0f4cff16ed14357efdbbdebc1dbe2e9afc83f0::ee4b86afe741a13434170810b2600b8100cbc801::146b788cc1e53f48de7416c80447dbb46768db30::f8e155766858faec8a2eb8c4c243cff9fcc2bcf0::223449f36d44433f7837dbb155ba3ed6aba0eaa4::32d95c9045891d9dace0f65c976f77da9016ae6c::
https://api.github.com/repos/python/cpython,110073,109778-fix-samp-role-usage::main,0,merged,docs::skip news::,"<!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> ### What - Applies fixes found in #109778 during code review <!-- gh-issue-number: gh-109634 --> * Issue: gh-109634 <!-- /gh-issue-number --> ::![image](https://github.com/python/cpython/assets/1324225/edf8ca16-b6aa-4896-bef7-6e1e7c149e8a) Is this saying that all three `ooo` characters are the octal value? That `\777` is the octal value `777`? Or does the first `o` indicate that it's octal (compare the `x` for hexadecimal below) and the last two are the value? That `\o77` is the octal value `77`? So should it be something like this? ```suggestion | :samp:`\\o{oo}`         | Character with octal value *oo* | (2,4) | ``` ![image](https://github.com/python/cpython/assets/1324225/58f14d5a-22d8-4346-9475-4b4196680c1c) Or with another character for the sample to make it clearer? For example: ```suggestion | :samp:`\\o{xx}`         | Character with octal value *xx* | (2,4) | ``` ![image](https://github.com/python/cpython/assets/1324225/62530c7d-af28-4dbd-a53b-7ae9298a6b03) ::I think it is all three: ```python assert chr(0o123) == ""\123"" ```::",Jacob Coffee,45884264,29,2,3,3,3,0,5eddfcfed8b5823c809b83b5814ac2ba0a446a8d::8f99af248a56d48059b82d249b50422afbfd02a8::
https://api.github.com/repos/python/cpython,110072,faulthandler11::3.11,0,merged,skip news::,"faulthandler now detected freed interp and freed tstate, and no longer dereference them. Backport to 3.11: add pycore_pymem.h include to traceback.c. (cherry picked from commit 2e37a38bcbfbe1357436e030538290e7d00b668d) <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-110052 --> * Issue: gh-110052 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,1,39,12,2,0,417696565f5b37d7c7f546b4b1a446a6756968e3::
https://api.github.com/repos/python/cpython,110071,faulthandler12::3.12,0,merged,skip news::,"faulthandler now detected freed interp and freed tstate, and no longer dereference them. (cherry picked from commit 2e37a38bcbfbe1357436e030538290e7d00b668d) <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-110052 --> * Issue: gh-110052 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,1,38,12,2,0,faf7d4a2abfee4f78f8393a4ad47a4ab07813676::
https://api.github.com/repos/python/cpython,110069,faulthandler::main,0,merged,skip news::,"faulthandler now detected freed interp and freed tstate, and no longer dereference them. <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-110052 --> * Issue: gh-110052 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,1,38,12,2,1,585a1a428a2652db7305ff167d84612d4158cc5f::
https://api.github.com/repos/python/cpython,110062,regrtest_ctrlc::main,0,merged,skip news::,"In the subprocess code path, wait until the child process completes with a timeout of EXIT_TIMEOUT seconds. Fix create_worker_process() regression: use start_new_session=True if USE_PROCESS_GROUP is true. WorkerThread.wait_stopped() uses a timeout of 60 seconds, instead of 30 seconds. <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-109566 --> * Issue: gh-109566 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,1,33,14,4,0,126a502af3b400cc81fb690206e13d287f415fbb::
https://api.github.com/repos/python/cpython,110058,test_pty::main,0,merged,tests::skip news::,"In 2003, test_pty got a hardcoded timeout of 10 seconds to prevent hanging on AIX & HPUX ""if run after test_openpty"": commit 7d8145268ee282f14d6adce9305dc3c1c7ffec14. Since 2003, test_pty was no longer reported to hang on AIX. But today, the test can fail simply because a CI is very busy running other tests in parallel. The timeout of 10 seconds is no longer needed, just remove it. Moreover, regrtest now has multiple built-in generic timeout mecanisms. <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-109960 --> * Issue: gh-109960 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,1,0,11,1,0,7140d489f99d9726e1ba32fe7de4bd24d87c1654::
https://api.github.com/repos/python/cpython,110057,fix_lock_tests::main,0,merged,tests::,"Fix race conditions in test_threading lock tests. Wait until a condition is met rather than using time.sleep() with a hardcoded number of seconds. * Replace sleeping loops with support.sleeping_retry() which raises an exception on timeout. * Add wait_threads_blocked(nthread) which computes a sleep depending on the number of threads. Remove _wait() function. * test_set_and_clear(): use a way longer Event.wait() timeout. * BarrierTests.test_repr(): wait until the 2 threads are waiting for the barrier. Use a way longer timeout for Barrier.wait() timeout. * test_thread_leak() no longer needs to count len(threading.enumerate()): Bunch uses threading_helper.wait_threads_exit() internally which does it in wait_for_finished(). * Add BaseLockTests.wait_phase() which implements a timeout. test_reacquire() and test_recursion_count() use wait_phase(). <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-109974 --> * Issue: gh-109974 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,1,226,124,2,1,74cd58d2e52c29b7a3e8ab54a5e8eb826073a201::
https://api.github.com/repos/python/cpython,110037,mp_popen_terminate::main,0,merged,,"On Windows, multiprocessing Popen.terminate() now catchs PermissionError and get the process exit code. If the process is still running, raise again the PermissionError. Otherwise, the process terminated as expected: store its exit code. <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-110036 --> * Issue: gh-110036 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,1,17,4,3,0,0ed6e0baf77bf84fa378c18168d53f5748ae7441::
https://api.github.com/repos/python/cpython,110035,test_interprocess_signal::main,0,merged,,"Fix test_interprocess_signal() of test_signal. Make sure that the subprocess.Popen object is deleted before the test raising an exception in a signal handler. Otherwise, Popen.__del__() can get the exception which is logged as ""Exception ignored in: ...."" and the test fails. <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-110033 --> * Issue: gh-110033 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,1,13,0,2,0,628edcec04977f96091e60787b0ca46b753eacfa::
https://api.github.com/repos/python/cpython,110026,enhance_test_gdb::main,0,merged,skip news::,"* Split PyBtTests.test_pycfunction() into 2 files, test_cfunction and test_cfunction_full, and 6 functions: * test_pycfunction_noargs() * test_pycfunction_o() * test_pycfunction_varargs() * test_pycfunction_varargs_keywords() * test_pycfunction_fastcall() * test_pycfunction_fastcall_keywords() * In verbose mode, these ""pycfunction"" tests now log each tested call. * Move get_gdb_repr() to PrettyPrintTests. * Replace DebuggerTests.get_sample_script() with SAMPLE_SCRIPT. * Rename checkout_hook_path to CHECKOUT_HOOK_PATH. * Rename gdb_version to GDB_VERSION_TEXT. * Replace (gdb_major_version, gdb_minor_version) with GDB_VERSION. * run_gdb() uses ""backslashreplace"" error handler. * Add check_gdb() function to util.py. * Enhance support.check_cflags_pgo(): check also for sysconfig PGO_PROF_USE_FLAG (if available) in compiler flags. <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-109972 --> * Issue: gh-109972 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,2,299,218,8,0,18029d6f753c93c2dd5e9ad6c081099765b6b645::8f62f7acdf8628d639922b4227afabc8df278792::
https://api.github.com/repos/python/cpython,110018,cf_fix_test_timeout::main,0,merged,tests::,"Fix test_timeout() of test_concurrent_futures.test_wait. Remove the future which may or may not complete depending if it takes longer than the timeout ot not. Keep the second future which does not complete before wait(). Make also the test faster: 0.5 second instead of 6 seconds, so remove @support.requires_resource('walltime') decorator. <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-109594 --> * Issue: gh-109594 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,1,13,8,2,0,d9d8cc02b996055b4d092096e169fc82c0fe28da::
https://api.github.com/repos/python/cpython,110002,gh-109991-openssl3011-cli::main,0,merged,needs backport to 3.11::,<!-- gh-issue-number: gh-109991 --> * Issue: gh-109991 <!-- /gh-issue-number --> ::,Ned Deily,5833005,142,1,9,7,3,1,7d5e13a9f32636f371d59f2db35df073d906fe27::
https://api.github.com/repos/python/cpython,109999,backport-f65f9e8-3.12::3.12,0,merged,,"…GH-109819). (cherry picked from commit f65f9e80fe741c894582a3e413d4e3318c1ed626) <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-109818 --> * Issue: gh-109818 <!-- /gh-issue-number --> ::",Jelle Zijlstra,906600,635,1,14,0,3,1,3d8ce93fd53ed2917a2085768d5383e266424a5c::
https://api.github.com/repos/python/cpython,109982,backport-f49958c-3.12::3.12,0,merged,docs::skip issue::skip news::,"As discussed in comments to GH-109544, the semantics of this attribute are somewhat confusing. Add a note explaining its limitations and steering users towards __required_keys__ and __optional_keys__ instead. (cherry picked from commit f49958c886a2f2608f1008186d588efc2a98b445) Co-authored-by: Jelle Zijlstra <jelle.zijlstra@gmail.com> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--109982.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::Just to bring it in line with what other parts of the typing docs convention ```suggestion total. For example, a ``TypedDict`` with ``__total__`` set to ``True`` may ```::This change is a backport. If you want to fix the doc, you should fix it in the main branch first.::",Miss Islington (bot),31488909,73,1,15,0,1,1,0c1ffb7006864d7ffc0d761aaf4b474133e0b1b1::
https://api.github.com/repos/python/cpython,109977,split_test_gdb::main,0,merged,,"Split test_gdb.py file into a test_gdb package made of multiple tests, so tests can now be run in parallel. * Create Lib/test/test_gdb/ directory. * Split test_gdb.py into multiple files in Lib/test/test_gdb/ directory. * Move Lib/test/gdb_sample.py to Lib/test/test_gdb/ directory. Update get_sample_script(): use __file__ to locate gdb_sample.py. * Move gdb_has_frame_select() and HAS_PYUP_PYDOWN to test_misc.py. * Explicitly skip test_gdb on Windows. Previously, test_gdb was skipped even if gdb was available because of gdb_has_frame_select(). <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-109972 --> * Issue: gh-109972 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,1,1124,1066,11,1,415a93aee1c7671994e7027969944179257faf7c::
https://api.github.com/repos/python/cpython,109970,test_copy_python_src_ignore_wasm::main,0,merged,tests::skip news::,"Not only check if src_dir exists, but look also for Lib/os.py landmark. <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-109615 --> * Issue: gh-109615 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,1,9,1,1,0,c7d02fcb241ee60e2127fa948568c4817246fa34::
https://api.github.com/repos/python/cpython,109969,regrtest_wasi::main,0,merged,skip news::,"regrtest: --fast-ci and --slow-ci options no longer enable --rerun if the --python option is used. <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-109566 --> * Issue: gh-109566 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,1,12,3,2,0,b61593e5466173b046d95457ee763350bcea52be::
https://api.github.com/repos/python/cpython,109968,issue-109961::main,0,merged,docs::skip news::needs backport to 3.11::needs backport to 3.12::,"This is how it looks now: <img width=""796"" alt=""Снимок экрана 2023-09-27 в 16 22 12"" src=""https://github.com/python/cpython/assets/4660275/77e53cbb-c327-49db-a9a3-10a40b0dc807""> I've also added `__copy__` and `__deepcopy__` definitions, so they can be referenced. Refs https://github.com/python/cpython/issues/101100 <!-- gh-issue-number: gh-109961 --> * Issue: gh-109961 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--109968.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::But please keep `:noindex:`. There are already entries for `__replace__` etc, and duplicates that refer to the same target are confusing.::Hm, when adding `noindex` it starts to fail `nitpick` mode: ``` /Users/sobolev/Desktop/cpython/Doc/library/copy.rst:90: WARNING: py:meth reference target not found: object.__copy__ /Users/sobolev/Desktop/cpython/Doc/library/copy.rst:90: WARNING: py:meth reference target not found: object.__deepcopy__ /Users/sobolev/Desktop/cpython/Doc/library/copy.rst:112: WARNING: py:meth reference target not found: object.__replace__ ```::With two indexes we have: <img width=""302"" alt=""Снимок экрана 2023-09-27 в 17 55 22"" src=""https://github.com/python/cpython/assets/4660275/4101d626-797d-4ea1-81f2-2387f5c8d76a""> They link to: - `copy.html#copy.object.__replace__` - `copy.html#index-2` Do we need the `index` directive itself now?::You could consider [``:noindexentry:``](https://www.sphinx-doc.org/en/master/usage/restructuredtext/domains.html#basic-markup)? A::It generated just one link in `index.html`: `copy.html#index-2` No warnings 👍 Thanks, TIL about `noindexentry` :)::This answers a question I had: with noindexentry, can we still link to the method. I just hope it’s not indexed as `copy.object` instead of `builtins.object`!::Of course, it is `copy.object`. https://cpython-previews--109968.org.readthedocs.build/en/109968/library/copy.html#copy.object.__replace__ You need to add `.. currentmodule:: .` to make it builtin.::",Nikita Sobolev,4660275,4663,3,21,13,2,1,dd1bbb5c271616e22d31ce20ec0d43e674f949e3::15de5b9e7a5a5063b95691e508bcec0b7fbb6f68::e9ea5140d4a500990f341344536ce2d748cd222b::
https://api.github.com/repos/python/cpython,109962,test_copy_python_src_ignore11::3.11,0,merged,skip news::,"Fix the test when run on an installed Python: use ""abs_srcdir"" of sysconfig, and skip the test if the Python source code cannot be found. * Tools/patchcheck/patchcheck.py, Tools/freeze/test/freeze.py and Lib/test/libregrtest/utils.py now first try to get ""abs_srcdir"" from sysconfig, before getting ""srcdir"" from sysconfig. * test.pythoninfo logs sysconfig ""abs_srcdir"". (cherry picked from commit b89ed9df39851348fbb1552294644f99f6b17d2c) <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-109615 --> * Issue: gh-109615 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,1,32,8,5,0,392a73a16519ff95d1fb152f9634c875f12b26a1::
https://api.github.com/repos/python/cpython,109958,test_copy_python_src_ignore::main,0,merged,skip news::,"Fix the test when run on an installed Python: use ""abs_srcdir"" of sysconfig, and skip the test if the Python source code cannot be found. * Tools/patchcheck/patchcheck.py, Tools/freeze/test/freeze.py and Lib/test/libregrtest/utils.py now first try to get ""abs_srcdir"" from sysconfig, before getting ""srcdir"" from sysconfig. * test.pythoninfo logs sysconfig ""abs_srcdir"". <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-109615 --> * Issue: gh-109615 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,1,30,8,5,1,b9027a92cb04a0fcc90efa051635dcfaf1641fa1::
https://api.github.com/repos/python/cpython,109954,regrtest_python_opts_wasm::main,0,merged,skip news::,"WASM and WASI buildbots use multiple PYTHON environment variables such as PYTHONPATH and _PYTHON_HOSTRUNNER. Don't use -E if the --python=COMMAND option is used. <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-109566 --> * Issue: gh-109566 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,1,20,8,3,0,4cc97529fd17badb644d74d540440d1a4049d70a::
https://api.github.com/repos/python/cpython,109953,patch-1::main,0,closed,docs::skip issue::awaiting core review::skip news::needs backport to 3.11::needs backport to 3.12::,"`decimal.Decimal.exp()` was introduced in Python 2.6. This snippet is almost redundant, cause the native one should be more proper in most cases. <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--109953.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::",,3125695,18,1,0,24,1,0,b1b37774396d6ec2e690bc34eefc15ed8fb6763c::
https://api.github.com/repos/python/cpython,109951,freeze_src_dir311::3.11,0,merged,skip news::,"Fix copy_source_tree() function of test_tools.test_freeze: * Don't copy SRC_DIR/build/ anymore. This directory is modified by other tests running in parallel. * Add test.support.copy_python_src_ignore(). * Use sysconfig to get the source directory. * Use sysconfig.get_config_var() to get CONFIG_ARGS variable. (cherry picked from commit 1512d6c6ee2a770afb339bbb74c1b990116f7f89) <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-109615 --> * Issue: gh-109615 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,1,58,56,5,0,78c961a899736f2f4706c53fecf96f529955f98e::
https://api.github.com/repos/python/cpython,109950,freeze_src_dir312::3.12,0,merged,skip news::,"Fix copy_source_tree() function of test_tools.test_freeze: * Don't copy SRC_DIR/build/ anymore. This directory is modified by other tests running in parallel. * Add test.support.copy_python_src_ignore(). * Use sysconfig to get the source directory. * Use sysconfig.get_config_var() to get CONFIG_ARGS variable. (cherry picked from commit 1512d6c6ee2a770afb339bbb74c1b990116f7f89) <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-109615 --> * Issue: gh-109615 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,1,60,50,5,0,1fb2b190f33a7bc64b24e7d11df7b7b978fe5289::
https://api.github.com/repos/python/cpython,109949,cf_fix_test_future_times_out::main,0,merged,tests::skip news::,"as_completed() uses a timeout of 100 ms instead of 10 ms. Windows monotonic clock resolution is around 15.6 ms. <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-109565 --> * Issue: gh-109565 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,1,5,2,1,1,afcaa29325c19245c1c85f2b3e733db6c42e811c::
https://api.github.com/repos/python/cpython,109948,doc_pyapi_func_no_link311::3.11,0,merged,docs::skip news::,"Document PyMODINIT_FUNC macro. Remove links to PyAPI_FUNC() and PyAPI_DATA() macros since they are not documented. These macros should only be used to define the Python C API. They should not be used outside Python code base. (cherry picked from commit d7a27e527d7e669d2e45cff80ad725978226477c) <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-107298 --> * Issue: gh-107298 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--109948.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::",Victor Stinner,194129,1148,1,26,2,3,0,587927b11717d307bd3e612fc927aee5ccc0e4e0::
https://api.github.com/repos/python/cpython,109935,freeze_src_dir::main,0,merged,skip news::,"* Use sysconfig to get the source directory. * Use sysconfig.get_config_var() to get CONFIG_ARGS variable. <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-109615 --> * Issue: gh-109615 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,1,59,56,5,1,458a4d4e4d1bc3df4624ed05596b11d913067a0b::
https://api.github.com/repos/python/cpython,109931,fix_doc_configure_warnings::main,0,merged,skip news::,"<!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--109931.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end --> <!-- gh-issue-number: gh-101100 --> * Issue: gh-101100 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,2,8,9,2,0,791d8196c00cfc1324e378f41ce25f55a069f7c4::52c17262415e1acb3b806516c5b1200d8a89edd8::
https://api.github.com/repos/python/cpython,109928,test_mmap::main,0,merged,tests::skip news::,"<!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-107888 --> * Issue: gh-107888 <!-- /gh-issue-number --> ::perhaps make this a self.skipTest message?::> perhaps make this a self.skipTest message? That's probably a good idea although there are plenty of other places in `test_mmap` that simply do a `pass` for similar types of failures.::test_access_parameter() is a long function: 124 lines, it contains many tests. If someone wants to use skipTest() as some places, the function should be splitted into sub-functions. Otherwise, there is a risk that newly added code below will be skipped by mistake. Today I lost 10 min trying to understand why the flush() call that I added at the end doesn't work as expected... ```py def display_header(use_resources: tuple[str, ...]): ...  # <=== a lot more code obviously # This makes it easier to remember what to set in your local # environment when trying to reproduce a sanitizer failure. asan = support.check_sanitizer(address=True) msan = support.check_sanitizer(memory=True) ubsan = support.check_sanitizer(ub=True) sanitizers = [] if asan: sanitizers.append(""address"") if msan: sanitizers.append(""memory"") if ubsan: sanitizers.append(""undefined behavior"") if not sanitizers: return print(f""== sanitizers: {', '.join(sanitizers)}"") for sanitizer, env_var in ( (asan, ""ASAN_OPTIONS""), (msan, ""MSAN_OPTIONS""), (ubsan, ""UBSAN_OPTIONS""), ): options= os.environ.get(env_var) if sanitizer and options is not None: print(f""== {env_var}={options!r}"") sys.stdout.flush()  # <====== ADDED CODE ====== ```::",Victor Stinner,194129,1148,1,9,4,1,0,7b401f44ed6e7f501076c4452e5a5bd5cd2ac341::
https://api.github.com/repos/python/cpython,109926,regrtest_python_opts::main,0,merged,skip news::,"* On Windows, use subprocess.run() instead of os.execv(). * Only add needed options * Rename reexec parameter to _add_python_opts. * Rename --no-reexec option to --dont-add-python-opts. <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-109566 --> * Issue: gh-109566 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,1,62,38,4,0,3f828829fbd25d232ad244fe2cc6e122e70366a2::
https://api.github.com/repos/python/cpython,109909,regrtest_reeexc::main,0,merged,,"When --fast-ci or --slow-ci option is used, regrtest now replaces the current process with a new process to add ""-u -W default -bb -E"" options to Python. The following methods to run the Python test suite don't replace the process: * ""import test.autotest"" * ""from test.regrtest import main; main()"" Changes: * PCbuild/rt.bat and Tools/scripts/run_tests.py no longer need to add ""-u -W default -bb -E"" options to Python: it's now done by regrtest. * Fix Tools/scripts/run_tests.py: flush stdout before replacing the process. Previously, buffered messages were lost. <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-109566 --> * Issue: gh-109566 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,1,107,14,7,0,f1bb3addb847f0f9d7d55b2af9a4edbb539031bb::
https://api.github.com/repos/python/cpython,109907,process_cpu_count::main,0,merged,,"* Fix test_posix.test_sched_getaffinity(): restore the old CPU mask when the test completes! * Doc: Specify that os.cpu_count() counts *logicial* CPUs. <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-109649 --> * Issue: gh-109649 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--109907.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::Is there any reason to implement this in C?  Can't this be implemented in Python just using `return min(os.cpu_count(), len(os.sched_getaffinity(0)))` with additional None or empty set edge case handling added? Sure that temporary set may not be efficient, but this isn't a function that should need efficiency for its use cases.::Hum. I started to write a rationale to justify that, but I instead, I reimplemented the function in pure Python: it's simpler :-) --- My first version also had an implementation for Windows which requires C code. But we can reconsider C vs Python implementation when we will consider adding a Windows implementation.::Windows requiring C bits suggests we should just add `sched_getaffinity` for Windows (as it's own feature request and PR).  https://learn.microsoft.com/en-us/windows/win32/api/winbase/nf-winbase-getprocessaffinitymask (which I think you had used) supports up to 64, and the hierarchical complexity added by https://learn.microsoft.com/en-us/windows/win32/procthread/processor-groups appears to add support for a whole lot more.::Could this ever return an empty set for any reason?  it might be safer to do something like ```python cpu_set = sched_getaffinity(0) num_cpus = cpu_count() return min(len(cpu_set), num_cpus) if cpu_set else num_cpus ``` Then again, I'm probably overthinking things.  The system API should never return an empty set.::_(mostly wondering if an empty set signifies ""all"" on some systems)_::On Linux, you cannot assign 0 CPUs to a process: ``` $ python >>> import os >>> os.sched_setaffinity(0, []) OSError: [Errno 22] Invalid argument ``` man sched_getaffinity: ``` ERRORS EINVAL The affinity bit mask mask contains no proces- sors that are currently physically on the sys- tem  and  permitted to the thread according to any restrictions that may be imposed by cpuset cgroups or the ""cpuset"" mechanism described in cpuset(7). EINVAL (sched_getaffinity() and, before Linux  2.6.9, sched_setaffinity())   cpusetsize  is  smaller than the size of the affinity mask used by the kernel. ``` From what I understand, sched_setaffinity() cannot set an empty list of CPU. Also os.sched_getaffinity() **cannot fail**. sched_getaffinity() returns EINVAL if the mask is too small, Python uses a loop of make this list larger until it's big enough.::After the discussion with @vstinner, I concur his comment.::It is probably more accurate to say ""usable by the calling thread of the current process"". I believe each thread can have its own affinity. _(For parallelism planning purposes, the main thread prior to spawning others is likely what people would be calling this from anyways)_::Sadly, you're right. I updated the doc.::""is restricted to""::Oops! Fixed.::",Victor Stinner,194129,1148,2,125,47,8,0,74ed3db3af056325c713b7f86b8b5bdc6370a308::9018c69d69df02150ced7a2cb157b49121b4d6ab::
https://api.github.com/repos/python/cpython,109906,cf_dead_code::main,0,merged,skip issue::skip news::,"process_result_item() cannot be called with an int anymore, the protocol changed. <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> ::",Victor Stinner,194129,1148,1,8,18,1,0,9194686e9ac3257206c278beb74c4008c15dfcd5::
https://api.github.com/repos/python/cpython,109903,regrtest_stdout::main,0,merged,skip news::,"Remove replace_stdout(): call sys.stdout.reconfigure() instead of set the error handler to backslashreplace. display_header() logs an empty line and flush stdout. Remove encoding workaround in display_header() since stdout error handler is now set to backslashreplace earlier. <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-109276 --> * Issue: gh-109276 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,1,27,54,4,0,b5c891bdb4de4acd5d272bb34a478d9d1b56c8a6::
https://api.github.com/repos/python/cpython,109902,main::main,0,merged,docs::skip issue::skip news::,"Fix a typo in the parameter name of random.expovariate. <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--109902.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::",,8856508,1,1,1,1,1,0,03a1ce0aa9be2ab4419380975f9c899fc0b93a3b::
https://api.github.com/repos/python/cpython,109887,cf_restore_stderr::main,0,merged,tests::skip news::,"test_error_at_task_unpickle() and test_error_during_result_unpickle_in_result_handler() now restore sys.stderr which is overriden by _raise_error_ignore_stderr(). <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-109832 --> * Issue: gh-109832 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,1,6,0,1,0,236ac3df6d02dc77efc0b59cf10ecf3dd481e05c::
https://api.github.com/repos/python/cpython,109884,backport-7c61a36-3.12::3.12,0,merged,skip news::,"(cherry picked from commit 7c61a361fc2e93375e22849fffbc20b60e94dbde) <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-101100 --> * Issue: gh-101100 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--109884.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::",Hugo van Kemenade,1324225,628,1,9,11,2,1,358adc0ebd2357ca34e9e7fb7136ca40e4b6118a::
https://api.github.com/repos/python/cpython,109875,barrier_timeout::main,0,merged,tests::skip news::,"Increase timeouts. Barrier default timeout should be long enough to spawn 4 threads on a slow CI. <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-109401 --> * Issue: gh-109401 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,1,6,4,1,0,ca0d11ee6ba5536a7a7da0f0dbc8f8d2d104d354::
https://api.github.com/repos/python/cpython,109872,test_venv::main,0,merged,tests::,"Fix test_zippath_from_non_installed_posix() of test_venv: don't copy __pycache__/ directories because they can be modified by other Python tests running in parallel. <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-109748 --> * Issue: gh-109748 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,1,12,1,2,0,374e0fe73f094c82d423acc5e5c78aadee055f4d::
https://api.github.com/repos/python/cpython,109871,regrtest_load_tracker::main,0,merged,,"Disable the Windwos load tracker when hunting reference leak. <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-109739 --> * Issue: gh-109739 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,1,16,3,2,0,582f4bd273db35660131e7fcf8513b6ea5f171d0::
https://api.github.com/repos/python/cpython,109869,deepcopy_skip_memo::main,0,merged,performance::skip news::,"In the `copy.deepcopy` method we can skip the initial memo check if the memo was just created. Benchmark: ``` from copy import deepcopy obj={'simple': 'dict'} %timeit deepcopy(obj) ``` ``` main: 1.91 µs ± 1.38 ns per loop (mean ± std. dev. of 7 runs, 1,000,000 loops each) pr: 1.82 µs ± 8.18 ns per loop (mean ± std. dev. of 7 runs, 1,000,000 loops each) ``` <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-109868 --> * Issue: gh-109868 <!-- /gh-issue-number --> ::",Pieter Eendebak,883786,14,2,5,5,1,0,2260fca5203f0a2c21741e696f1db44688a98502::0816d78cc664d1ac86fc0aa59795e1ae0cbab12d::
https://api.github.com/repos/python/cpython,109866,test_gettext::main,0,merged,tests::skip news::,"<!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-109864 --> * Issue: gh-109864 <!-- /gh-issue-number --> ::",Serhiy Storchaka,3659035,401,1,13,2,1,0,345e7d9d86f1ba972877b4c25ac4b25331ce3f62::
https://api.github.com/repos/python/cpython,109854,patchcheck-docs-whitespace::main,0,merged,skip news::,"<!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> Moves one of the patchcheck checks to pre-commit. # 1. patchcheck's `normalize_docs_whitespace` runs on files where `fn.startswith('Doc') and fn.endswith(('.rst', '.inc')` pre-commit's `trailing-whitespace` is already running on `c`, `python` and `rst` in the whole codebase. So this widens the check to cover `inc` files in the whole codebase, not just in `Doc`. I think this is a good thing. # 2. patchcheck substitutes matches of `re.compile(br'\s+(\r?\n)$')` with `br'\1`. That is, it strips multiple trailing `\r` and `\n` characters. pre-commit's `trailing-whitespace` trims all trailing whitespace by default ([docs](https://github.com/pre-commit/pre-commit-hooks#trailing-whitespace)). This also widens the check, I think this is a good thing. # 3. ~Remove `docs_modified(doc_files)` from patchcheck, it merely printed out whether any docs files were modified. I don't think it's useful now patcheck does no docs checking, and I'd like to eventually remove patchcheck.~ # 4. ~Some people might be still running `make patchcheck`? If so, to maintain some kind of parity, I've added steps to install and run pre-commit as part of the Makefile command.~ We're doing a similar thing in the PEPs repo: https://github.com/python/peps/blob/a159a9ac58ca73dc1da0b626b6df77807af455d0/Makefile#L62-L77 (And Pillow: https://github.com/python-pillow/Pillow/blob/main/Makefile) Does this seem useful, or better to leave it out? # 5. Finally, some cleanup of `patchcheck.py`: whitespace, f-strings, consistent pluralised outputs, fix typo. <!-- gh-issue-number: gh-109408 --> * Issue: gh-109408 <!-- /gh-issue-number --> ::Won't this result in sentences like ""Please fix the 52 52 files with whitespace issues""? ```suggestion print(f'Please fix the {n_files_str(count)} with whitespace issues') ```::Yes, that's a little too much pluralising! 🙃 ::I don't think `make patchcheck` should run pre commit, especially if the goal is to remove it. Hence I'd say this is a docs point to communicate. ```suggestion ``` ::I quite like the 's' variable approach, it's more readable: ```suggestion s = ""s"" if count != 1 else """" return f""{count} file{s}"" ``` ::Remove the split call?: ```suggestion cmd = (""git"", ""remote"", ""show"", remote_name) ``` ::This will currently check if the user has written documentation for their patch (Docs updated... NO). If we delete from patchcheck, could we look into adding a check in pre-commit for if a user has added a NEWS entry or docs? We should also delete the function, if deleting the only usage.::Let's keep the original, it's more greppable for the actual command.::`docs_modified` doesn't really fit in pre-commit: it only reports and doesn't pass/fail. And pre-commit hides output by default when it passing. So I think I'll reinstate this for now, it's just a couple of lines.::I'm thinking it would be a good idea to add a `make lint` target like we have for the PEPs repo (and Pillow), which seems to work there. Perhaps we should add `make lint` now and have it run pre-commit; and maybe also patchcheck?::```suggestion c_files = [fn for fn in file_paths if fn.endswith(('.c', '.h'))] doc_files = [fn for fn in file_paths if fn.startswith('Doc') and fn.endswith(('.rst', '.inc'))] ```::I'd agree. We should also update the devguide (currently only [patchcheck is mentioned](https://devguide.python.org/getting-started/pull-request-lifecycle/#patchcheck))::Perhaps we could modify the goal to be removal of ``patchcheck`` just from CI rather than entirely? I think it does provide useful features to remind contributors (especially newer contributors) what a PR needs. (But also if there is a way to improve this, I'd be interested)::I'd prefer it if we don't need to maintain the same linter/fixer in two places. I also wonder how many newer contributors run patchcheck, and for that matter how many older contributors too. Anyway, once we move linters/fixers to pre-commit, if it's still useful to output a summary, then we can definitely keep that in some form or other.::Good idea ;)::I've removed the `Makefile` changes from this PR, let's decide what to later after discussion: https://discuss.python.org/t/do-you-use-make-patchcheck/34743?u=hugovk::",Hugo van Kemenade,1324225,628,12,13,33,2,0,dff437b42ca53f884444e87f90ba3118e26b5517::97c6ccfe5061a0bd90edb8a8c0f248feefa58dcd::029a9a4c16cda106cacd0fc70177880f84469c5f::d7690a3588a7f32117a730c35a2697fa9cc17688::5cfcd19a69f2f63dcad5e4be31cec478efad3e63::1eb8042bcd2f21dfdd1f7acc291e3edb45037e94::a85cd1c27ecde5e4e4d33afcae094b855b06a27e::433153d6fd65581e1cb538c45c4e04dad874cc72::a4293442f25a2078ca54b2e68b219da1f6841264::63c6d17a895e7a0abb19f08781ac82390c283d88::05a5d357d83932441d1e7834523d07c686c6aa6d::f4b16ecf675f58e04c037cd87c016a2a1c4a38ff::
https://api.github.com/repos/python/cpython,109852,thread311::3.11,0,merged,skip news::,"…g raw memory allocator (#109808) (cherry picked from commit 1b8f2366b38c87b0450d9c15bdfdd4c4a2fc3a01) <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-109795 --> * Issue: gh-109795 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,1,6,3,1,0,75e36a4540c3250aa2f7c686a2ab6615cbdc06ea::
https://api.github.com/repos/python/cpython,109844,docs/whatsnew/c-api-fixup::main,0,merged,docs::skip news::,* Not for backporting * xref #109830 <!-- gh-issue-number: gh-109190 --> * Issue: gh-109190 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--109844.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::,Adam Turner,9087854,89,1,0,2,1,0,cd2c0dfb535f8ceb8592365537b50401269aa1bc::
https://api.github.com/repos/python/cpython,109842,fix_testclinic_limited::main,0,merged,skip news::,"Make sure that the Py_BUILD_CORE macro is not defined. <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-109723 --> * Issue: gh-109723 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,1,6,0,1,0,51b8b7b6d6a2238889f523c6fcd24baac0e554a1::
https://api.github.com/repos/python/cpython,109835,asan_test_is_alive_after_fork::main,0,merged,skip news::,"Skip test_is_alive_after_fork() of test_threading if Python is built with Address Sanitizer (ASAN). <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-89363 --> * Issue: gh-89363 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,1,5,1,2,0,6b2201ea6e203ef0bdd70a49bab3f0888b48cd22::
https://api.github.com/repos/python/cpython,109834,fix_test_wait_for::main,0,merged,tests::topic-asyncio::skip news::,"Expect the test to be ""short"" but don't measure the exact performance of the CI. SHORT_TIMEOUT is about 30 seconds whereas the cancelled coroutine takes around 1 hour. <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-109833 --> * Issue: gh-109833 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,1,3,2,1,0,9f980e70f1f507e47ad4c6f527c557b7c45ca572::
https://api.github.com/repos/python/cpython,109831,regrtest_rerun_env_changed::main,0,merged,,"When a test fails with ""env changed"" and --rerun option is used, the test is now re-run in verbose mode in a fresh process. <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-109276 --> * Issue: gh-109276 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,1,21,7,3,0,a090e590fc7cd53c3e64b3055d34578918bc8594::
https://api.github.com/repos/python/cpython,109828,libregrtest_results::main,0,merged,skip news::,"* Factorize code listing ""bad / env changed / ..."" tests. * Add TestResults.is_all_good() method. * Move ""All 400 tests OK."" to the end * Move ""Test suite interrupted by signal SIGINT."" to the end. <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-109276 --> * Issue: gh-109276 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,1,31,39,2,0,259bcbf05176909ad3cabc20b77693a52cdb8737::
https://api.github.com/repos/python/cpython,109813,gh-109812::main,0,merged,docs::skip news::,"<!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> This changes the wording for an incorrect `collections.Counter` piece. <!-- gh-issue-number: gh-109812 --> * Issue: gh-109812 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--109813.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::Maybe just ```suggestion c.items()                       # convert to a iterator of (elem, cnt) pairs ``` ?::It's not an iterator. I'd just change ""list"" to ""view"". And ""convert to"" to ""create"", since the view doesn't really contain the data, so ""convert to"" seems wrong to me.::Yes, it is just an iterable 👍 ``` >>> {}.items().__iter__ <method-wrapper '__iter__' of dict_items object at 0x102cd1250> >>> {}.items().__next__ Traceback (most recent call last): File ""<stdin>"", line 1, in <module> AttributeError: 'dict_items' object has no attribute '__next__'. Did you mean: '__ne__'? ```::Maybe this is more in line with the rest of the examples ```suggestion list(c.items())                 # convert to a list of (elem, cnt) pairs ```::I disagree.  The doc for c.items() should say what c.items returns.::",Jacob Coffee,45884264,29,1,2,1,2,0,6758fedf361a2385b7e11a73398aca1d5ebeb4fe::
https://api.github.com/repos/python/cpython,109809,python_finalization_error::main,0,closed,,"Add PythonFinalizationError. This exception derived from RuntimeError is raised when an operation is blocked during the Python finalization. The following functions now raise PythonFinalizationError, instead of RuntimeError: * _thread.start_new_thread() * os.fork() * os.fork1() * os.forkpty() Morever, _winapi.Overlapped finalizer now logs an unraisable PythonFinalizationError, instead of an unraisable RuntimeError. <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-109047 --> * Issue: gh-109047 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--109809.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::",Victor Stinner,194129,1148,1,46,6,13,0,6d969f3f860dc68adf926362b986fbdddd4139e7::
https://api.github.com/repos/python/cpython,109807,docs/whatsnew-3.12-sync::main,0,merged,docs::skip issue::skip news::,A post main merge edit to the text was added in the 3.12 backport PR. https://github.com/python/cpython/pull/109773/commits/e38d7104b8f245e5db6d487932c44edf0d2c4762 This includes that in main.  It's a minor edit over #109767 to resolve the comment there. <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--109807.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::,Gregory P. Smith,68491,234,1,3,1,1,0,aa753f72452d4a6aa9ff05dc4207a9e3a7a51a3d::
https://api.github.com/repos/python/cpython,109790,fix-nt-os-path-isdir-signature::main,0,merged,,"To fix the `os.path.isdir` signature for Windows to be the same as genericpath version. ```py # in genericpath.py def isdir(s) -> bool: ... # in optimized nt module def isdir(path) -> bool: ... ``` <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-109782 --> * Issue: gh-109782 <!-- /gh-issue-number --> ::",Amin Alaee,19784933,248,3,15,13,3,1,13d10dfcb5800fdd676a8ddd47395578b765a2c0::2e995911d9d46af1b3fd31734a0311b645da96d5::9cc53cda6c593811fabd9e2f71f439b4068d782f::
https://api.github.com/repos/python/cpython,109784,backport-405b063-3.12::3.12,0,merged,,"This fixes issue GH-105829, https://github.com/python/cpython/issues/105829 (cherry picked from commit 405b06375a8a4cdb08ff53afade09a8b66ec23d5) <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> ::",,13905184,0,1,87,4,3,0,9cf695b63b6e6b91954b650658337d39bdf4bc45::
https://api.github.com/repos/python/cpython,109783,backport-405b063-3.11::3.11,0,merged,,"This fixes issue GH-105829, https://github.com/python/cpython/issues/105829 (cherry picked from commit 405b06375a8a4cdb08ff53afade09a8b66ec23d5) <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> ::",,13905184,0,1,87,4,3,0,8b162d5d37ce8a7f95793dac522152642fed9cb8::
https://api.github.com/repos/python/cpython,109780,gh-109370::main,0,merged,type-bug::skip news::needs backport to 3.12::,"Follow-up of gh-107219. * Only close the connection writer on Windows. * Also use existing constant _winapi.ERROR_OPERATION_ABORTED instead of WSA_OPERATION_ABORTED. <!-- gh-issue-number: gh-109370 --> * Issue: gh-109370 <!-- /gh-issue-number --> ::Why is it an issue on other platforms? See also PR gh-109810 which goes further in terminate_broken(), to try harder to close everything, and terminate the child processes.::Because of scenarios described in https://github.com/python/cpython/pull/109397#discussion_r1334943876. It is not possible to safely close a file descriptor in other thread without using some kind of locking, and it is difficult if possible without rewriting the way the GIL or all IO works even to use locking. It may be lesser issue on Windows (if handles are never reused, I do not know if it is so), but I am not sure that it is bug-free there. It may be simply that bugs are rarely manifested on Windows because most time the queue thread spends in `WaitForMultipleObjects()`.::> It is not possible to safely close a file descriptor in other thread without using some kind of locking It's maybe time to add ""some kind of locking"". There are two cases: * Thread B sets the file descriptor / handle to None, and then close FD / handle. No other thread was using it, no problem. Next, when thread A tries to use it, ""closed FD/handle"" exception is raised. * Thread B closes the FD/handle while thread A is using it. That's an important use case to be able to unblock multiprocessing when it goes into troubles with a sick worker progress, sick manager process, well, when things ""go wrong"". For me, the case that we should care about is terminate_broken() of concurrent.futures ProcessPoolExecutor and the associated BrokenProcessPool exception. When everything goes wrong, we should just cleanup resources: terminate processes, close queue, close file descriptors/handles, etc. I don't think that we can still expect worker processes to handle ""please stop"" commands from the main process. For example, PR #109810 is when the executor cannot even create new threads. In that case, multiprocessing and concurrent.futures cannot work properly, and it's time to exit as soon as possible.::> It's maybe time to add ""some kind of locking"". Actually, I do not think how is it possible, even with cooperation with GIL. It needs a support in the kernel to allow switching to other thread only when a system call waits. We can reduce the window for race condition, but it will always be possible with some small probability to close and replace file descriptor just before system call. > There are two cases: There are many other cases, depending on definition of ""use it"". If the file descriptor is closed or the attribute is set to None between the place where you can realistically check this and the place where it is used, you have an unsolvable problem. For now, I am worried about regression introduce by #107219 on non-Windows platforms. Since the original issue was Windows-only, I prefer to apply the solution (even if it may be non-perfect) on Windows where it fixes serious issue and not apply it other platforms where it seems unnecessary but causes visible regression.::",Serhiy Storchaka,3659035,401,1,3,3,2,1,3030774c40ca19bd946dead9780e1a2086a8579a::
https://api.github.com/repos/python/cpython,109767,docs/fork_threads_warning::main,0,merged,docs::skip news::,"Better document the os.fork warning to explain questions such as those raised in https://discuss.python.org/t/concerns-regarding-deprecation-of-fork-with-alive-threads/33555. <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--109767.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end --> <!-- gh-issue-number: gh-100228 --> * Issue: gh-100228 <!-- /gh-issue-number --> ::Please could we move this to the main section? xref #109766. A::```suggestion different start method. See the :func:`os.fork` documentation for further explanation. ```::```suggestion On POSIX systems, if your application has multiple threads and the :mod:`multiprocessing` context uses the ``""fork""`` start method: ```::```suggestion See the :func:`os.fork` documentation for further explanation. ```::Are we able to link to a more specific target for the SSL warning than the module itself? ```suggestion If you use TLS sockets in an application calling ``fork()``, see the warning in the :mod:`ssl` documentation. ```::```suggestion We chose to surface this as a warning, when detectable, to better inform developers of a design problem that the POSIX platform specifically notes as not supported. Even in code that *appears* to work, it has never been safe to mix threading with :func:`os.fork` on POSIX platforms. The CPython runtime itself has always made API calls that are not safe for use in the child process when threads existed in the parent (such as ``malloc`` and ``free``). Users of macOS or users of libc or malloc implementations other than those typically found in glibc to date are among those already more likely to experience deadlocks running such code. See `this discussion on fork being incompatible with threads <https://discuss.python.org/t/33555>`_ for technical details of why we're surfacing this long standing platform compatibility problem to developers. ```::good catch.  I wish I had a sidebar view in my `vim` config for ReST so I could see and outline and which section I was in. :)::```suggestion The :func:`os.fork` function called internally to spawn workers may raise a ```::Could be hyphenated, I prefer as one word. Style guides differ. ```suggestion for technical details of why we're surfacing this longstanding ```::I would copy the paragraph from the os.fork() docs here as well, to make it easier for people to find the reasoning behind this: ``` See `this discussion on fork being incompatible with threads <https://discuss.python.org/t/33555>`_ for technical details of why we're surfacing this longstanding platform compatibility problem to developers. ``` ::Thanks, I included that (edited) over in the 3.12 backport https://github.com/python/cpython/pull/109773. I'll make the same edit in `main` after that is merged.::",Gregory P. Smith,68491,234,9,58,4,4,0,c2c36c05b29ef2082e9b624877b176c1eb6ef7c8::d38b05649c29626c7ffd7e3812f943791b2da37b::d594072949468b6ddd572fe44af3762ce7647983::c8f7a73a50f5c9995beab3518933b14b805a0559::227c883c050efb1cb697b17b6b4e1d3670caf339::49fa6360b32b9fc4badfb2b20d3790de7d3616d5::126ed5ed8c5b4ce44e807b1d067333fc97ea8e25::f47b99c8dce17201167b480e86ccd4885e4cfa1c::5960e72c8a8264b9382e35791bc3b67635244e27::
https://api.github.com/repos/python/cpython,109759,3.11-name-donghee-na-docs::3.11,0,merged,skip issue::skip news::,"<!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--109759.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::",Hugo van Kemenade,1324225,628,3,130,130,38,0,ac6c7bcf94b7aff31d7e736c60cc9be1c4169163::782a967a31f0c55a99025c085b6cbb9c650e6888::5558a06e5b2dc93f9c989ed6405afd9cfa18a40d::
https://api.github.com/repos/python/cpython,109758,3.12-name-donghee-na-docs::3.12,0,merged,skip issue::skip news::,"<!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--109758.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::",Hugo van Kemenade,1324225,628,3,142,142,42,1,9551bff825a85362d6d306104e68f0765540fbd6::d1b9fa4b1b562a419994c35490339d0ce8f0e59a::cdb8520d70c973ceec8e4551439aade20e594822::
https://api.github.com/repos/python/cpython,109752,backport-b28ffaa-3.12::3.12,0,merged,,"(cherry picked from commit b28ffaa193efc66f46ab90d383279174a11a11d7) <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-109596 --> * Issue: gh-109596 <!-- /gh-issue-number --> ::",Pablo Galindo Salgado,11718525,847,1,1203,1219,7,0,123c724e46088b9093bb61ba122b0041e6bcded3::
https://api.github.com/repos/python/cpython,109745,random_docstrings::main,0,merged,docs::skip issue::skip news::needs backport to 3.11::,"Add the expected mean and variance to the docstrings.  It helps with understanding the parameters which is important because conventions vary.  Also, it would save someone like me from having to look these up periodically.::Should we note that this is the mean, for users that might be unfamilliar with the expectation operator? ```suggestion (mean): E[X] = (a + b) / 2 ```::",Raymond Hettinger,1623689,3560,7,34,5,1,1,b66783bb031a66c2ba6ed1ba9f828a015ede616d::d30c2153c62adc2459d7610d894691445b341c7b::0aecb973838ad5c037843508ccaf140a1de317c8::c17d2eb466680405018e4cd1d8420ca53bfdd4e5::75d96b1cecaa00cc73cf26a8bf07f8ad2e7a658d::6703fad3b66f1e6e997c021566ce90471333bdb4::a99a800c9186e1dffbd71ee14c0e782229c39da1::
https://api.github.com/repos/python/cpython,109744,name-donghee-na-code::main,0,merged,skip issue::skip news::,"<!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> Opened separately from the docs changes in https://github.com/python/cpython/pull/109743, because we can't backport non-docs things to 3.12 until after 3.12.0 is out on 2023-10-02. ::It's copied from libexpat. https://github.com/libexpat/libexpat I am not sure that updating legal name for expat is proper :(::https://github.com/libexpat/libexpat/pull/754 I sent the PR to the upstream too :) Let's wait ::I'm positive that (1) we'll have a version of https://github.com/libexpat/libexpat/pull/754 merged upstream shortly and that (2) there will be a release >=2.5.1 this year bringing these changes to CPython ""for free"" just by upgrading the bundled copy of libexpat.::Sounds good, I'll revert the changes to `Modules/expat/` here, and we can wait for the upstream changes to filter through.::",Hugo van Kemenade,1324225,628,2,4,4,4,1,2ee941c03dbd16e54d97d9c3d93b20265a547674::476cefbafc75cd4447b13059dea948e20e4fdec2::
https://api.github.com/repos/python/cpython,109743,name-donghee-na-docs::main,0,merged,skip issue::,"<!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--109743.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::",Hugo van Kemenade,1324225,628,3,149,149,49,1,75e955cdb5fcb6bddd28b146af0860cf5c6b3c55::65cde180e0a2a6182b18091ba1d5a554b7cc375e::3514340be4126b8e0c588f36e0d7b0abcbb2cad4::
https://api.github.com/repos/python/cpython,109735,test_stdin_broken_pipe311::3.11,0,merged,skip news::,"Replace harcoded sleep of 500 ms with synchronization using a pipe. Fix also Process._feed_stdin(): catch also BrokenPipeError on stdin.write(input), not only on stdin.drain(). (cherry picked from commit cbbdf2c1440c804adcfc32ea0470865b3b3b8eb2) <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-109709 --> * Issue: gh-109709 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,1,49,15,2,0,1bcc1a325d84fcf4c91bfb58a97d76b55f203a47::
https://api.github.com/repos/python/cpython,109727,testcapi_disable_core::main,0,merged,skip news::,"Make sure that the internal C API is not tested by mistake by _testcapi. Undefine Py_BUILD_CORE_BUILTIN and Py_BUILD_CORE_MODULE macros in Modules/_testcapi/parts.h: move code from _testcapimodule.c. heaptype_relative.c and vectorcall_limited.c are using the limited C API which is incompatible with the internal C API. Move test_long_numbits() from _testcapi to _testinternalcapi since it uses the internal C API ""pycore_long.h"". Fix Modules/_testcapi/pyatomic.c: don't include Python.h directly, just include _testcapi/parts.h. <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-109723 --> * Issue: gh-109723 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,2,114,101,8,0,225f0763a44ec50977429f15599bedfceee5976b::ee89db44e773000d876997433fd6ee3e7112565e::
https://api.github.com/repos/python/cpython,109716,backport-34ddcc3-3.12::3.12,0,merged,docs::skip news::,"(cherry picked from commit 34ddcc3fa118168901fa0d3a69b3b5444fc2f943) <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-109190 --> * Issue: gh-109190 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--109716.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::",Hugo van Kemenade,1324225,628,1,2,1,1,1,55c1056f6381fdb7b82696d768d8a0f9bdb27520::
https://api.github.com/repos/python/cpython,109710,test_stdin_broken_pipe::main,0,merged,tests::topic-asyncio::skip news::,"Replace harcoded sleep of 500 ms with synchronization using a pipe. <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-109709 --> * Issue: gh-109709 <!-- /gh-issue-number --> ::On Windows, passing pipes as stdin, stdout and stderr is well supported. Passing an additional pipe is not supported by msvcrt (CreateProcess). Passing a handle is possible, but it requires to convert FD to handle and then handle to FD.::Ok, if I understand correctly this change is here because write() could raise BrokenPipeError when registering a writer. Is this expected behavior? _UnixWritePipeTransport.write() tries hard not to raise if the os.write() call fails. Could it be that this was not noticed on Linux because the error is raised only by the kqueue selector?::Could the process be synchronized in a way that requires less boilerplate for Windows? Is just calling terminate() not enough?::Sorry, I didn't keep the traceback. I got a BrokenPipeError on **FreeBSD**, yeah, it was somewhere in the kqueue selector. You can revert my change, and stress-test the test as I described in the issue / PR, to easily trigger the bug. > Could it be that this was not noticed on Linux because the error is raised only by the kqueue selector? Maybe on Windows and Linux, write() cannot trigger these exceptions, but write() does on FreeBSD.::I like using a pipe as a sync primitive, but I'm unhappy by the quantity of code needed for that :-( In practice, what is needed is that the child process hangs until the parent decides to terminate it in a clean fashion.::Simple snippet to trigger the exception: ```python import os, selectors sel = selectors.DefaultSelector() rfd, wfd = os.pipe() os.close(rfd) sel.register(wfd, selectors.EVENT_WRITE) ``` Tested on modern releases of Linux, macOS, FreeBSD, and I only see it raise on FreeBSD. See discussion here for some details: https://github.com/tokio-rs/mio/issues/582 (older versions of macOS used to fail in the same case, and NetBSD/OpenBSD report different errors). I think this should be considered a bug. _UnixWritePipeTransport.write() should not be expected to raise, otherwise exception handling code would have to be sprinkled all over user code. In the linked issues (both Tokio and libevent) it's solved at an abstraction level similar to the selectors module in Python. If we agree it could be considered a bug, it's either a selectors bug, or an asyncio bug.::wait, registering a closed FD is bad: don't do that. It wasn't the issue that I got (I hope).::> I think this should be considered a bug. _UnixWritePipeTransport.write() should not be expected to raise, otherwise exception handling code would have to be sprinkled all over user code. If you think that there is a bug, please open a new issue.::It's not a closed FD! Only the other end of the pipe is closed. The write fd is still valid. On Linux/Mac you will always get an event, so you get the error when you try to write. On other BSDs you get the error preemptively, when registering.::Sorry i was confused between rfd and wfd.::I opened a new issue here https://github.com/python/cpython/issues/109757. I'd be glad to work on it.::",Victor Stinner,194129,1148,2,50,16,2,1,24b415d929a834286fd17adaa307ef4263c45415::441861cc320ccc64de112d982335af8207222d4e::
https://api.github.com/repos/python/cpython,109707,test_nested_startmethod::main,0,merged,tests::skip news::,"Don't check order, queue items can be written in any order. <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-109706 --> * Issue: gh-109706 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,1,3,1,1,0,06aa63b03fd3e906736bb80aa10cf737b79b8862::
https://api.github.com/repos/python/cpython,109704,test_concurrent_package311::3.11,0,merged,skip news::,"<!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-108388 --> * Issue: gh-108388 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,2,1577,1677,14,0,b3574d8b7b69e7cf33f9a2c6985f9608240b18be::0b7d75022b2c9343f1460567b6fb0cbdbd861e17::
https://api.github.com/repos/python/cpython,109703,deadlock_timeout::main,0,merged,tests::skip news::,"Replace SHORT_TIMEOUT with LONG_TIMEOUT in test_deadlock of test_concurrent_futures. <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-109702 --> * Issue: gh-109702 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,1,1,1,1,0,064aeae1ae15607484f28364a29edeed9fffa402::
https://api.github.com/repos/python/cpython,109701,regrtest_fail_rerun::main,0,merged,skip news::,"<!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-109566 --> * Issue: gh-109566 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,1,1,1,1,0,5d1c46f286018c6747fa49004d034fc3586e7780::
https://api.github.com/repos/python/cpython,109699,test_tarfile_modes_311::3.11,0,merged,tests::skip news::,"On FreeBSD, regular users cannot set the sticky bit. Skip the test if chmod() fails with EFTYPE error. (cherry picked from commit 26e06ad617bb416201c769fea91cd33d544c6a1c) <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-108948 --> * Issue: gh-108948 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,1,16,3,1,0,9c52c653c3c2091f8638c974675a41a5b7170599::
https://api.github.com/repos/python/cpython,109698,test_tarfile_modes_312::3.12,0,merged,skip news::,"On FreeBSD, regular users cannot set the sticky bit. Skip the test if chmod() fails with EFTYPE error. (cherry picked from commit 26e06ad617bb416201c769fea91cd33d544c6a1c) <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-108948 --> * Issue: gh-108948 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,1,16,3,1,0,71a615dcdb3bc2fa2d64a015dfe0e47ef6225672::
https://api.github.com/repos/python/cpython,109697,test_tarfile_modes::main,0,merged,tests::skip news::,"On FreeBSD, regular users cannot set the sticky bit. Skip the test if chmod() fails with EFTYPE error. <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-108948 --> * Issue: gh-108948 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,1,21,8,1,1,7c568a42a7871d4b7c9120d8101a5829100dd280::
https://api.github.com/repos/python/cpython,109696,unique::main,0,merged,docs::skip news::,"The ""Which Docstrings Are Examined"" part of Doctest documentation is ambiguos, This change explained it cleary with an example. <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--109696.org.readthedocs.build/en/109696/library/doctest.html#which-docstrings-are-examined <!-- readthedocs-preview cpython-previews end --> <!-- gh-issue-number: gh-109510 --> * Issue: gh-109510 <!-- /gh-issue-number --> ::```suggestion An example is to place this block of code at the top of :file:`example.py`. ```::```suggestion tests. If ``M.__test__`` exists and is True, it must be a dict, and each ``` Would this fit better? Going off of other documentation for reference.::```suggestion important to note that the value can also be mapped to a function, class object, or module. If the value is a function, class, or module, doctest searches them recursively for docstrings, which are then scanned for tests. ```::```suggestion class object or module. If the value is a class, Function or module, :mod:`doctest` ``` Do we link?::```suggestion In addition, there are cases when you want tests to be part of a module but not part of the help text, which requires that the tests should not be placed in the docstring. Doctest looks for a module-level variable called ``__test__`` and uses it to locate other tests. If ``M.__test__`` exists and is ``True``, it must be a dict, and each ```::`pycon` means ""Python console"" and will apply appropriate syntax highlighting: ```suggestion .. code-block:: pycon ```::```suggestion The value of ``example.__test__[""numbers""]`` will be treated as a docstring and all the tests inside it will be run. It is important to note that the value can be mapped to a function, class object, or module. If the value is a function, class, or module, :mod:`doctest` searches them recursively for docstrings, which are then scanned for tests. ```::thanks::```suggestion of the help text, which requires that the tests not be included in the docstring. ``` Fix grammar/semantics::```suggestion For example, place this block of code at the top of :file:`example.py`: ``` * Fix phrasing * Use appropriate punctuation to introduce example::```suggestion ``M.__test__`` appears with name :samp:`{name of M}.__test__.K`. ``` Avoid mistyped `::` sytanx and use the appropriate role instead of a separate, Python-highlighted block.::`pycon` lexes this incorrectly, since the example inputs and outputs are actually in a multi-line string, but are displayed as literal Python console lines, while the surrounding Python code is displayed as Python output, greatly confusing me at first. Furthermore, when clicking the button to remove the prompts, the string content is kept while the surrounding code is removed. Changing this to `python` _should_ fix this (haven't tested this particular edge case, though). ```suggestion .. code-block:: python ```::```suggestion class object, or module; if so, :mod:`!doctest` ``` * Avoid repeating these twice and make it easier for the reader to connect the two pieces of information without having to laboriously check if the two sets are identical. * This is the current module that the reader is already on, so silence the link (per our general agreed convention).::Good question. We use the appropriate role to get the appropriate formatting, but add `!` to not resolve the link, since it is to the current module docs that the reader is already on, which isn't particularly helpful.::One last thing I'm a little confused on reading this—how is `name of M` different from just `M`, the placeholder for the name of the module? Shouldn't this just be _M_, just like everywhere else? Same as `K` is the placeholder for the key name? Is there something I'm missing here, or should this in fact read: ```suggestion ``M.__test__`` appears with name ``M.__test__.K``. ``` (Unless we want to do `` :samp:`{M}.__test__.{K}` ``, which is more semantically correct and perhaps a bit tad clearer for readers, but probably not enough to be worth the extra syntax everywhere?)::Let's not say ""is ``True``"" and ""must be a dict"", it can't be both: ```pycon >>> __test__ = { ...     'numbers': """""" ... >>> factorial(6) ... 720 ... ... >>> [factorial(n) for n in range(6)] ... [1, 1, 2, 6, 24, 120] ... """""" ... } >>> __test__ is True False ``` The original was ""is true"" (in quotes) to imply it has a truthy value, rather than literally being `True`. Can we reword it?::Actually, we could just use the word truthy, we've used it elsewhere. ```suggestion tests. If ``M.__test__`` exists and is truthy, it must be a dict, and each ```::I tend to say ""evaluates true"" but truthy is concise, and used other places (I believe js uses the term liberally)::@Unique-Usman Please use either `is truthy` or `evaluates true` instead of `""is true""`.::",,86585626,12,15,24,3,1,0,df550a1d16bafc1f43c23f93973a0a4433bc3c14::ae033f3503ac0e8333348f55fc1b486a5ff68165::24483b8af1d653ad83670cb24f480bab011ce83c::3dd6b79716566f3ab07dc79fc672098ddf5bd042::50d1bb4d7cc402705f78f08288c284f34c33c116::b0fa4fd032b89124f609cc5418af78e01a385bc9::92da9230656f28415e3b7da77f86b0c03d2dbfe8::f59961c9bf00f7f0cfc0d15d692f56659a23e37b::b45acd9bd88ab544be61c8ce1c88d87f3f16b617::d67276dcd6a1860e90654eadf427c00714b9b108::23d3b50497c4b78bd5de8f61697bd6fb4424b0ba::0cbac0fb925279137d5c7cd86952974e66422793::6857842d35a2f06ad930c9b824c1d8d6548bca7d::728717ede1aaca1a6ba6f9bc71d85e5641a69f4d::cbb1434739edd0a9f4c8fa41b59a20ab76c1703b::
https://api.github.com/repos/python/cpython,109691,testcapi_vectorcall_limited::main,0,merged,skip news::,"<!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-104469 --> * Issue: gh-104469 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,2,47,5,2,0,8004d7933a30688fc01c11383efd884a502e86c2::9c2841b7509a94f6a3c5d4471b8e6623ad4701a4::
https://api.github.com/repos/python/cpython,109690,limited_core::main,0,merged,skip news::,"<!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-104469 --> * Issue: gh-104469 <!-- /gh-issue-number --> ::""define"" (instead of ""defines"")::oops, fixed!::",Victor Stinner,194129,1148,1,11,2,2,0,3dcbb4615eed5969aa9e72678d62d4e826b21a42::
https://api.github.com/repos/python/cpython,109686,test_fractions::main,0,merged,tests::skip news::,"<!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-108303 --> * Issue: gh-108303 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,1,1,1,1,0,39f8c6225f057e1a2c8b60343292fe4d102b2b89::
https://api.github.com/repos/python/cpython,109685,test_float_format_testfile311::3.11,0,merged,tests::skip news::,"(cherry picked from commit beb5ec5817b645562ebbdd59f25683a93061c32c) <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-109546 --> * Issue: gh-109546 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,1,7,2,1,0,6f0c59948101aff81917f3b84c77c071b0392f30::
https://api.github.com/repos/python/cpython,109680,test_future311::3.11,0,merged,skip news::,"(cherry picked from commit 82505dc351b2f7e37aa395218709b432d83292cd) <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-108303 --> * Issue: gh-108303 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,1,37,19,18,0,ed5cb83f7527e1b8ef584cf4dee3da0224ee14e4::
https://api.github.com/repos/python/cpython,109679,test_future312::3.12,0,merged,skip news::,"(cherry picked from commit 82505dc351b2f7e37aa395218709b432d83292cd) <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-108303 --> * Issue: gh-108303 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,1,37,19,18,0,ad072be6c8029cfb900f77748b9586f32f88da97::
https://api.github.com/repos/python/cpython,109678,tokenizedata311::3.11,0,merged,skip news::,"<!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-108303 --> * Issue: gh-108303 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,2,40,24,18,0,905a5eeffcc438c316e75e5adcfb284444965c45::df28ede899d14c073262b004d3d7f10fd2932517::
https://api.github.com/repos/python/cpython,109677,tokenizedata312::3.12,0,merged,skip news::,"<!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-108303 --> * Issue: gh-108303 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,2,41,25,19,0,b8e290821fae28caa382e322557462d6a56f6d10::2bf3cc8e145b03376007b7f42bea108135b89a80::
https://api.github.com/repos/python/cpython,109675,test_dataclasses311::3.11,0,merged,skip news::,"Move test_dataclasses.py and its ""dataclass_*.py"" modules into the new Lib/test/test_dataclasses/ subdirectory. (cherry picked from commit 14d6e197cc56e5256d501839a4e66e3864ab15f0) <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-108303 --> * Issue: gh-108303 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,1,7,6,8,0,77cb5e86148bdac685128922660f2dbf0c9aca03::
https://api.github.com/repos/python/cpython,109673,issue-108303-311::3.11,0,merged,skip news::,"(cherry picked from commit 3f61cf646d0506baa0c0c2118f05110446519c62) <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-108303 --> * Issue: gh-108303 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,1,13,9,13,0,7ca3fc6914eae4a77146cb48d2acb0515f84cd7c::
https://api.github.com/repos/python/cpython,109668,fromstructstat311::3.11,0,merged,,"Fix os.stat() and os.DirEntry.stat(): check for exceptions. Previously, on Python built in debug mode, these functions could trigger a fatal Python error (and abort the process) when a function succeeded with an exception set. _pystat_fromstructstat() now exits immediately if an exception is raised, rather only checking for exceptions at the end. It fix following fatal error in fill_time(): Fatal Python error: _Py_CheckSlotResult: Slot * of type int succeeded with an exception set (cherry picked from commit d4cea794a7b9b745817d2bd982d35412aef04710) <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-109613 --> * Issue: gh-109613 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,1,71,46,2,0,d1bb70c898e8cdb44454f657137657a19ef99959::
https://api.github.com/repos/python/cpython,109667,gh-109595::main,0,merged,type-feature::docs::3.13::,"<!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-109595 --> * Issue: gh-109595 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--109667.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::Can you integrate this text in the doc above, and here just mention that the function takes -X cpu_count in account? ```suggestion if :samp:`-X cpu_count={n}` is given, :func:`cpu_count` will return the overrided value *n*. ```::> will override the number of cpu count from system Honestly, that's vague. Just describe what it does: ```suggestion * ``-X cpu_count=<n>`` overrides :func:`os.cpu_count`. ```::```suggestion This option will be useful for users who need to limit CPU resources of a container system. ``` Please document that *n* must be at least 1.::```suggestion The ``-X cpu_count`` option. ```::Maybe we should start adding version to this complex structure: ```suggestion // Python 3.13 int cpu_count; ```::Why not just testing that you get ``b""4321\n""``? Is it useful to parse the string? I hate assert_python_ok() API which doesn't let using text=True parameter.::```suggestion Add :samp:`-Xcpu_count={n}` command line option for limiting system CPU resources from ``` Hum, maybe just say that it overrides os.cpu_count()?::```suggestion const PyConfig *config = _Py_GetConfig(); ```::it's already set by config_init_defaults(), no ned to repeat the default here.::```suggestion return _PyStatus_ERR(""-X cpu_count=n option: n is missing or an invalid number""); ```::```suggestion * :samp:`-X cpu_count={n}` will override the number of CPU count from system. ```::If you prefer to write ""number"" instead of ""n"", please update the whole PR for that. ```suggestion -X cpu_count=n: limit CPU count of os.cpu_count().\n\ ``` Why is it a ""limit""? Your unit test shows that it can be BIGGER than the real number of logical CPUs of the system! Maybe just say ""override""?::```suggestion This helps for users who need to limit CPU resources of a container system."" ```::Search for ""int_max_str_digits"", you should also modify: * config_check_consistency() * _PyConfig_AsDict() * _PyConfig_FromDict() You should update test_embed, and maybe set cpu_count in test_init_from_config() of Programs/_testembed.c. See also my notes: https://pythondev.readthedocs.io/pyconfig.html::```suggestion return _PyStatus_OK(); error: ```::Can you please set a more interesting value like 1234?::```suggestion * :samp:`-X cpu_count={n}` overrides the number of CPU count from system: :func:`os.cpu_count` returns *n*. The value *n* must be greater than or equal to 1. ```::```suggestion This option is useful for users who need to limit CPU resources of a container system. ```::```suggestion Add :samp:`-Xcpu_count={n}` command line option to override CPU count of :func:`os.cpu_count`. This option is useful for users who need to limit CPU resources of a container system. Patch by Donghee Na. ```::Oh, that's interesting that the value cannot be zero :-)::You can move the variable declaration inside the ""if (sep)"" block. Does it *have* to be initialized? If you are afraid of undefined behavior, maybe config_wstr_to_int() should set ``*result`` to 0 on error.::```suggestion return _PyStatus_ERR(""-X cpu_count=n option: n is missing or an invalid number, ""); ""n must be greater than 0""); ```::Now I added `PYTHONCPUCOUNT` envvar, so the current structure will be needed.::```suggestion *n* must be greater than or equal to 1. ``` I prefer >= 1, it's more human friendly :-)::```suggestion environment variable :envvar:`PYTHONCPUCOUNT` and the new command-line option ```::That's a lot of CPUs, it's exciting! Until *recently*, Linux was limited to 4096 CPUs! https://unix.stackexchange.com/questions/4507/how-many-cores-can-linux-kernel-handle::```suggestion } int ncpu = 0; ```::If you want, you *can* move the variable declaration inside each ""if (env)"" block and duplicate the variable, to better show its scope. But well, that's just a personal preference. Feel free to ignore my coding style remark ;-)::```suggestion } const wchar_t *xoption = config_get_xoption(config, L""cpu_count""); ```::Would it not be better to document the feature instead of the version? Using simple Git tricks, it is very easy to find out which Python version a field was added in; I don't see the value in duplicating Git log in the source code :)::All PyConfig must be documented at: https://docs.python.org/dev/c-api/init_config.html See my notes on adding a new member to PyConfig: https://pythondev.readthedocs.io/pyconfig.html::> All PyConfig must be documented at: https://docs.python.org/dev/c-api/init_config.html Yes, so IMO: - remove the superfluous `// Python 3.13` comment from initconfig.h - add an entry accompanied with a `.. versionadded` to [Doc/c-api/init_config.rst](https://github.com/python/cpython/blob/main/Doc/c-api/init_config.rst)::Sure, in the doc, versionadded must be used, obviously. > remove the superfluous // Python 3.13 comment from initconfig.h I think that it would nice to *also* document the version in PyConfig structure, in addition to the init_config.rst doc. But I will not insist :-)::Will a `// Python 3.13` comment make sense on its own? IMO: no. How would a random contributor interpret it? :) How will you or I interpret it in five years time? Isn't it better to leave the version control to the version control system? :)::... so you can count me -1 on sprinkling the source code with `// Python x.y` comments :)::Ok, let's remove the ""// Python 3.13"" comment.::This syntax emits a warning in Doc. Use ``*cpu_count*`` or ``:c:member:`~PyConfig.cpu_count` ``.::```suggestion the return value of :func:`os.cpu_count` and :func:`os.process_cpu_count` into *cpu_count*. ```::```suggestion Default: ``-1``. ```::Please document ``default`` value.::```suggestion If *n* is ``default``, it follows default :func:`os.cpu_count` even if :envvar:`PYTHONCPUCOUNT` ```::```suggestion :func:`os.cpu_count` and and :func:`os.process_cpu_count` result. ```::```suggestion See also the :opt:`-X cpu_count <-X>` command-line option. ```::Document it *after* the item below which documents the addition of process_cpu_count().::```suggestion CPU resources of a container system. (Contributed by Donghee Na in :gh:`109595`) ```::Honestly, you can merged this test with test_cpu_count(): test the two functions at once: ``` code = ""import os; print(os.cpu_count(), os.process_cpu_count())"" ```::You should set the env var to a value.::I would prefer to expose PyConfig.cpu_count value using a private function, rather than having two functions parsing env var / cmdline option. Otherwise, the two implementations may become inconsistent later. Also, PyConfig can be modified with the PyConfig API, not only using env var / cmdline. I'm even working on configuration file-like API: https://github.com/python/cpython/pull/110145::```suggestion the return value of :func:`os.cpu_count` and :func:`os.process_cpu_count` functions into *cpu_count*. ```::I suggest: ```suggestion If *n* is ``default``, :func:`os.cpu_count` and  :func:`os.process_cpu_count` are not overridden. ```::In init_config, you used ""result"". I would prefer consistency, either ""result"" in both docs, or ""return value"" in both docs. ```suggestion :func:`os.cpu_count` and and :func:`os.process_cpu_count` return value. ```::```suggestion CPU resources of a container system without having to modify the container (application code). ```::nitpick: you can use res2int = self.res2int, to keep the tests unchanged.::and process_cpu_count(). You may document ""default"" as well.::What about raising an error, rather than silently ignoring invalid value? For consistency, you should accept default.::This function will return ""process"" for the process mode with the separate PR.::Which will be, but will be done with a separate PR. ```python if _exists('sched_getaffinity') and _get_cpu_count_config() != 'overridden': def process_cpu_count(): """""" Get the number of CPUs of the current process. Return the number of logical CPUs usable by the calling thread of the current process. Return None if indeterminable. """""" return len(sched_getaffinity(0)) if _get_cpu_count_config() == ""process"": cpu_count = process_cpu_count ```::This means it is only possible to override cpu_count on posix?::This doesn't belong in posixmodule, it is not platform specific.  `Python/sysmodule.c` perhaps? and rather than an internal API returning two magic strings, how about an internal API that just returns the overridden value. Code calling it should only use it if it returns an int > 0, anything <= 0 means invalid/default/not-overridden. That way os_cpu_count_impl below could just call the c impl function from sysmodule directly rather than having a copy of similar code.::> and rather than an internal API returning two magic strings, how about an internal API that just returns the overridden value. Code calling it should only use it if it returns an int > 0, anything <= 0 means invalid/default/not-overridden. Well, Victor and I worry about someone get the CPU count from the `_get_cpu_count_config()`... I want to prevent the API from being used for root of data :(::FYI, -2 will be the process mode.::Reasonable!::I am worrying about this kinds of code, we never expect but somebody can do. ```python cpu_count = sys._get_cpu_count_config() if sys._get_cpu_count_config() > 0 else os.process_cpu_count() ```::They could also `import posix` and do that from this location. I'm not worried about anyone using an `_` prefixed private undocumented api to shoot themselves in the foot. Bikeshedding could come up with other more or less tempting names, but I don't think it matters too much. If it starts with `_` and we keep it undocumented, it isn't for public consumption.  `_get_overridden_cpu_count()` `_get_eaten_by_a_grue()` `_get_do_not_press_this_button_press_count()` ... we've got plenty of other _ functions in this category in modules already.::@gpshead I wrote the comment about the need of magic string in https://github.com/python/cpython/pull/109667#discussion_r1343351179 PTAL::>  I'm not worried about anyone using an _ prefixed private undocumented api to shoot themselves in the foot. > we've got plenty of other _ functions in this category in modules already. Okay!::Agreement with https://github.com/python/cpython/pull/109667#discussion_r1343372035::",Donghee Na,5110323,401,71,192,11,15,0,41be17016ef71d39725a088f4561232c323e0e7b::f7a7428efd387c9fae0cdd08c6538250afb276e4::7009bbe8d16f7c3be79d05e884a7a5e4699b1132::d1f91d8a336c679660a8d20f601d0c7338149093::8c92ed6a40908ca69691b7e2fbbefa89d1796e77::c27bdfca61f5d8f495adf9fba06bc54792c8f82c::b13e5ee3b8547edefe28c0766a5323915d7ea46e::45fce16d31118a8f5706b6d416911b2b0e611e50::49a48e4645f7a89ca8abde26fef71c188b183e09::829a8e87fbc2d27735315a1b7f7faddb8057ba32::cfb33a44773f02a4b9474982aef7c2a9ae32274b::95a2173e9a3d8acfc1d1156267ad0dc8c65c60fb::0394d1d75b9f1437eae1c82dcc31b06e40c850f0::f4a3f01393a5d8f4a4b7aa9043a53adf554fb7da::60a28fe70d336a9192dcf95982941d80b0b7c765::7e5595c202d4a9fb2e16471e32c2a9fa5d52d65e::86780126a72ab6b8fa5cea2f7a1d30172fecf81c::cbc5484e3b402d6bd020120bd6c6cdd6db38d1a1::4622b60f1d1978b48d04dae13cae46e53e6346b1::50f0178849f1fecb4f313514c0bee979d5898e74::5c3ac68b288e249cabe5a182f18309ff3ce3037a::a276bfd96855538f03746b12bcffc3526508183d::9c582be6a1ccf74a1e5d1fc82415c3afcc407276::35b952f993c783315ba7c7b2d2e728d4517846ba::f04ea58a135cb7a49d9b87d93d1eedb9985805c9::7ecf7056fdef3d62950ac6ff81bd8765f8ccdd00::18dcd44db21ebb46ce4e061c7eb9a5e7cd622b7c::b344f4f8dd0082986120ab85520e7b9bc751ec91::8069d216b3ab32f017c7e391d02c6ec4b0eb2fb9::c70bc82241c00bdb147f29e14db5f7df655ac934::c8abc2983d62c844d27d5b98844ed5f9da78e8a2::2ac6901e4351a837180d928b96e460bd53aafe3c::f0a3ebfe2c4e9f89c393260443b489533eb01067::89d8bb203e8a0e8172db6cc3d82afdc7f1341c1a::66c617f2591646dcf5b25b1121307cfc801d7ad5::4a72ed4396c88963508c707bf21a555f919f281c::0426e3e84c793cd076d36c94a1aec3932b37f147::ac5329be407a81487452a48daca5884eb268c4e9::e50e678957ab4ae62bfb74ea78ce680805eb9462::24fe0e4ff8f146bc5b099842e55fb19762461eae::32843edd696f715b53616f3dfc6ae444bac6d63c::a954f1c6c3e7b1d48c4afb92d15ee7ba186ec463::3ab2bc4f457cc562cda87a410139339a9ecafdb6::7231697892fa48997e91fc9702a456cabad19829::b18da0dd42e0aaecee5506d345c2e3e5544432d9::3579fc4e501054ba24bcf00fd9b9677436eaa45a::134ed9eea8fc89d888b9ae27a04ccad8ff5f8864::2bec7f41cec494209f9a09f2becf7f532f15e8e6::9f7cb5ed12b7f0f7caea24bbc36ed6ed28a31867::1217ab518adc50989a299803f4925d743f831c2a::64da2f9557e9e3f6fff936ace4a6697b60ac3582::64c732960da3527a3d51effc9116d5bf7df3cd26::cc54afbdfe578fe218c25eb9ea4a78dbaaddae3a::ba421c77f14d97a92efebac48602e4e987aa6000::5f20bf6868c6088d835888eb26a7cca69cbd6864::c11789b01a60aee3b523199d41994d55a132207b::936c182f1fb6cc99079a6f00b3d33c901d51155c::2f0dc1cefad8138df37620daece40397b547df70::a7b2c883678489fd9cfcae03ca318dc8ab7aa0db::551c76d2db08c127da07d4e575af2f70df6c851e::75021be4560c950ec30dcfe7e9799eb2b0ac3c04::57dd53bb131491fda8171d90423e04d009cde2aa::3f9da50d130de208107ae7a62dab4f8b31dc88b8::57e82c57d3d896040a01d28a97223a80ac6aeb68::c37c8d0ce8c5b1ebaf5da353fdc7d940652c7339::c7726e5f57ba2cc596ffd6f064f2ac50fec62ab1::de8bf53f5e2820ea855409265b22c9d61048b4e8::633914be017ca1fad816662572e20063f99855b6::37fbdfe123db097c6d47fe8f2c1719c65e048893::a0cfb2171e8611e00119811b16831a930305e284::8daa3b7886725ba0abc2fb31debe3b705406e302::
https://api.github.com/repos/python/cpython,109652,cpu_count_usable::main,0,closed,,"Implement cpu_count(affinity=True) with sched_getaffinity() on Unix and GetProcessAffinityMask() on Windows. Changes: * Fix test_posix.test_sched_getaffinity(): restore the old CPU mask when the test completes! * Doc: Specify that os.cpu_count() counts *logicial* CPUs and mention that Linux cgroups are ignored. * _Py_popcount32() uses UINT32_C() for M1, M2 and M4 constants. * Add _Py_popcount64(). Add tests on _Py_popcount64(). <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-109649 --> * Issue: gh-109649 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--109652.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::```suggestion can use. If the :func:`sched_getaffinity` function is available, return ```::You have to update the documentation that it will return the number of logical CPUs for the **process** if the usable is True. Because the current os.cpu_count returns the available CPU counts from the system not the process. It's different layer.::The doc says: > If *affinity* is true, return the number of logical CPUs the current process can use. It's not clear enough? Do you want to propose a different phrasing?::In English, sentences are separated by 2 spaces. My text editor implements English grammar :-)::That is reasonable. I'd add ""this may be less than the number of logical cpus returned by affinity=False due to OS or container limitations imposed upon the process"" to make it more clear _why_ people should want to use the `affinity=True` argument. PS thanks for making it keyword only! I do wish this API never used the term ""cpu""... everything these days is really a ""logical_core"" and what that even means depends a lot on underlying infrastructure and platform that Python may not be able to introspect.  Way too late for that though. :)::My PR adds ""logical CPU"" to the doc. In previous bug reports, I saw some confusion between physical CPU core, CPU packages, CPU threads, and logical CPUs.::I feel like people wanting such an API may also want cgroups to also be considered when the real question being answered is really _""How parallel am I usefully allowed to be?""_. Does that need to be separated out into its own `cgroups_cpuset=True` flag so that people could query one or the other or both?  The use cases I have in mind are all around the above question where I'd always want the combination aka `min(logical_cpus, affinity_cores, cgroups_cpuset_cores)`.::Why not just always call `__builtin_popcountl(x)` without the #if conditional?  No platform I've ever seen that we support has an `int` who's size is > 32-bits.::This effectively means the tests can all pass when our impementation is broken.  Our tests should assume that the return value will not be `None` on some known platforms.  At a minimum even if we don't do that, raise SkipTest when `None` is returned to indicate that no functionality testing could actually performed.::assert that the invariant of the returned affinity value <= the non-affinity return value?::My PR just fix the documentation to avoid any misunderstading. > I feel like people wanting such an API may also want cgroups to also be considered It is discussed in PR #80235. So far, nobody proposes any PR to implement this. Maybe this PR is a baby step forward :-)::In practice, it should never return None. Maybe it's time to enforce that and make the test fails in this case. If we discover real cases where None is returned, we can investigate and only skip on these platforms, as you say.::Even if we decide to support `cgroup` in the future, I would like to propose not to use the flag name that can represent the implementation detail. If some platform suggests new things do we have to add a new flag for them?::Good idea, done.::Hum, for this PR, I prefer to keep self.skipTest(). Once it will be merged, I will propose a separated PR for None.::I reverted my changes for Windows for now. I may propose a follow-up PR for Windows.::",Victor Stinner,194129,1148,1,191,50,11,1,276214403af8c88f66a463109709538ca1668f61::
https://api.github.com/repos/python/cpython,109648,fix-issue-106967::3.12,0,merged,docs::skip news::,"<!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> Backport of e8884529de9874783624615ac1ed34541e8a1373 from PR https://github.com/python/cpython/pull/107000. > python/release-tools template for ""What's New"" page automatically adds a ""Release"" field and a ""Date"" field with the date set to ""today"", which becomes the day the docs are built, which is forever increasing. This is the topic of https://github.com/python/release-tools/issues/34 which is yet to be fixed. In the meantime, this commit fixes it manually. <!-- gh-issue-number: gh-106967 --> * Issue: gh-106967 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--109648.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::",Hugo van Kemenade,1324225,628,1,1,2,1,1,126e306c4d1070e231b13f9edfcd910782174c04::
https://api.github.com/repos/python/cpython,109629,gh109593-ensure-running-reentrant::main,0,merged,,"<!-- gh-issue-number: gh-109593 --> * Issue: gh-109593 <!-- /gh-issue-number --> ::Please add a comment with a reference to the gh issue to explain the rationale for using a RLock and for exiting here. Does it mean that on a reentrant code, ensure_running() doesn't do what it says, it does not ensure that the resource tracker is running? Is it because we know that something else in the call stack will start it soon? So it's not important that it runs when the reentrant call exits, but ""soon""?::Yeah, I will add a comment explaining it. Yes, on a reentrant call, it will not do what it says. I have no idea how to avoid that. Reentrancy is much harder than multi-threading: you cannot wait for the ""other thread"", since it's waiting for you :-) The real solution would be to avoid reentrant calls from finalizers, but that will be harder to solve and not backportable. ::@vstinner This might raise a warning from time to time during the test suite, will it fail the buildbots? ::If you prefer to raise an exception (I'm fine with it), do we still need a reentrant lock? Would it be possible to use a regular lock, try to acquire it, raise if it's a reentrant lock, or use the lock and release it afterwards?::Would it be possible to create the exception in the function and use **raise** here to make it more explicit that this line raises an exception? ``return func()`` which raises an exception is kinda surprising.::I don't get this code path. So it's possible that self._fd is None, since something is calling ensure_running(), no? But the code below doesn't check if self._fd is None or not.::Hum. If you run tests with -Werror, it will raises an UserWarning exception, and can make the tests fail, no?::Yes, it is.::How do you ""raise if it's a reentrant lock"" with a regular lock? If it fails locking, you don't know if it's because of a reentrant call, or simply another thread.::This is true, but `self._fd` could be non-None but point to a dead process. See `_check_alive()`.::I would prefer: ```suggestion raise self._reentrant_call_error() ``` or: ```suggestion self._reentrant_call_error() ``` Since the ``return`` here is a lie: the function never returns.::",Antoine Pitrou,1721820,455,3,95,2,7,0,f16a4479de6272fce665c4b63adaea1e794cc9a4::8471da5aa9dc35ae82a66b3eb28767598ae73d02::0583400f03ba4c079e146ed4146a4dc721fc8948::
https://api.github.com/repos/python/cpython,109624,backport-14cdefa-3.11::3.11,0,merged,skip news::,"(cherry picked from commit 14cdefa667f211401c9dfab33c4695e80b4e5e95) <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-109408 --> * Issue: gh-109408 <!-- /gh-issue-number --> ::",Hugo van Kemenade,1324225,628,1,20,31,2,0,b40067d7123611c103ec1416e1f04c9c70a4a914::
https://api.github.com/repos/python/cpython,109620,mp_ensure_running::main,0,closed,needs backport to 3.11::needs backport to 3.12::,"multiprocessing: Reduce the risk of reentrant calls to ResourceTracker.ensure_running() by running explicitly all finalizers before acquiring the ResourceTracker lock. <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-109593 --> * Issue: gh-109593 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,1,12,0,2,0,d11bc95c68f7234a40eefeb37531700cc46b1463::
https://api.github.com/repos/python/cpython,109618,fromstructstat::main,0,merged,,"Fix os.stat() and os.DirEntry.stat(): check for exceptions. Previously, on Python built in debug mode, these functions could trigger a fatal Python error (and abort the process) when a function succeeded with an exception set. _pystat_fromstructstat() now exits immediately if an exception is raised, rather only checking for exceptions at the end. It fix following fatal error in fill_time(): Fatal Python error: _Py_CheckSlotResult: Slot * of type int succeeded with an exception set <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-109613 --> * Issue: gh-109613 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,1,76,49,2,1,b974fd70c9b0fbdd27c3e89dd804b8d6c6d9a9be::
https://api.github.com/repos/python/cpython,109616,skip_freeze_pgo311::3.11,0,merged,,"Skip test_freeze_simple_script() of test_tools.test_freeze if Python is built with ""./configure --enable-optimizations"", which means with Profile Guided Optimization (PGO): it just makes the test too slow. The freeze tool is tested by many other CIs with other (faster) compiler flags. test.pythoninfo now gets also get_build_info() of test.libregrtests.utils. (cherry picked from commit 81cd1bd713624c3d26b647f3d28f2fd905887a0d) <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-103053 --> * Issue: gh-103053 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,1,35,10,5,0,ac70f6dc5237fbe92de339b300592a5554c9d3e9::
https://api.github.com/repos/python/cpython,109614,skip_freeze_pgo312::3.12,0,merged,,"Skip test_freeze_simple_script() of test_tools.test_freeze if Python is built with ""./configure --enable-optimizations"", which means with Profile Guided Optimization (PGO): it just makes the test too slow. The freeze tool is tested by many other CIs with other (faster) compiler flags. test.pythoninfo now gets also get_build_info() of test.libregrtests.utils. (cherry picked from commit 81cd1bd713624c3d26b647f3d28f2fd905887a0d) <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-103053 --> * Issue: gh-103053 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,1,35,10,5,0,8b589b1afd5ee45c1968058bf79e0b2726ccb180::
https://api.github.com/repos/python/cpython,109610,test_subprocess_consistent_callbacks311::3.11,0,merged,docs::skip news::,"SubprocessProtocol process_exited() method can be called before pipe_data_received() and pipe_connection_lost() methods. Document it and adapt the example in the doc. Co-authored-by: Davide Rizzo <sorcio@gmail.com> (cherry picked from commit ced6924630037f1e5b3d1dbef2b600152fb07fbb) <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-108973 --> * Issue: gh-108973 <!-- /gh-issue-number --> <!-- readthedocs-preview cpython-previews start --> ---- :books: Documentation preview :books:: https://cpython-previews--109610.org.readthedocs.build/ <!-- readthedocs-preview cpython-previews end -->::",Victor Stinner,194129,1148,1,23,6,2,0,5a7d444145707cf420f790032c0992431806258a::
https://api.github.com/repos/python/cpython,109607,issue-108303-inspect::main,0,merged,tests::skip news::needs backport to 3.11::,"This PR also moves `ready_to_import` helper to `test/support/import_helper`, because `test_inspect` was importing `test_import`, which is not good at all. <!-- gh-issue-number: gh-108303 --> * Issue: gh-108303 <!-- /gh-issue-number --> ::```suggestion else: sys.modules.pop(name, None) ```::Is it really important to create a temporary directory?::I personally find this a little hard to read. Is it a list of steps being followed? With no punctuation or capital letters I can't tell where something starts and another things begins.::This is not my code, I just moved it :) But, I can totally make it better, since I touch it anyway 👍 ::No idea :)::So, I would prefer to keep it as-is (general semantics).::Thanks!::Can you use relative imports? From . import...::You don't have to change this code to look in parent directory?::No :) This module was excluded from this test explicitly here. But, since now it is not a module, but a package - we can safely remove the ignore rule here.::Ah wait, this file is not moved into test_inspect/, we are good, ok. Nevermind.::@serhiy-storchaka: It would be nice if we could magically generate such function, instead of having to duplicate the same 4 lines in each test_xxx/ test package. Do you think that it would be possible?::",Nikita Sobolev,4660275,4663,5,15,7,11,1,83b6a1dfa6d406eea5143c29ab90f4efab42fe59::9e35f08cfbb5ca23d46dfce1db1b9d7f22b543e1::077ded83a15e60e1bc3d40a6351383e72cfdb118::8d791b9be95d4906fa2f95b59c4a4c6d3e692a91::44bd3782ed0b949952ccb8f50928e2e1a2d45547::
https://api.github.com/repos/python/cpython,109606,gh-109596::main,0,merged,,"<!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-109596 --> * Issue: gh-109596 <!-- /gh-issue-number --> ::```suggestion # Check if there are repeated rules in ""rules"" ```::",Pablo Galindo Salgado,11718525,847,2,1203,1219,7,1,4535f5ed010b77d65dfb87e0690e92d5564de853::9f40575e2bac8fef2d2142b202a6aba5a471b559::
https://api.github.com/repos/python/cpython,109597,checksums::main,0,merged,tests::skip news::,"<!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-109559 --> * Issue: gh-109559 <!-- /gh-issue-number --> ::",Benjamin Peterson,219470,506,1,2,2,1,0,cf714a37d92df241517939b8338486a1c1af9b5f::
https://api.github.com/repos/python/cpython,109591,skip_freeze_pgo::main,0,merged,,"Skip test_freeze_simple_script() of test_tools.test_freeze if Python is built with ""./configure --enable-optimizations"", which means with Profile Guided Optimization (PGO): it just makes the test too slow. The freeze tool is tested by many other CIs with other (faster) compiler flags. test.pythoninfo now gets also get_build_info() of test.libregrtests.utils. <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-103053 --> * Issue: gh-103053 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,1,36,10,5,1,4d93f9ff628d275a65ab75b60e1ecd168f9d4e94::
https://api.github.com/repos/python/cpython,109584,skip_test_perf_profiler_asan::main,0,merged,tests::,"Skip test_perf_profiler if Python is built with ASAN, MSAN or UBSAN sanitizer. Python does crash randomly in this test on such build. <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-109580 --> * Issue: gh-109580 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,1,8,1,2,0,98f33b9462d4a6cb48d19117fe124ac860c66e06::
https://api.github.com/repos/python/cpython,109581,no_lto::main,0,merged,skip news::,"LTO optimization is nice to make Python faster, but _freeze_module and _testembed performance is not important. Using LTO to build these two programs make a whole Python build way slower, especially combined with a sanitizer (like ASAN). <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-90108 --> * Issue: gh-90108 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,1,2,2,1,0,69c34bd3de08f1c661e5d4443209126f515b92f4::
https://api.github.com/repos/python/cpython,109576,configure_asan::main,0,closed,awaiting review::needs backport to 3.11::needs backport to 3.12::,"When Python is configured to use ASAN, MSAN or UBSAN sanitizer, with ""./configure --with-address-sanitizer"" for example, compiler and linker flags for sanitizers are no longer exported to third party C extensions. Add flags to CFLAGS_NODIST and LDFLAGS_NODIST, instead of BASECFLAGS and LDFLAGS. Makefile.pre.in: PY_LDFLAGS_NOLTO now uses PY_LDFLAGS_NODIST, instead of LDFLAGS_NODIST, and add CONFIGURE_LDFLAGS_NOLTO after PY_LDFLAGS_NODIST. <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-109575 --> * Issue: gh-109575 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,1,18,13,4,0,a9da37cf02ed9c1f03ffdae3ba3a65e8181100da::
https://api.github.com/repos/python/cpython,109573,skip_decref_freed_asan::main,0,merged,tests::skip news::,"Skip test_decref_freed_object() of test_capi.test_misc if Python is built with ASAN, MSAN or UBSAN sanitizers. <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-109496 --> * Issue: gh-109496 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,1,2,0,1,0,1b4f3a285909a39a8076a9c1439ccf3f4f91058b::
https://api.github.com/repos/python/cpython,109569,ci-win-ap2gha::main,0,merged,skip news::,"<!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> # Situation now There are two top-level pipelines on Azure Pipelines: * [Azure Pipelines CI](https://dev.azure.com/Python/cpython/_build?definitionId=4) (`ci.yml`) - run post-merge on version branches. This PR makes no changes to it. * [Azure Pipelines PR](https://dev.azure.com/Python/cpython/_build?definitionId=9) (`pr.yml`) - runs for PRs to `main`. This PR makes changes here. The Azure Pipelines CI pipeline does this for Windows: * Build and test for win32 * Build and test for win64 * Some layout tests The Azure Pipelines PR pipeline does this for Windows: * Build and test for win32 * Build and test for win64 * Build for arm64 (but not test because it would need to run on the same architecture) GitHub Actions does this for Windows: * Build and test for win32 * Build and test for win64 # Changes in this PR Azure Pipelines CI pipeline: * Build and test for win32 _(no change)_ * Build and test for win64 _(no change)_ * Some layout tests _(no change)_ Azure Pipelines PR pipeline: * ~Build and test for win32~ _(removed)_ * ~Build and test for win64~ _(removed)_ * ~Build for arm64~ _(removed)_ GitHub Actions: * Build and test for win32 _(no change)_ * Build and test for win64 _(no change)_ * _Add arm64 build_ _(added)_ * Allowed to fail * This now matches what Azure Pipelines PR did # Questions @zooba Couple of questions: * [x] Would you like an arm64 build on Azure Pipelines CI? Edit: No * [x] Do we want the arm64 build on GitHub Actions? Edit: Yes <!-- gh-issue-number: gh-109408 --> * Issue: gh-109408 <!-- /gh-issue-number --> ::",Hugo van Kemenade,1324225,628,3,20,31,2,1,5d9894ec1c67643008f1c981282c341ae75cc35c::2b93f34623cdf44f9f4bfe6cb43aeb8d0e7bec13::47ceaec16f49a880d1f2aa101c01f7e30bc7c2f6::
https://api.github.com/repos/python/cpython,109568,patch-1::main,0,closed,awaiting review::,"Change the comment in first line, used # instead of """""" """""" <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> ::This is a doc string and hence is intentionally a string.::",Arnav Nagpurkar,84492896,8,1,1,2,1,0,7dc57e2882bb560ec1db94abd4c7b445ae6218f1::
https://api.github.com/repos/python/cpython,109567,buildbot_fail_rerun::main,0,merged,skip news::,"<!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-109566 --> * Issue: gh-109566 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,2,4,4,3,0,8dd5a566d8aab474e8dacce50d9650ca8f919d3c::fe69a52cc1d637fcc0eeb08f1f0de37d50fc73c7::
https://api.github.com/repos/python/cpython,109561,backport-f65497f-3.12::3.12,0,closed,skip news::,"(cherry picked from commit f65497fd252a4a4df960da04d68e8316b58624c0) ~Includes the other missing ones.~ <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-109125 --> * Issue: gh-109125 <!-- /gh-issue-number --> ::FYI, we didn't backport the https://github.com/python/cpython/pull/108090 to the 3.12 case_generator is highly dependent on CPython version (They have quite different designs of opcodes and execution detail) so it was not proper to backport it to 3.12 As a result, case_generator will have a quite implementation different per each version.::ditto::Thanks, updated to only include the `Tools/wasm` backport.::",Hugo van Kemenade,1324225,628,2,89,46,7,0,539da8e03c98710d80c9e9bb6b99c62be2c8b6b1::3c0f0f0972e829e37c97d4f3cf1838b0179c2ce1::
https://api.github.com/repos/python/cpython,109556,fix-channels::main,0,merged,skip news::,"This fixes some crashes in the _xxinterpchannels module, due to a race between interpreters. (Backporting this to 3.12 will have to be done in a way that does not introduce the new `_PyCrossInterpreterData_ReleaseAndRawFree()` into the public ABI.) <!-- gh-issue-number: gh-76785 --> * Issue: gh-76785 <!-- /gh-issue-number --> ::",Eric Snow,1152074,290,11,98,67,7,0,fb807e3e4de811d064fa8566ffe6a8b3a57af1ba::e96eefcbcc68bf578edff475f6ee494102ba4b5f::53e102912576e847e7d1135fee4636fd66b8937c::8ef9b959d8059505b8a9ace8f654580a4ae743a3::daa7f32d4b8d8cdd448638c44bea5a8dd6d56e01::5d9445658c2647f25dfd9acee7170434720b1a55::c610c41cfd9cb8f3439e0aa8779e17c9ea71fa51::1d125033320311fec845bf39fb47878fecc63a30::0b5a84aa202a1ebaeeebcbc12e9ba0ad40cd609b::ac9d0dbd0d0b9a0fefefae9a1f3da392ffa695ae::f38f44b314afd0723b522fb1c66e83a9d56aaad5::
https://api.github.com/repos/python/cpython,109539,detect_double_decref::main,0,merged,,"On a Python built in debug mode, Py_DECREF() now calls _Py_NegativeRefcount() if the object is a dangling pointer to deallocated memory: memory filled with 0xDD ""dead byte"" by the debug hook on memory allocators. The fix is to check the reference count *before* checking for _Py_IsImmortal(). Add test_decref_freed_object() to test_capi.test_misc. <!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-109496 --> * Issue: gh-109496 <!-- /gh-issue-number --> ::Is there a chance this could be an actual pointer to deallocated memory, or memory written to by another thread? Would it be safer to just call Py_DECREF on a fake object which is explicitly memset to 0xDD bytes?::I prefer to use a functional test: not mock anything here. This test is very fragile, it makes sure that a dangling pointer has a determinstic behavior. Problem: by definition, it has an undefined behavior :-) But in practice, almost always, the memory should remain around and should just be filled by 0xDD bytes. If tomorrow the test starts to fail randomly, sure, we can rewrite it by ""mocking"" the first DECREF() and just pass memory filled by 0xDD byte pattern. test_capi should not be run in a process with more than 1 thread. libregrtest works hard to make sure that previous tests don't leak tests. Also, it's strongly recommended to run tests with -jN: each test file is run in a fresh process, so with a known number of threads: just 1 :-)::",Victor Stinner,194129,1148,1,56,16,4,0,8ea43e966916dbd563ed96627b23264d5692e43f::
https://api.github.com/repos/python/cpython,109537,libregrtest_cwd::main,0,merged,skip news::,"<!-- Thanks for your contribution! Please read this comment in its entirety. It's quite important. # Pull Request title It should be in the following format: ``` gh-NNNNN: Summary of the changes made ``` Where: gh-NNNNN refers to the GitHub issue number. Most PRs will require an issue number. Trivial changes, like fixing a typo, do not need an issue. # Backport Pull Request title If this is a backport PR (PR made against branches other than `main`), please ensure that the PR title is in the following format: ``` [X.Y] <title from the original PR> (GH-NNNN) ``` Where: [X.Y] is the branch name, e.g. [3.6]. GH-NNNN refers to the PR number from `main`. --> <!-- gh-issue-number: gh-109508 --> * Issue: gh-109508 <!-- /gh-issue-number --> ::",Victor Stinner,194129,1148,1,10,1,1,0,8b7b36719e2bff5039b3b01d5baff94d7d3614b9::
